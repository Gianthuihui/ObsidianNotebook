<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[长脑子了]]></title><description><![CDATA[Obsidian digital garden]]></description><link>http://github.com/dylang/node-rss</link><image><url>lib\media\favicon.png</url><title>长脑子了</title><link/></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Tue, 17 Sep 2024 06:31:53 GMT</lastBuildDate><atom:link href="lib\rss.xml" rel="self" type="application/rss+xml"/><pubDate>Tue, 17 Sep 2024 06:31:51 GMT</pubDate><ttl>60</ttl><dc:creator/><item><title><![CDATA[Beast 1.8简易手册-修订版]]></title><description><![CDATA[ 
 <br>原创&nbsp;ZhouZJ&nbsp;生信雀<br>编者寄语：<br>&nbsp;&nbsp;&nbsp; 《Beast 1.8简易手册》是笔者学习beast软件（版本1）使用过程所写的笔记，后梳理成文，初稿完成于2019年1月3日，最初在语雀上分享，期间经历过一些修改，后面搬到了微信公众号（微信公众号上修改困难）。<br>&nbsp;&nbsp;&nbsp; 总得来说，这份笔记，结合Beast软件的官方说明书以及一些官方教程，参考了一些文献及其他人的教程，还算一份还不错的beast入门手册。<br>&nbsp;&nbsp;&nbsp; 当然，最初笔者是以做笔记的心态去写它，加上初出茅庐，一些地方难免有错或表述不当，或有待补充。<br>&nbsp;&nbsp;&nbsp; 初稿完成后，随着之后两年多的实战和深入学习，对一些东西也有了新的理解及体会，经验也丰富了很多。期间曾想过从头到尾修改一次，但每次想到手上繁重的工作，只能望而止步。<br>&nbsp;&nbsp;&nbsp; 然而，Beast软件的使用和分析属于系统发育分析里的一个难点（因涉及太多数学知识），但也是热点。因此，一份正确且高效的教程是刚需，也十分珍贵。<br>&nbsp;&nbsp;&nbsp; 不知不觉，两年间，关注和阅读这份笔记的人越来越多，语雀上的累积点击量也达到了7千多。<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaUDayISTGFDric8SHRWP4xOibAuOW1STic1TBMZqypDhXSxcSlw8CibVGZA/640?wx_fmt=png&amp;wxfrom=13&amp;tp=wxpic" referrerpolicy="no-referrer"><br>&nbsp;&nbsp;&nbsp; 考虑到这些，深感肩上责任重大，于是利用暑假宝贵的休息时间，进行了一次修订，增加，删除，修改了一些内容。  <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 但是，因为笔者目前学识和见识仍旧有限，可能还是会存在一些不当之处，如有，欢迎及时与我反馈，一起交流学习。  <br><br>修订版的主体和原来的基本保持一致，内容没有太大变化，修补版如下（语雀上也同步更新了，可去查看）：  <br><br>&nbsp;&nbsp;前言:&nbsp;Beast是用来进行贝叶斯MCMC分析的一系列合集软件，其主要组成程序有BEAUti、BEAST、Tracer、TreeAnnotator、FigTree， 这几个软件的组合使用常用来重建MCC树（Maximum Clade Credibility Tree），即最大可信进化分枝树。此外，还有诸如SpreaD3、Tempest、PiBUSS、LogCombiner、TreeStat之类的分析软件。<br>&nbsp; &nbsp;本文分两个部分，暂时先依据软件说明书简单介绍Beast v1.8程序包里（BEAUti、BEAST、Tracer、TreeAnnotator、FigTree）各软件的功能及其参数的含义，再以示例数据重建带有分子钟的MCC树。<br>&nbsp; &nbsp;Beast功能较多，Beast其他软件包的使用及Beast的其他功能后期再整理上传，本文则主要介绍构建带有分子钟的MCC树。<br><br>参考文献：《A Rough Guide to BEAST 1.4》、《Bayesian hylogenetics with BEAUti and the BEAST 1.7》、《Relaxed Phylogenetics and Dating with Condence》<br><br><br>&nbsp; &nbsp;BEAST系列软件的特点总的来说是参数设置（BEAUti）、数据运行（BEAST）、收敛诊断（Tracer）、树的获取（TreeAnnotator）、树的展示和美化（FigTree）分别在不同的程序中进行，而BEAUti便是这众多步骤中的第一步，也是最为关键的一步。<br><br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDa7J1ymqibxM3IRNETMzQnpxEZNyNXllTTf9qqDNGWa2dHGwSUISof6eg/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer">如上图，打开BEAUti后，通过点击“File”,选择“Import Data”导入待分析的序列数据，请注意必须是.nex格式的文件（该格式具体请参考下面附件）。<br>📎BEAST软件计算分化时间.pdf<br>如何将其他格式比如.fasta格式的序列文件转成.nex格式的序列文件？推荐使用软件BioAider里的Seqformat Convertor功能（<a data-tooltip-position="top" aria-label="https://github.com/ZhijianZhou01/BioAider%EF%BC%89" rel="noopener" class="external-link" href="https://github.com/ZhijianZhou01/BioAider%EF%BC%89" target="_blank">https://github.com/ZhijianZhou01/BioAider）</a><br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDacVJVcpTtmLw6XfIcC2t6YxNMZ3W7ZlqRqq3f5l2ic5g6ZZKlzDtUFQw/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><br>可以看到，上图红色方框部分，序列数据被分成了两个部分，这是因为在原始的.nex序列数据里对数据定义了分区，将序列数据分成了两个部分，如下：<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDa4wLSswaN1k8DE7ic0HbvUQu1iaNN1IKLaDHxFeSd1D7cgb2cvKiaCzicYQ/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer">注：BEAUti也可直接导入fasta格式的序列，直接拖进BEAUti面板即可。<br><br>&nbsp; &nbsp;这个选项用可以在序列数据中设置分类单元子集，并估计设置的分类子集的 最近共同祖先分化时间 （time to most recent common ancestor，即tMRCA），并且还可以在相应的分化时间上设置先验分布。这些分类子集可以代表多物种分析中的不同物种或者同一物种内在地理上孤立的种群。请注意，设置为同一分类子集的序列，并不能保证该组会在最终的MCMC分析中，对于其他分类群是单系的。<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDacIicR2Ep0cfrtmp6xHOiaibYv7A4icnhvLtTzlaiaUu2SjOOiaKoBkzPX2fA/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"> “+”按钮添加分类子群，详解见上面附件“BEAST软件计算分化时间.pdf”，需要注意的是：“Included Taxa”里的序列将用于估算tMRCA的日期。同时，还需要注意的是 “Excluded Taxa”里的序列可能在也可能不在同一进化分枝里。<br>Taxa选项的实际意义是：<br>
（1）如果需要估算一些分类子集（谱系或者分枝）的最近共同祖先分化时间，可以在这里来设置，把需要估计的分类子集放进 “Included Taxa” 里；<br>（2）如果已知一些分类子集（谱系或者分枝）的共同祖先分化时间，可以用这些已知的信息来校正分子钟（又叫节点校准），也是同样选取分类子集，把它们放进“Included Taxa”里，之后在“Priors”菜单里设置对应tmrac参数的先验（范围）。<br>需要注意的的是，Mono（单系群）和Stem的校准点是不一样的：<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaPvnhvzk3FGoCoicUPHkmWL6b8m5c0tOb97ODXhcuctECIibfQQeDCeeA/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>在进化树上体现如下图：<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaZ04SfEZvOy14CJfj8dqbMAia5sjzSbibbsVLE3l26GE8AxJ8icaF59Nrw/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><br>&nbsp; 该选项用来导入序列的采集时间，后期可以将序列采样时间用于分子钟校准。比如病毒这样的生物，我们可以使用它们的采样时间，填入beast里，来校准分子钟。<br>①点击“Tip”选项，在“Use tip dates”前打钩出现如下图：<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDa5I5S3Dic7U7HY0nwrW6O0OE52AQLHmgboVlps5FiaibZ6marP0Adu9vMw/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer">②序列（名称）和采样日期的对应，可以通过导入单独的“序列名称和日期对应表”，或者对序列名称进行特殊的命名，再从序列名称里提前。本文示例采用后面一种方式：<br>如果你在序列名称里加了时间信息，可以自动获取，比如你的序列名称为Tarsiussyrichta_2011.09这样的年份.月份的格式，可以使用 “Guess Dates” 选项将第1个_后面的字符读取为采集时间（日期），同时将日期格式改为yyyy.MM。<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaiaWC28Nohh4iboQ3FTmGCha4qNNYyoQtGiaYfZfQE3O0s6LdEyNJAkJbw/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>采样日期识别如下：<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaLiaVz51lWWzrLcHewIbK13QFszAaAibIia19lXLHJytyJ2B3ic0stMpiaTA/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>此时“Date”这一列显示的是日期的十进制格式，这里要注意稍微检查下日期转换是否有明显的错误。<br>注：因为示例数据是病毒数据，且是以“年”为单位，因此这里要选择“Years”和“Since some time in the past”。<br>For radiocarbon dates(, only enter the absolute date value, not the associated error. The dates entered need to be specified as&nbsp;“Years” and “Before the present”&nbsp;from the “Dates specified as” menu.<br>For&nbsp;viral data sets, dates will most commonly be calendar years (e.g., 1984, 1989, 2007, etc.) or perhaps<br>
months or even days since the start of the study and need to be specified as“Years”, “Months” or “Days” and&nbsp;“Since some time in the past”&nbsp;.<br>② 还可以为每个日期时间设置精确度，也就是误差范围，通过点击“Set Precision”来弹出设置。<br>以上图示例序列数据为例，因为其时间单位是“年”，所以如果设置为1，精确度则为1年。<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaRU5ZfoIyzBSCgHUfA5IzLYzCRia6eQJHkrnw2AFargvFGt4O8qkd7qA/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>③&nbsp;Height这一列指的是每个序列相对于最年轻序列的年龄高度。对于有时间数据的序列，软件会自动将最近采集的（即最年轻的，最现代的）序列的height（age）作为0（For non-dated sequences, all heights will be zero）。<br>④ 软件对数值单位保持全过程统一性<br>&nbsp; &nbsp;示例数据的日期是以“年”为单位，其实，不管使用什么时间单位来指定日期，beast都将在整个分析过程中保持一致。例如，如果你输入的是以百万年为单位的日期数值，这个时候0.1就代表实际的100,000年，那么所有结果里的日期和速率都将以 My（百万年）作为单位来提供。（例如，在My作为基本单位时，进化速率的数值0.01表示0.01 subs/site/My，换算成年份作为单位就是1.0E-8 subs/site/year）。<br>⑤ 对于日期数据处理的注意点：<br>（i）删除没有日期的序列;<br>（ii）找到有同位素标记的祖先DNA序列或者找有公布日期的DNA序列;<br>（iii）可以利用地理知识估算DNA序列的平均年龄；比如大多数沿海沼泽地矿床的年龄不到6000年，因此在这里发现的化石生物的平均年龄大约为3000年。<br><br>①对于分区数据的模型设置，因为不同分区可能设置不同的模型参数，故在设置模型前，先点击菜单栏Partitions ，然后再Ctrl+鼠标左键选中两个分区，再点击“Unlink susets.Models”,即分区数据不关联模型。**（非分区数据跳过该步骤）。<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaCn8SE6UtdVwrFrFFKONibLPxiaEszNOHQtyrQtBxRiavQHA9ibp7J974GA/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer">②再点击菜单栏“Sites”设置进化模型<br>&nbsp;进化模型主要有两部分组成，一是核苷酸（或氨基酸）替换模型（Substitution Model），二是不同位点间速率异质性模型（Site Heterogeneity Model，即位点之间有没有替换速率的差异）。<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDab5iaxfzbQXcgbczSvmNMRvXECUPJ3bic1Qvvr1cYqOGL2m0RJ0Ep8bqQ/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer">如图，如果是分区数据，可对每个分区设置模型及参数。这些模型一般是通过其他软件比如jmodelTest（核苷酸序列）或protTest（氨基酸序列），或者ModelFinder（核苷酸和氨基酸均可，推荐） 测出。<br>③关于替换模型及位点变异速率模型，这里不再啰嗦，前面的教程都提到很多，需要注意的是：<br>（i）当序列是编码区和非编码区的组合时，数据分区非常有用。<br>（ii）GAMMA位点变异速率的shape值， 对于Gamma分布而言，其有一个关键参数，叫shape值。当shape值很小时，不同位点变异速率曲线呈L型，多数位点缓慢进化（小的替换速率），少数位点快速进化（高的替换速率）；shape值较大时，不同位点变异速率曲线呈钟型曲线，多数位点进化速率相同，差异小。<br>（iii）针对编码区密码子分区这里：<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaMF4pjRKXB6OxDeKTAAOWqaribkianGcCia90VHAL8hyawB6UjicgIYJBag/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>默认密码子分区是关闭的，“（1+2），3” 的意思一共分成两个区，所有序列密码子的第一和第二个碱基在同一区，第三个碱基单独一区；而1，2，3 的分区方式是一共分成3个区，密码子的每个碱基分别在不同区。<br>（iv）密码子的第1、2个碱基比第3个碱基进化速率小。<br>④关于SRD06 Model<br>点击这个模型后会自动设置相关参数，需要注意的是这个模型适合编码区序列。<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaicloa9jaEA4mPTZMnH81QnHIBibFX6LmdRJgHX5SppMwvnibtwibVxcLmg/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>⑤固定平均变异速率（Fix mean substitution rate）<br>请注意：这个选项在Beast v1.4版本和2.0版本系列才有，v1.8版本和1.10.4里没有。<br>（i）当没有化石校准数据并且想要设置这个选项时，此选项是使用已知的替换（或突变）速率（substitution/mutation rate） 来代替;<br>（ii）如果将此设置成1.0将导致内部节点的估算是以substitution/site为单位的。默认是1，当分析的目标是系统发育重建并且对系统发育的时间框架不感兴趣时，这通常是合适的。<br><br>&nbsp; 这个菜单可以让你为树上不同分支之间的进化速率变化选择适当的模型，你选择的模型将用于估算每个节点的替换速率、taxon分类群的tMRCA（如果有的话）、treeModel.rootHeight（represents tMRCA for the root of the phylogeny）。<br>点击菜单栏Clock , 如下：<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaFWfPJwCibOge6zQDyqau1Qh5uqfxW8wAWWLDZicH9SaoZt1VeN29ibKAw/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaHgLzh7lt3YAzvLM5LCaJGM8eic9r17RnmkficyKUCY61LQO2t86icT6kg/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>一共有以下几种分子钟模型：<br>① 严格分子钟（Strict Clock）。<br>&nbsp; &nbsp;严格分子钟采用全局 clock 速率且假定在树的谱系之间没有差异，即不同枝有着相同的进化速率。严格的分子钟通过以下任何一种方式来校准：<br>（i）指定一个变异速率。如果选择了“Strict Clock”，在Priors菜单栏下会有clock.rate参数，可以调节这个参数。<br>（ii）对Priors菜单栏的tmrac指定一个先验，或者设置“treeModel.rootHeight”值。<br>② 宽松分子钟（Uncorrelated Relaxed Clock），又分为 Lognormal（对数正态）、 Exponential（指数）、Gamma分步。宽松分子钟假定不同枝有着各自的进化速率，宽松的分子钟之所以称为“Uncorrelated”，是因为宽松分子钟在各谱系的进化速率和祖先之间没有已知的相关性（priori correlation ）。<br>③随机局部分子钟（Random local Clock）。<br>
④固定局部分子钟（Fixed local Clock）。<br>如何判断自己的数据适合宽松的分子钟还是严格的分子钟？（此处复制From高芳銮教授QQ空间日志教程）<br>&nbsp; &nbsp;方法一：可以先用uncorrelated relaxed lognormal clock配合默认参数配置个xml文件，MCMC链长不需要很大，运行结束后，将xx.log文件通过Tracer导入查看coefficientOfVariation（或ucld.stdev）值， 如果该值接近0，说明数据适合严格分子钟，反之说明数据适合宽松分子钟。<br>&nbsp; &nbsp;方法二：通过贝叶斯因子法（Bayes Factor, BF）来比较分子钟模型和树先验（tree prior）模型之间的组合的边际似然值(Marginal Likelihood)，通过BF法分析后，哪个模型对应的LnL值越大，相对更优,此方法既可以确定分子钟模型，也可以用于确定哪种树先验模型更加适合自己的数据。具体也可以通过以下操作来确定：在Tracer 中同时导入两个模型的xx.log 文件，选中所有要比较的模型后，依次点击菜单Analysis---&gt;Model Comparation，Analysistype改为Harmonic mean，Reps=100，最后根据获得的BF值（BF=Pr(D|M1)/Pr(D|M2)至少大于3，则说明M1&gt;M2）范围判断模型间的优劣程度。<br>&nbsp;&nbsp;&nbsp;方法三（更新）:&nbsp;同样是采用比较分子钟模型和树先验（tree prior）模型之间的组合的边际似然值(Marginal Likelihood)，但是不使用BF法，而是采用path sampling（路径采样）分析，相比BF法，path sampling更加精准。（参考文献：Improving the accuracy of demographic and molecular clock model comparison while accommodating phylogenetic uncertainty)。<br>&nbsp;在Beast1版本里启用路径采样分析方法如下图：<br>&nbsp; &nbsp;<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDauxl3cIu1H43YfRhfDI8SgbdSZf6xfPiacxPvQT1Zx9pYCgpQ6YVzuzA/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>“Setting”里配置如下：<br>&nbsp;<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaZ8Wfyy8kicicZuNMKTSrsR5h18DvMqYUZQdkGss3ZBovnIia6tZ3raZxg/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><br>&nbsp; &nbsp;树先验，该选项用于设置种群或者物种规模随时间的变化模型。<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaWLXFmkVxFu1vJxJZVdLRP16RX36BZKOm71nq9mJvUjDiaE3v1eMMX4w/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer">①&nbsp;如果序列是收集至种内随机交配的种群，在这种假设下，可以使用各种溯祖理论下的树先验来模拟种群大小随时间的变化。<br>（i）常见的种群规模随时间有三种增长方式，恒定大小/规模（constant size）、指数增长（exponential growth）、对数增长（logistic growth）， 具体用哪一种取决于你在分析时做的假设。<br>（ii）此外，还可以使用Bayesian skyline plot（BSP，贝叶斯天际线）种群增长模型，即随着时间（与世代间隔呈常数相关）的推移，计算有效的繁殖种群大小（Ne）。<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaEABRZKUcicCrKIzZyujSJqVaQew8LapnabyF6ZzMgwqE8c0fqerJCicA/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>BSP使用的范围：序列数据中包含非常强烈的种群历史相关的信息，或者种群统计历史不是主要感兴趣的对象并且一个带有最少假设的灵活的溯祖树先验是可取时。这种基于溯祖理论的树先验只需要指定允许在种群历史中进行多少离散变化。<br>the BSP should only be used if the data are strongly informative about population history, or when the demographic history is not the primary object of interest and a flexible coalescent tree prior with minimal assumptions is desirable. This coalescent-based tree prior only requires you to specify how many discrete changes in the population history are allowed.<br>BSP模型会估算一个种群统计函数，这个函数具有一个指定步骤数，对每个步骤中的变化点和种群规模在所有时间的积分。<br>另外还提供了两个BSP的变异模型，即：<br>constant模型表示种群规模在变化点之间是常量，然后瞬间跳跃（population is constant between change-points and then jumps instantan）。<br>而linear模型表示种群规模在变化点之间呈线性增长或下降（the population grows or declines linearly between change-points）。<br>上面列出的所有种群统计模型都是树中节点年龄的参数先验。<br>②对于物种水平（species-level）的系统发育分析（序列来源于不同的物种），溯祖先验（coalescent priors）通常是不合适的，需要使用物种形成模型。建议使用Yule Process，这是一种纯粹的出生模型，所有的世系都有可能分裂成两个后代世系。Yule Process假定每个系谱都有一个指定的常量速率，通过“yule.birthRate”（the average net rate of lineage birth）参数来指定。<br>
yule先验参数（yule.birthRate）通常被认为是描述物种形成的净速率，在这种先验下，分枝长度将以指数分布和yule.birthRate−1来被估计。<br>④具体如何选择哪一种合适的Tree priors，一方面取决于所用的数据（比如来源于相同物种用种群模型，或来源于不同物种用物种模型）。例如，来源于相同物种的不同种群数据，但是不知道使用恒定种群规模还是指数增长，还是BSP，可以做模型比较（上面第（6）部分已经给出方法）。需要注意的是，如果是进行发散时间定年和突变速率估算，则应注意树先验有可能影响突变速率估算。<br>关于Tree priors，笔者在目前已经发表的一些文章中也注意到，在病毒学研究中（注意这句话，后面说的都是病毒），即使是来源于不同物种的毒株序列，也经常见到使用种群相关的溯祖（Coalescent）理论模型（比如BSP等）。倒不是说用错了，根本原因在于，种群和物种从其定义来看，指的是能有性繁殖的生物，而病毒是无性繁殖。病毒的分类由ICTV根据一些保守基因的同一性来划分科属种，相比于动物这样的有性繁殖生物，病毒没有严格的种群和物种这样的概念，于是从广义上来看，即使是来源于不同物种的毒株序列，某些情况下，使用溯祖（Coalescent）理论相关的树先验模型，也有一定的合理性（个人拙见，有错误烦请告知）。<br><br>&nbsp; &nbsp;设置先验优缺点并存。优点是比如可以将相关知识如已知的化石校准点或者已有文献里的一些分析结果，作为先验值纳入分析，而缺点则是先验如果设置不当可能会影响后验，进而影响最终的结果，设置不当有可能得到一个错误的结果，比如对进化速率，分歧时间等等这些值的估计。<br>&nbsp;&nbsp;&nbsp;在设置“先验”前，需要明白“先验”含义，以及它与“后验”之间的关系。（软件用户）通过给定一个先验（本质就是给定一个取值范围），随后mcmc从先验中进行抽样，得到后验值（即估算的结果）。 有趣的是，Beast最终估算的结果是在你给的范围内。<br>&nbsp; 这个时候会有人说了，这样岂不是可以人为最终控制结果？答案是肯定的，但是没办法，贝叶斯推断就是需要先验，感兴趣的可以去了解下贝叶斯推断的原理，这里不展开。<br>&nbsp; &nbsp;参数的先验设置是一门大学问，其设置是否合适，取决于使用这个软件的熟练程度，以及对自己研究内容以及前人的一些研究结果等等的基本了解，实在不知道怎么设置，可以使用默认值，但是依据笔者的经验，如果需要估算分歧时间，“进化速率”这个参数的先验请谨慎对待它，往往不太建议使用默认值，对它的先验范围也不要设置太宽，仅仅放在这里作为参考。<br>&nbsp; &nbsp;下面仅介绍下“先验”设置里一些参数的含义：<br>&nbsp;①clock.rate<br>这个参数是严格分子钟的速率参数，仅仅在严格分子钟模型下使用。该参数的单位是substitutions/site /unit time。如果该参数设置为1，那么进化树枝长度的单位是substitutions/site。如果进化树的内部节点是通过化石数据来校正的，且这些化石数据 的是millions of years ago (Mya，百万年),&nbsp;此时clock.rate这个参数的单位是substitutions per site per million years (subs/Myr).<br>&nbsp;②constant.popSize<br>&nbsp;只有在菜单栏“Trees”里面选择了“constant size” , 菜单栏“Prior”下面才会出现这个选项。<br>&nbsp;This parameter represents the product of effective &nbsp;population size (Ne) and the generation length in &nbsp;units of time（τ） .If time is measured in generations &nbsp;this parameter a direct estimate of Ne.<br>&nbsp;If&nbsp;clock.rate&nbsp;is set to 1.0 then&nbsp;constant.popSize&nbsp;is &nbsp;an estimate of Neμ for haploid data such as mitochondrial &nbsp;sequences and 2Neμ for diploid data, where μ is &nbsp;the substitution rate per site per generation.<br>&nbsp;③covariance（协方差）<br>这个统计值是用来计算宽松分子钟下的进化树里亲代分枝和子代分枝进化速率的协方差。<br>&nbsp;（i）如果这个值是正数，表明在你的系统发育树里，进化速率快的分枝旁边的分枝进化树速率也快。<br>&nbsp;（ii）如果这个值接近0，表明进化速率快的分枝旁边的分枝进化树速率慢。这也意味着这个系统发育史里没有很强的进化速率自我校准。<br>④exponential.growthRate<br>&nbsp;指数生长速率。只有在菜单栏“Trees”里面选择了“Exponential Growth”，菜单栏“Prior”下面才会出现这个选项。<br>⑤exponential.popSize<br>表示在指数增长下当前的种群规模。<br>⑥gtr.{ac,ag,at,cg,gt}<br>这个参数仅仅当你选择GTR进化模型时才会在“Prior”下面出现。即A↔C, A↔G, A↔T, C↔G and G↔T。<br>⑦hky.kappa<br>这个参数表示转换/颠换的比值（transition/transversion ratio）。仅仅当你选择HKY85进化模型时才会在“Prior”下面出现。<br>⑧meanRate<br>仅仅用于宽松分子钟，它的含义是整棵树上估计的每个位点的替换数除以估计的整棵树的长度（the estimated number of substitutions &nbsp;per site across the whole tree divided by the estimated &nbsp;length of the whole tree in time），表示单位时间内每个位点的平均替换数，它有着和严格分子钟里的clock.rate参数相似的含义。<br>⑨siteModel.alpha<br>GAMMA替换速率的alpha（或叫shape）值，仅仅当选择 GAMMA替换速率时才会在“Prior”下面出现。<br>⑩siteModel.pInv<br>表示不变位点比例（the proportion of invariant sites），范围是0到1，含义是数据中的某些位点从未经受任何进化上的改变，其进化速率是相同的。注意，不变位点比例，不是指不发生变异的位点的比例，而是指进化速率相同的位点的比例。<br>⑪treeModel.rootHeight<br>即“the age of the root of the tree”，这个参数表示树总的高度。这个变量的单位和进化树中分枝长度的单位相同（因为beast中的分枝长度已经代表时间），其最终值取决于进化速率的校准，或者加上节点分化时间的校准。<br>For divergence time estimation, calibrations are made by placing priors on the treeModel.rootHeight and tmrca(taxon group) parameters.<br>For modern sequences, dates of divergence are set by creating priors on either internal nodes or the overall rate of substitution.<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaFb0G3AL8iabHk9fSK9tfaOytDIY7Je2YDABdaon0m2LTavqmiaib5kz0g/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer">⑫ucld.mean<br>这个参数表示的是对数正态（lognormal）宽松分子钟下的平均分枝速率（mean of the branch rates）。这个参数和上面的meanRate有点相似但是不是相同的。如果<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_svg/JcDicrZBlREhyicibFBfsibGVeSKTcUC7oZxg1GL0aBWfH6fgOhLqZFsmooFiczfgFo7iaMzB6ichqWz9zDeluLTrIB4b2dbT0EIO9S/640?wx_fmt=svg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer">是第<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_svg/JcDicrZBlREhyicibFBfsibGVeSKTcUC7oZxejvHI5c7PXQCc52bX6oTImgnGdMrSzL431H78XCze2yCWnr4pzrmU1HVWVMXx4VE/640?wx_fmt=svg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer">个分支上的速率，则ucld.mean是：<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDanDdbmS0k3YZKib3mVgK5fKpv6MWib93Fhu1xIbwL1WK5nuw2gm3TYaBA/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>当你为对数正态宽松分子钟设置设置先验时，可以调节ucld.mean或meanRate这两个参数中的一个，但是注意不是两个都调（因为它们通过<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_svg/JcDicrZBlREhyicibFBfsibGVeSKTcUC7oZxg1GL0aBWfH6fgOhLqZFsmooFiczfgFo7iaMzB6ichqWz9zDeluLTrIB4b2dbT0EIO9S/640?wx_fmt=svg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer">参数高度相关）。<br>⑬ucld.stdev<br>这个参数表示的是对数正态（lognormal）宽松分子钟下的标准差参数。如果这个参数为0，表示所有分枝的进化速率没有差异，言外之意这些序列数据实际上适合严格的分子钟。如果这个参数大于 1，则分支速率的标准偏差大于平均速率。<br>如果在软件“Tracer”里查看这个选项的频率直方图，如果频率直方图不和0接近且分枝间的进化速率存在差异，则表明这些数据适合宽松的分子钟，并推荐使用宽松的分子钟，示例如下（ucld.stdev=0.342）：<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaBTeH8JicKeJ6Puwl47hDfBzntM3BCCBy1Sezpviaeu8ktdnjwFCqjDHQ/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>⑭yule.birthRate<br>这个参数是Yule模型里的谱系出生率（the rate of lineage birth）。如果&nbsp;clock.rate是 1.0，那么这个参数估计的谱系出生数量（the number of lineages born）来自于parent lineage/substitution/site。<br>⑮tmrca(taxon group)<br>当你在“Taxa”选项里定义了分类子集，在“Prior”里设置“tmrca”这个参数或者设“treeModel.rootHeight”会起到同样的效果。<br><br>&nbsp; Beast里使用马尔科夫-蒙特卡洛进行抽样（采样），通过给定参数的先验分布（又叫取值范围），来估算参数最终的结果（也叫“后验值”），因此，需要一个函数来模拟或者描述参数的先验。常用的有均匀分布，正态分布和对数正态分布。<br>&nbsp; ① 均匀分布（Uniform） &nbsp;<br>&nbsp; &nbsp;使用均匀分布作为参数的先验时，可以设置参数的最大值和最小值，初始值必须介于最大值和最小值之间。<br>&nbsp; ② 正态分布（Normal）<br>&nbsp; 这个分布先验允许参数从指定的正态分布中选择值，并具有指定的均值和标准差。<br>&nbsp;<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDajd4Xkz7icHq43qtVamnKEtjJaEkib8ylbsXicYnPmnBF9oibYgKujkV0Yw/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>可以通过上面的曲线分布，获知你的参数取值的分布情况。<br>③对数正态分布（Lognormal）<br>&nbsp; 这个分布先验允许参数从指定的对数正态分布中选择值，并具有指定的均值和标准差（以对数单位）。<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaH11JuLCFkicR0EejKNnJvHqB3wzO1GLwsS3KcntQqU2hY99yeEPrOPQ/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>此时填入的值是经过对数化的。比如Mean这个值，你参考其他人的研究来填这个值，如果其他人给出的值是真实值，你如果选择了对数正态分布，这里需要先取对数后，再填进去。<br>当然，如果你觉得做对数计算麻烦，也可以选择填入真实值（没有取对数的），不过需要先勾选“Mean In Real Space”，之后可直接填入真实值 。<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaA9GxSVVT24ibA6KdjLGdmMDpxeIrkEtViaOFngBryhoz8pj83hvWfXibQ/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><br>&nbsp;①Tuning<br>更改这个选项下的数字将更改移动的大小，这将影响MCMC算法接受该更改的频率。<br>②weight<br>The weight column specifies how often each operator is used to propose a new state in the MCMC chain。<br>&nbsp;③Auto-optimize<br>The “auto optimize” option will automatically adjust the tuning parameters &nbsp;of operators as the MCMC algorithm runs，建议选择这个。<br><br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaLJlBhpSlcTzDmVW8WxO2bb3SwwqllzYQRI9bziaFj3RR6PSfvyrcl0A/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>&nbsp;① Length of chain<br>&nbsp;指的是MCMC分析运行的总代数。可以通过以增加代数来提高ESS值（Effective Sample Size）使参数收敛。同时，增加采样频率也可以提高ESS值，但是过于采样频繁也不会提高ESS值。<br>&nbsp; 那么对于不同条数的序列，总代数设置多少合适？一个粗略地计算是：总代数=3000 x 序列条数的平方。比如你有100条序列，总代数至少设置为30,000,000代；同理200条序列，总代数至少设置为120,000,000代。<br>&nbsp;② Log parameters every<br>多少的马尔科夫链的参数记录在日志中，表示采样频率，即多少代生成一个样本。这个值的设置受Length of chain影响，最主要的一点需要保证最后的样本最少得有10,000个。<br>&nbsp;样本数量=Length of chain（总代数） ÷ Log parameters every（采样频率）<br>③ Echo state to screen<br>&nbsp;将状态摘要输出到BEAST控制台窗口的频率。<br>④ The (subst)tree<br>The (subst)tree file will be &nbsp;a tree file with the branch lengths in units of substitutions.生成带有枝长的树。<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaPYSh2gt9ldpP5437oeSPn0ZYPGZCS54Utqjw9a8lRwsO1KSPRs8ObQ/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><br>&nbsp;所有参数设置完毕后，点击下图红色方框按钮，生成用于后续BEAST运行的XML文件。<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDacZkrzVib0blrYPHjoP0r7c82e7iaz1APB5sSXia4jCtdQo4IW5nSbElCg/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><br><br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDa5bZb6F6BOpPWLk50D6weA7pdm66N33QK0leym3LYfX28YwSKlyOGew/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><br>&nbsp; （i）BEAGLE library 的运行需要你安装一系列运行环境，它的功能是充分利用计算机资源来跑数据，如果你的计算机处理能力还可以，比如内存还算大，这个完全可以不选。需要注意的是，有些分析强制（必须）使用Beagle, 这里不拓展。<br>&nbsp;相关BEAGLE library知识及安装：<br>&nbsp; ①<a rel="noopener" class="external-link" href="http://beast.community/beagle#running-beast-with-beagle" target="_blank">http://beast.community/beagle#running-beast-with-beagle</a><br>&nbsp; ②<a rel="noopener" class="external-link" href="https://ericmjl.github.io/beast-gpu-tutorial/" target="_blank">https://ericmjl.github.io/beast-gpu-tutorial/</a><br>&nbsp; ③Linux系统上安装Beagle教程：<a rel="noopener" class="external-link" href="https://www.yuque.com/wusheng/gw7a9p/sq0sqo" target="_blank">https://www.yuque.com/wusheng/gw7a9p/sq0sqo</a><br>&nbsp; (ii) 如果你在软件BEAUti的MCMC选项里选择了生成带有枝长的树（The subst tree），当BEAST运行结束后，至少会生成下面4个文件：<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDatJfIqWcPhCP5n7WUZFTUp4qrMx3SbD41heZ5MQYYTqlickAUOLYh8LA/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>&nbsp;第①个文件是带有枝长的树文件，第②个文件是不带枝长的树文件，第③个文件是日志文件，第④个文件是相关的参数设置记录。<br><br>&nbsp;参数收敛的标准是查看各参数的ESS值是否大于200，ESS&gt;200才收敛。将上述第③个日志文件（Primates.log.txt）导入到软件Tracer中，如下：<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDa4QWg9z5EFCTlY3aPUM1EYzYPvzKnEmncaGga65lXcZchLNwN9LA3Eg/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>&nbsp;图中ESS值小于200的参数，即为没有收敛的参数。<br>&nbsp;对于提高参数的ESS值，官网给出的处理策略是：增加代数，或增加抽样频率，或合并多个独立运行链的结果。<br>&nbsp;笔者在实际使用中发现，**提高整体参数的ESS值，在保证10000个以上样本的前提下，最好用的方法是**：样本数先不变，增加抽样频率，将默认的1000调整为2000或5000或者1万等（此时运行总代数也会随之增加），若再不收敛，最后运行多个独立链，一般为2-4个，再合并多个独立运行链的结果。<br>如果最终还是有个别参数难以收敛，则重新配置XML文件，在“Operators”菜单里增加该参数的weight值，一般加大为原来的10倍。<br><br>&nbsp;① 打开软件TreeAnnotator，如下图1所示：<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaaMDbXmPiatvA3PoibxnVT0NwXiaUmU7QVTBhMicum51q52icwb5X7MyltAg/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaKW5WSuM8O5NyotoMoJ8ASjmiby7piaX4JbnpYHkO9pibjCJWZOw0p4OtQ/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;图1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;图2<br>②&nbsp;Burnin(as trees)**指的是舍弃的样本数(树数），**Burnin(as trees)=总代数 ÷ 采样频率 x 舍弃样本比例。如果舍弃样本比例取10%。对于本文的示例数据，由于总代数设置为10000000、 采样频率为1000，故舍弃样本数设置为1000（图2）。<br>Burnin（as states）,舍弃的状态数，比如设置了1000万代，舍弃比例为10%，那么舍弃状态数则为100万代。<br>Posterior probability limit&nbsp;意思是后验概率低于多少的数值不在树枝上显示，我们一般设置为0.5。（图2）<br>Target tree type**即想要建的树的类型，默认为MCC树（最大可信进化分枝树），如果想要其他类型的树，可选择第二个选项，并指定一个类型的树文件。**（图2）<br>&nbsp;Node heights:**即节点高度的类型，可以选择中位数或者平均值等等。推荐使用默认的中位数，因为均值容易受到极值的影响。**<br><br>将上述TreeAnnotato运行结果生成的MCC树文件（如果你选是的生成MCC树）用软件FigTree打开，如图：<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaAwA3KZAMuUibStx3KMX62c7ibmcAqNV0MmzTWt2OSUrDdicqRbypX8L6g/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><br>&nbsp;①&nbsp;Appearance→Colour→rate<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaibxB6DpJHpxgevvPBWjeAucmeNA5iaEUO98sdTbFI4x8zgAJOsIuHfWA/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>②导入速率比色卡<br>Legend→Attribute→rate<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDa3Vgeko9TFOibcp3XhiatIibgohzibS998xh6ej7QCQOhDu3XQxZ8Jz84cQ/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><br><br><br>&nbsp;①第一步：先勾选Scale Axis,再勾选Reverse Axis,如下图：（请点击放大更清晰）<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaZ8cRUAXNoAUFqmqT2Xvm9S48YnyibuXXthbRXg6J9BFAFxUFeVOzOXg/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>②第二步：将Time Scale&nbsp;里的Offset by填上你用于分析的序列的最近日期。<br>想将图中的另一标尺如上图中的0.04去掉怎么处理？<br>这个简单，将Scale Bar前面的的√去掉就行。效果如下图：<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDabVn4NicOVsSicgNL5SzBOIVUyFSg5bCPZ4O7peGk15xNPfBricTN1xPbA/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><br>&nbsp; 建议将后验概率显示在枝上，先勾选**Branch Labels**，再将**Display**选择为**posterior，如下图（一棵带有时间标尺的MCC树**）：<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDadbqQbMic8g0f23L0R4WKsGBZkYd7hO89uMFbzMFWibe3zWoib1R7gKtVg/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><br>Node这里选择Node ages<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaiaBuXyQw2h8XYAVwaFMC7EiboxocSoqBO0gO5yxXWhMau4HcJCpgagZw/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><br>&nbsp;对于&nbsp;Appearance这个选项下面的子选项还有许多意外的功能，请多多尝试。<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaK2icVpI2ia1bs9lKX4MV1OJNmsJQb3zBytMOIxlibFVeqBLJ1R8PqNNpw/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><br><br><br>&nbsp;格式如下图，如果想构建带有时间标尺的MCC树，还需要在序列名称上带上时间标签为后续做准备。<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDa7wwm7eMiaG3GytpZQHB7fQ6MEb0DWMRTfK592XNxb7mDdvaNRW2HicWA/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><br>&nbsp; &nbsp;BioAider里的Seqformat Convertor序列格式转化功能：<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaYJica0h1icGUS6Sia7hAia0lzib17diauficPvXicicZYgC4Skl7p7Xr1rfdgeA/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><br>&nbsp; 由于上面我们的序列排列为顺序式（sequential），为了和交互式排列进行区别（interleave）故推荐在下面位置加上一个代码&nbsp;interleave=no：<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDay1Kn58DLyB1c1mxUh7s4fnrRR2AKYmEH0tdrZGCRS9GgZAvcMZ9VIA/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>&nbsp;&nbsp;请注意：如果是分区数据建树，则需要在代码块最后部分加上分区信息。本示例不做分区数据建树。<br><br>File→Import Data,选择.nex格式的序列文件。<img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaBDvz6HQeiaNKibrLDiaE3sgBvwRqUHWTwZee0nGaiaNEttXhRJlCyTKibJg/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><br>这个设置并不是所有分析都需要设置，有需要才设置，本示例不设置这个。<br><br>①在将这些**病毒序列的采样时间进行分子钟校准前**，需要先判断分析数据集中是否有足够的时间信号（Temporal signal）可用于校准。  <br>&nbsp;常用的判断方法有3种：<br>（i）做“根到节点的遗传距离图”，可以通过软件Treetime（推荐）或者<br><br>（ii）使用日期随机化检验（date-randomization test），详细请参考下面附件里的教程：  <br>📎日期随机化检验（分子钟校准前）.pdf<br>笔者曾经用过这种方法，说实话，这种方式计算量也大很慢，之后再也不想用这种方法。  <br>（iii）最近新出了一个软件叫BETS，用来检验数据集的时间信号，据说效果不错，笔者尚未研究，大家可以去试试。  <br>②笔者**假设（请注意这个词）示例数据具有较好的时间结构（即基本符合严格分子钟），我们通过点击“Tip”设置序列采集日期，具体设置方法请见前面部分。（Use tip dates→Guess Dates→**）<br><br>（1）在这一步之前，请先用模型软件比如jmodeltest/modelfinder（针对核苷酸序列）或者prottest/**modelfinder**(氨基酸序列）计算出序列的最适模型。<br>本文假设所用模型软件是jmodeltest同时基于BIC标准且序列最佳模型是下面：![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br>特别注意：①R(a)即Rate [AC]；R(b)即Rate [AG]；R(c)即Rate [AT]；R(d)即Rate [CG]；R(e)即Rate [CT]；R(f)即Rate [GT]，因为新版的jmodeltest在这里全部简写了。<br>&nbsp;②gamma后面的数值0.7340即gamma的shape值或者叫做alpha值。<br>③p-inv即不变位点比例（the proportion of invariant sites）。<br>①②③里的这些参数对于Beast v1.8是在菜单栏“Priors”里面进行设置，后面会提到；而如果是Beast v2.0系列，则直接在模型这里就可以设置。<br>则软件里的对应的模型参数设置为下面：![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br>（2）&nbsp;如果模型软件测出的进化模型，在这里没有对应的选项怎么办？<br>那么可以先在这里选一个模型，后续生成XML文件后，再在XML文件的模型那部分的代码进行相应的修改。<br>为了方便理解，先将上述示例进化模型（GTR+GAMMA+I)在XML文件里对应的代码部分提前放在这里：<br>![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br>![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br>&nbsp;但是，你会发现比如果是其他核苷酸替换模型，比如HKY模型，还会有其他地方不一样：<br>![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br>所以， 如果需要自定义模型还是比较复杂的，可能定义得不对，各进化模型之间的相似点和区别请参考笔者转载的一篇文章“替换模型速查（IQ-TREE）”或者见下附件：<br>📎Setting DNA substitution models in BEAST.docx<br>笔者的建议是，先看看你的进化模型和BEAUti里已有的进化模型哪个最接近，再用BEAUti里最近的那个进化模型先配置个XML文件，最后再对XML文件里的进化模型部分的代码进行微调改成你需要的那个进化模型。<br><br>（1）如何判断自己的数据适合宽松的分子钟还是严格的分子钟前面已经给出方法。<br>（2）本文假设你已经完成（1）的步骤，且数据适合宽松分子钟，则参数进行如下设置：<br>![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br><br>本文假设**种群数量是恒定的，选择Constant Size.**![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br><br>点击菜单栏“Priors”，如下：![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)&nbsp;&nbsp;&nbsp;设置参数先验，前提是你知道这些先验信息，否则选择默认就行。<br>&nbsp;对于本次示例数据**（**请注意这句话**），我们可以根据jmodeltest的结果对模型参数进行先验设置**如下：<br>（1）碱基转换速率设置<br>![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br>![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br>其他的同样操作，这部分的最终结果如下：![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br>（2）alpha值设置![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br>（3）p-inv设置![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br>总之，设置任何参数的先验，前提是你有途径或者数据得出。<br><br>&nbsp; 这部分的设置总的来说，因不同数据而异，“总代数=3000 x 序列条数的平方”这个公式仅仅只是粗略地估算（请注意这句话）。<br>&nbsp;但是，最主要的一点需要保证最后的样本最少得有**10,000个**。<br>&nbsp;样本数量=Length of chain（总代数） ÷ Log parameters every（采样频率）<br>![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br><br>点击下方红色方框按钮，生成XML文件。![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br>![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br>请注意：如果有报错信息，会在上图红色方框处的位置有“！”或者其他颜色字体之类的提示。上图没有错误提示。<br><br>（1）打开上面生成的XML文件，**不勾选**BEAGLE library,点击运行<br>![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br>（2）请泡上一杯茶，耐心等待结果，直至所有代数跑完。<br>![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br>在linux上也可以使用命令行执行beast，代码如下：（进入beast所在目录）<br>$./beast &nbsp;-beagle_off &nbsp;1.xml<br>其中-beagle_off指不使用BEAUGLE<br>其他参数如下：<br>![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br>linux上beast怎么顺序运行多个xml文件，用；号隔开每个命令，如下：<br>$./beast &nbsp;-beagle_off &nbsp;1.xml；./beast &nbsp;-beagle_off &nbsp;2.xml；./beast &nbsp;-beagle_off &nbsp;3.xml<br>linux上beast怎么同时运行多个xml文件，用|号隔开每个命令，如下：<br>$./beast &nbsp;-beagle_off &nbsp;1.xml|./beast &nbsp;-beagle_off &nbsp;2.xml|./beast &nbsp;-beagle_off &nbsp;3.xml<br>同时运行这种方式不推荐，建议顺序运行。<br><br>这个请参考前面部分，不再重复。<br><br>这个请参考前面部分，不再重复。<br><br>这个请参考前面部分，不再重复。<br>示例数据效果图如下：<br>![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br><br>BEAST分析过程中，断电了怎么办？<br>BEAST 1.x 系列没有断点续行功能，可以更名后重新运行，最后合并前后运行的数据；BEAST 2.x 系列有断点续行功能，可以追加运行，有点类似于Mrbayes里的Checkpoint功能。<br>![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br><br><br>起始树的似然为 0 或小于可以使用双精度浮点数表示的最小正数。<br>这种情况一般当序列比较多，比如超过100条时容易发生。一般是某个或者某些参数的取值范围设置不当引起，比如起始树不符合某些 tMRCA 先验的最大值或最小值，也会发生这种情况。这种情况下，把 tMRCA 先验或者进化速率先验的取值范围调宽点就行。<br>另外，可以通过命令行的方式打开和运行beast（代替鼠标双击），这样在程序出错时崩溃时会在终端显示详细的报错信息，也能帮助我们排错。<br><br>当数据量多导致计算量非常大时，会出现这种情况。<br>① 对于windows系统，可以先打开“命令提示符”，以更大的Java内存来运行beast，示例如下：<br>java -Xms1024m -Xmx1024m -jar lib\beast.jar<br>可以把调用的最小内存（Xms）和最大内存（Xmx）都调高，示例都调成了1024M，也就是1G，实际中可以给更多的运行内存（取决于你的电脑配置）。<br>②&nbsp;对于linux系统，beast这个程序文件其实是可以用文本编译器打开的，打开后，直接在末尾java内存这里的参数进行修改：<br>![图片](data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg width='1px' height='1px' viewBox='0 0 1 1' version='1.1' xmlns='<a rel="noopener" class="external-link" href="http://www.w3.org/2000/svg'" target="_blank">http://www.w3.org/2000/svg'</a> xmlns:xlink='<a rel="noopener" class="external-link" href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg" target="_blank">http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' fill-opacity='0'%3E%3Cg transform='translate(-249.000000, -126.000000)' fill='%23FFFFFF'%3E%3Crect x='249' y='126' width='1' height='1'%3E%3C/rect%3E%3C/g%3E%3C/g%3E%3C/svg%3E)<br>可以发现，软件默认值给的还是非常低的。<br>对于Linux版本的其他软件，比如TreeAnnotator等，可以以同样的方式调大调用的Java内存。<br>最后的话：beast这个软件功能非常多，是很多分析的载体，笔者这里写的这些仅仅是入门的冰山一角，加上Beast 1.x系类和Beast 2.x之间不是简单的升级关系，谁也替代不了谁，需要在实践中不断学习这个软化，并反复读它们的相关原版说明书！<br>转载请注明出处。如有错误，欢迎及时与我反馈，一起交流学习。<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;2019年1月3日初稿<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 最近修改时间：2021年8月30日<br><img src="https://mmbiz.qlogo.cn/mmbiz_jpg/IRKUUtq7IibricDF1fhWnnSrfrntX9UHRKXP84P49bibI92DwQvkVd8XnZ5tDaDo7sDZK6dz2BeMZP4CnlrdjRQBQ/0?wx_fmt=jpeg" referrerpolicy="no-referrer"><br>ZhouZJ<br>&nbsp;给单身狗攒点以后的彩礼钱吧！&nbsp;<br><img alt="赞赏二维码" src="https://mp.weixin.qq.com/s?search_click_id=7249337266528248567-1726542764679-4987405402&amp;__biz=MzU0NjEwNjQxMw==&amp;mid=2247484105&amp;idx=1&amp;sn=3fe28959d896666b4155a11842087455&amp;chksm=fb63ff8bcc14769d24ed130b610af8a1a21c954048c887af14ae2f8376871be11b69a5965597&amp;key=daf9bdc5abc4e8d0c56e83931b9368008b0333c4f89b59b7e3b354fcb01619fe76461df43dead3af9a9b74bb35fd45b17bb88c95ec1cd8463313f4d9b471297b70f0348c01fe7176bbda414de7f5f6b6d71ca08575c286f8d941b6d4ea8c7887177b785e4984348392c794974fdffaedecb3a49a95edbe6eb82d0762873e4d0b&amp;ascene=0&amp;uin=MTgxNzc3NTMwMg%3D%3D&amp;devicetype=Windows+11+x64&amp;version=63090c04&amp;lang=zh_CN&amp;countrycode=CN&amp;exportkey=n_ChQIAhIQpKXTroGpL4WOvHIp1O1EnhLmAQIE97dBBAEAAAAAAEqjOXb1IZcAAAAOpnltbLcz9gKNyK89dVj00JE%2FGV4bA0%2Bn5HUSUff27VhWI09TbYdPw%2FbIf%2BXC69DS4of8osYoV7jWsYMF1t3JRhuS1%2F99KK%2B2vPox5X%2FzXAG0uHe1JNX6icGkoCBSGItY5uXRXTAhPw8KX2I1qMIXBnza3%2B4Da3Yc2hiyK2z39b8d15MaGQ7VlesfqTvYPJ%2BjqGRT4Z4FQNH7vCWb%2FYDwGbTanbQYe1g3jg0MMN4pec3K615Bpy6hXJltiUB4nqpZxaJPfoZabk63RdWiBz9E&amp;acctmode=0&amp;pass_ticket=YVjhF1M8r4KV0hejGJSSkpdmQNHxQwDspy6G%2BYjOAaHUhD4%2Frh1F9XfqKkL%2BKmnG&amp;wx_header=1&amp;fasttmpl_type=0&amp;fasttmpl_fullversion=7382228-zh_CN-zip&amp;fasttmpl_flag=1" referrerpolicy="no-referrer">喜欢作者<br>2人喜欢<br><img src="http://wx.qlogo.cn/mmopen/icgJxsbsqRNHDNyT9HjJ39APBcibG2cdbvmPC3T7ErpCmM11qnGaDXalib6RfPcjiahkH1yCaBsThbOOfcicAdcqxib6BRac0yjgG8/64" referrerpolicy="no-referrer"><img src="http://wx.qlogo.cn/mmopen/Lhic8KSlulmrtwH5sLZfWBzDiaUibpdibPl0J3h6ibsA53JG5MOVxeib5O3KM1Y3181a6dPQTCAOItLPoqJoOkzQDU9w/64" referrerpolicy="no-referrer"><br>阅读&nbsp;2876<br>​<br>写留言<br>留言 43<br>
<br>包子
  2021年9月7日
  赞1
  哪有视频呀，求视频"可怜" 未创建，点击以创建。(<a rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)
  置顶
  生信雀
  作者2021年9月8日
  赞1
  往期推文里有提到<br>

<br>！
  2021年8月30日
  赞2
  感谢大佬"社会社会" 未创建，点击以创建。(<a data-tooltip-position="top" aria-label="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%E5%85%88%E7%9C%8B%E8%A7%86%E9%A2%91%E5%9C%A8%E7%9C%8B%E8%BF%99%E4%B8%AA%EF%BC%8C%E4%B8%8A%E6%89%8B%E5%BE%88%E5%BF%AB" rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%E5%85%88%E7%9C%8B%E8%A7%86%E9%A2%91%E5%9C%A8%E7%9C%8B%E8%BF%99%E4%B8%AA%EF%BC%8C%E4%B8%8A%E6%89%8B%E5%BE%88%E5%BF%AB" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)先看视频在看这个，上手很快</a>
  置顶
  生信雀
  作者2021年8月30日
  赞
  多发Paper"机智" 未创建，点击以创建。(<a rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)<br>

<br>冷冷今天也很快乐
  2021年8月30日
  赞1
  先跑到留言区给大佬点个赞！
  置顶
  冷冷今天也很快乐
  2021年8月30日
  赞
  感谢大佬造福了这种数据分析小白"太阳" 未创建，点击以创建。(<a rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)
  生信雀
  作者2021年8月30日
  赞
  不谢不谢"奸笑" 未创建，点击以创建。(<a rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)<br>

<br>李美丽
  2021年10月10日
  赞1
  希望编者多出一些生信教程，写的太好了"流泪" 未创建，点击以创建。(<a data-tooltip-position="top" aria-label="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E6%B5%81%E6%B3%AA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E6%B5%81%E6%B3%AA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E6%B5%81%E6%B3%AA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E6%B5%81%E6%B3%AA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E6%B5%81%E6%B3%AA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E6%B5%81%E6%B3%AA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)![[流泪]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)![[流泪]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)![[流泪]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)
  生信雀
  作者2021年10月11日
  赞2
  编者被科研虐待得死去活来<br>

<br>张天琦
  内蒙古2022年12月3日
  赞1
  可以出一spread3怎么用的教程吗"流泪" 未创建，点击以创建。(<a rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)<br>

<br>EVANGELION_罗植森
  2022年2月15日
  赞1
  老师，您好，我想问问在设置校准点时候，用lognormal，其中校准点可以在网上查，但是mean值和stdev值怎么算出来，是填多少呢？
  生信雀
  作者2022年2月16日
  赞
  勾选真实值那个钩<br>

<br>EVANGELION_罗植森
  2021年12月21日
  赞1
  请问，我跑的是5000万代，5000抽样，我ess＜200，然后我用多次run的结果合并，合并到27000万代看到是可以达到200的。就是我想问的是后面的树呢？因为我的树好像就只有我5000万代，5000抽样的树结果，而不是27000万代吧。"流泪" 未创建，点击以创建。(<a data-tooltip-position="top" aria-label="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%E5%A6%82%E6%9E%9C%E8%80%81%E5%B8%88%E7%9C%8B%E4%B8%8D%E6%87%82%E6%88%91%E7%9A%84%E9%97%AE%E9%A2%98%E7%9A%84%E8%AF%9D%EF%BC%8C%E6%88%91%E4%B9%9F%E4%B8%8D%E7%9F%A5%E9%81%93%E6%80%8E%E4%B9%88%E8%A1%A8%E8%BE%BE%E4%BA%86!%5B%5B%E6%B5%81%E6%B3%AA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%EF%BC%8C%E5%85%88%E8%B0%A2%E8%B0%A2%E8%80%81%E5%B8%88%E4%BA%86%EF%BC%81%E7%9C%8B%E4%BA%86%E6%95%99%E7%A8%8B%E8%B5%B7%E7%A0%81%E6%87%82%E4%BA%86%E4%B8%80%E7%82%B9" rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%E5%A6%82%E6%9E%9C%E8%80%81%E5%B8%88%E7%9C%8B%E4%B8%8D%E6%87%82%E6%88%91%E7%9A%84%E9%97%AE%E9%A2%98%E7%9A%84%E8%AF%9D%EF%BC%8C%E6%88%91%E4%B9%9F%E4%B8%8D%E7%9F%A5%E9%81%93%E6%80%8E%E4%B9%88%E8%A1%A8%E8%BE%BE%E4%BA%86!%5B%5B%E6%B5%81%E6%B3%AA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%EF%BC%8C%E5%85%88%E8%B0%A2%E8%B0%A2%E8%80%81%E5%B8%88%E4%BA%86%EF%BC%81%E7%9C%8B%E4%BA%86%E6%95%99%E7%A8%8B%E8%B5%B7%E7%A0%81%E6%87%82%E4%BA%86%E4%B8%80%E7%82%B9" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)如果老师看不懂我的问题的话，我也不知道怎么表达了![[流泪]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)，先谢谢老师了！看了教程起码懂了一点</a>
  生信雀
  作者2021年12月23日
  赞
  树文件一样合并。<br>

<br>李金燕
  2021年8月30日
  赞1
  太厉害了，不明觉厉
  生信雀
  作者2021年8月30日
  赞1
  从读研修修改改，写到了读博"捂脸" 未创建，点击以创建。(<a data-tooltip-position="top" aria-label="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%E3%80%82%E9%9D%92%E6%98%A5%E5%B0%B1%E8%BF%99%E6%A0%B7%E5%86%99%E6%B2%A1%E4%BA%86!%5B%5B%E5%9D%8F%E7%AC%91%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%E3%80%82%E9%9D%92%E6%98%A5%E5%B0%B1%E8%BF%99%E6%A0%B7%E5%86%99%E6%B2%A1%E4%BA%86!%5B%5B%E5%9D%8F%E7%AC%91%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)。青春就这样写没了![[坏笑]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)
  李金燕
  2021年8月30日
  赞
  遇到如此优秀的同门师弟是何其幸运啊"强" 未创建，点击以创建。(<a data-tooltip-position="top" aria-label="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E5%BC%BA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E5%BC%BA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E5%BC%BA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E5%BC%BA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)![[强]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)![[强]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)<br>

<br>果酱少女
  北京2023年11月7日
  赞
  请问腾讯课堂里有安装教程吗以及Spread3的使用<br>

<br>Demons
  北京2023年4月10日
  赞
  您好，我想问一下勾选了“The (subst)tree file will be a tree file with the branch lengths in units of substitutions.生成带有枝长的树”这个选项会增加后续Beast的运行时间吗？另外，出来的这个 (subst)tree树有什么用吗？谢谢！感激不尽！
  生信雀
  作者2023年4月14日
  赞
  时间差不多，不带时间信息，当贝叶斯树使用<br>

<br>茗韵
  山西2023年4月3日
  赞
  老师，化石点信息的选取，一般在哪里可以找到呀？
  生信雀
  作者2023年4月3日
  赞
  参考文献<br>

<br>^O^
  宁夏2023年1月4日
  赞
  老师，就是在用beast跑xml文件的时候，选中文件后run就不见了，是什么原因呢？
  生信雀
  作者2023年4月3日
  赞
  不知道。<br>

<br>陈辰
  广东2022年12月18日
  赞
  作者您好。这份教程里“如果￼是第￼个分支上的速率，则ucld.mean是：”是不是有两个地方文字没有显示出来？
  生信雀
  作者2023年4月3日
  赞
  可以去语雀上看我的博客，那里是显示完全的<br>

<br>茗韵
  山西2022年11月22日
  赞
  好的谢谢大佬<br>

<br>果果郭郭锅锅
  湖北2022年11月3日
  赞
  大佬知道哪里下载1.8.2版本吗？
  生信雀
  作者2022年11月20日
  赞
  这个版本没有用过<br>

<br>茗韵
  山西2022年11月1日
  赞
  请教一下大佬，用化石点标定时候，选取化石的数量以及要选取哪些化石，有什么选择依据吗？"合十" 未创建，点击以创建。(<a data-tooltip-position="top" aria-label="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E5%90%88%E5%8D%81%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E5%90%88%E5%8D%81%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)![[合十]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)
  生信雀
  作者2022年11月20日
  赞
  这个就自己把控了，没有标准的<br>

<br>顾浔
  重庆2022年10月22日
  赞
  请教您一个问题，ModelFinder得出的最优模型为HKY，但是Besat2里面需要填写Kappa值我无法在结果文件中确认等于多少。我只了解到Beast2里面HKY的Kappa值指的是ti/tv，那Kappa值是否就是用变异速率计算，即Kappa=(rateAG+rateCT)/(rateAC+rateAT+rateCG+rateGT)？
  生信雀
  作者2022年11月20日
  赞
  不需要管，让它自己去估算<br>

<br>元元🐰
  澳大利亚2022年6月26日
  赞
  博主 求问视频课程在哪里 需要报名"苦涩" 未创建，点击以创建。(<a data-tooltip-position="top" aria-label="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E8%8B%A6%E6%B6%A9%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%E5%AE%89%E8%A3%85%E8%BF%99%E4%B8%80%E6%AD%A5%E5%B0%B1%E6%8A%8A%E6%88%91%E9%9A%BE%E4%BD%8F%E4%BA%86" rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E8%8B%A6%E6%B6%A9%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%E5%AE%89%E8%A3%85%E8%BF%99%E4%B8%80%E6%AD%A5%E5%B0%B1%E6%8A%8A%E6%88%91%E9%9A%BE%E4%BD%8F%E4%BA%86" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)![[苦涩]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)安装这一步就把我难住了</a><br>

<br>洛羽
  2022年4月22日
  赞
  大佬您好，我想知道怎么下载文章里的附件。
  生信雀
  作者2022年4月24日
  赞
  <a rel="noopener" class="external-link" href="https://www.yuque.com/wusheng/gw7a9p/ke1mdu" target="_blank">https://www.yuque.com/wusheng/gw7a9p/ke1mdu</a><br>

<br>龙行龘龘
  2021年12月23日
  赞
  请问，如果Beast1分析得到的树文件，有些节点没有置信区间正常吗
  生信雀
  作者2021年12月24日
  赞
  不正常<br>

<br>L
  2021年12月14日
  赞
  滴滴，大佬我想问一下，我跟着手册步骤进行操作可是生成不了有效的xml文件，一直报错，显示先验分布为零之类的"捂脸" 未创建，点击以创建。(<a data-tooltip-position="top" aria-label="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%EF%BC%8C%E6%88%91%E6%83%B3%E9%97%AE%E9%97%AE%E8%BF%99%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3%EF%BC%9F%E8%A7%86%E9%A2%91%E6%B6%89%E5%8F%8A%E8%BF%99%E4%B8%80%E5%9D%97%E7%9A%84%E9%97%AE%E9%A2%98%E5%90%97%EF%BC%9F" rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%EF%BC%8C%E6%88%91%E6%83%B3%E9%97%AE%E9%97%AE%E8%BF%99%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3%EF%BC%9F%E8%A7%86%E9%A2%91%E6%B6%89%E5%8F%8A%E8%BF%99%E4%B8%80%E5%9D%97%E7%9A%84%E9%97%AE%E9%A2%98%E5%90%97%EF%BC%9F" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)，我想问问这怎么解决？视频涉及这一块的问题吗？</a> 热切盼望大佬回复"抱拳" 未创建，点击以创建。(<a rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)
  生信雀
  作者2021年12月17日
  赞
  文末有解决方案，认真读下哈<br>

<br>一颗黏豆包
  2021年9月15日
  赞
  d大佬🧍‍♂️想看视频课，现在还能有团购价嘛"加油" 未创建，点击以创建。(<a data-tooltip-position="top" aria-label="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E5%93%87%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E5%93%87%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)![[哇]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)
  生信雀
  作者2021年9月19日
  赞
  没有了哈，知识无价。后期交流成本也高。<br>

<br>赵彬
  2021年8月31日
  赞
  谢谢大佬分享。。<br>

<br>已无更多数据<br><a data-tooltip-position="top" aria-label="javacript:;" rel="noopener" class="external-link" href="javacript:;" target="_blank"></a><br><img src="http://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuia2tPIIY8dd3wwHvdvEvZuZcjTTmmTibASE5SlYoeAGJnuRQiasQoMvIcgsbJk5dBoz0Fibib3TyJT6YQ/300?wx_fmt=png&amp;wxfrom=18" referrerpolicy="no-referrer"><br>生信雀<br>关注<br>267212<br>43<br>写留言<br>留言 43<br>
<br>包子
  2021年9月7日
  赞1
  哪有视频呀，求视频"可怜" 未创建，点击以创建。(<a rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)
  置顶
  生信雀
  作者2021年9月8日
  赞1
  往期推文里有提到<br>

<br>！
  2021年8月30日
  赞2
  感谢大佬"社会社会" 未创建，点击以创建。(<a data-tooltip-position="top" aria-label="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%E5%85%88%E7%9C%8B%E8%A7%86%E9%A2%91%E5%9C%A8%E7%9C%8B%E8%BF%99%E4%B8%AA%EF%BC%8C%E4%B8%8A%E6%89%8B%E5%BE%88%E5%BF%AB" rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%E5%85%88%E7%9C%8B%E8%A7%86%E9%A2%91%E5%9C%A8%E7%9C%8B%E8%BF%99%E4%B8%AA%EF%BC%8C%E4%B8%8A%E6%89%8B%E5%BE%88%E5%BF%AB" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)先看视频在看这个，上手很快</a>
  置顶
  生信雀
  作者2021年8月30日
  赞
  多发Paper"机智" 未创建，点击以创建。(<a rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)<br>

<br>冷冷今天也很快乐
  2021年8月30日
  赞1
  先跑到留言区给大佬点个赞！
  置顶
  冷冷今天也很快乐
  2021年8月30日
  赞
  感谢大佬造福了这种数据分析小白"太阳" 未创建，点击以创建。(<a rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)
  生信雀
  作者2021年8月30日
  赞
  不谢不谢"奸笑" 未创建，点击以创建。(<a rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)<br>

<br>李美丽
  2021年10月10日
  赞1
  希望编者多出一些生信教程，写的太好了"流泪" 未创建，点击以创建。(<a data-tooltip-position="top" aria-label="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E6%B5%81%E6%B3%AA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E6%B5%81%E6%B3%AA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E6%B5%81%E6%B3%AA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E6%B5%81%E6%B3%AA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E6%B5%81%E6%B3%AA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E6%B5%81%E6%B3%AA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)![[流泪]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)![[流泪]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)![[流泪]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)
  生信雀
  作者2021年10月11日
  赞2
  编者被科研虐待得死去活来<br>

<br>张天琦
  内蒙古2022年12月3日
  赞1
  可以出一spread3怎么用的教程吗"流泪" 未创建，点击以创建。(<a rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)<br>

<br>EVANGELION_罗植森
  2022年2月15日
  赞1
  老师，您好，我想问问在设置校准点时候，用lognormal，其中校准点可以在网上查，但是mean值和stdev值怎么算出来，是填多少呢？
  生信雀
  作者2022年2月16日
  赞
  勾选真实值那个钩<br>

<br>EVANGELION_罗植森
  2021年12月21日
  赞1
  请问，我跑的是5000万代，5000抽样，我ess＜200，然后我用多次run的结果合并，合并到27000万代看到是可以达到200的。就是我想问的是后面的树呢？因为我的树好像就只有我5000万代，5000抽样的树结果，而不是27000万代吧。"流泪" 未创建，点击以创建。(<a data-tooltip-position="top" aria-label="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%E5%A6%82%E6%9E%9C%E8%80%81%E5%B8%88%E7%9C%8B%E4%B8%8D%E6%87%82%E6%88%91%E7%9A%84%E9%97%AE%E9%A2%98%E7%9A%84%E8%AF%9D%EF%BC%8C%E6%88%91%E4%B9%9F%E4%B8%8D%E7%9F%A5%E9%81%93%E6%80%8E%E4%B9%88%E8%A1%A8%E8%BE%BE%E4%BA%86!%5B%5B%E6%B5%81%E6%B3%AA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%EF%BC%8C%E5%85%88%E8%B0%A2%E8%B0%A2%E8%80%81%E5%B8%88%E4%BA%86%EF%BC%81%E7%9C%8B%E4%BA%86%E6%95%99%E7%A8%8B%E8%B5%B7%E7%A0%81%E6%87%82%E4%BA%86%E4%B8%80%E7%82%B9" rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%E5%A6%82%E6%9E%9C%E8%80%81%E5%B8%88%E7%9C%8B%E4%B8%8D%E6%87%82%E6%88%91%E7%9A%84%E9%97%AE%E9%A2%98%E7%9A%84%E8%AF%9D%EF%BC%8C%E6%88%91%E4%B9%9F%E4%B8%8D%E7%9F%A5%E9%81%93%E6%80%8E%E4%B9%88%E8%A1%A8%E8%BE%BE%E4%BA%86!%5B%5B%E6%B5%81%E6%B3%AA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%EF%BC%8C%E5%85%88%E8%B0%A2%E8%B0%A2%E8%80%81%E5%B8%88%E4%BA%86%EF%BC%81%E7%9C%8B%E4%BA%86%E6%95%99%E7%A8%8B%E8%B5%B7%E7%A0%81%E6%87%82%E4%BA%86%E4%B8%80%E7%82%B9" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)如果老师看不懂我的问题的话，我也不知道怎么表达了![[流泪]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)，先谢谢老师了！看了教程起码懂了一点</a>
  生信雀
  作者2021年12月23日
  赞
  树文件一样合并。<br>

<br>李金燕
  2021年8月30日
  赞1
  太厉害了，不明觉厉
  生信雀
  作者2021年8月30日
  赞1
  从读研修修改改，写到了读博"捂脸" 未创建，点击以创建。(<a data-tooltip-position="top" aria-label="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%E3%80%82%E9%9D%92%E6%98%A5%E5%B0%B1%E8%BF%99%E6%A0%B7%E5%86%99%E6%B2%A1%E4%BA%86!%5B%5B%E5%9D%8F%E7%AC%91%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%E3%80%82%E9%9D%92%E6%98%A5%E5%B0%B1%E8%BF%99%E6%A0%B7%E5%86%99%E6%B2%A1%E4%BA%86!%5B%5B%E5%9D%8F%E7%AC%91%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)。青春就这样写没了![[坏笑]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)
  李金燕
  2021年8月30日
  赞
  遇到如此优秀的同门师弟是何其幸运啊"强" 未创建，点击以创建。(<a data-tooltip-position="top" aria-label="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E5%BC%BA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E5%BC%BA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E5%BC%BA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E5%BC%BA%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)![[强]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)![[强]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)<br>

<br>果酱少女
  北京2023年11月7日
  赞
  请问腾讯课堂里有安装教程吗以及Spread3的使用<br>

<br>Demons
  北京2023年4月10日
  赞
  您好，我想问一下勾选了“The (subst)tree file will be a tree file with the branch lengths in units of substitutions.生成带有枝长的树”这个选项会增加后续Beast的运行时间吗？另外，出来的这个 (subst)tree树有什么用吗？谢谢！感激不尽！
  生信雀
  作者2023年4月14日
  赞
  时间差不多，不带时间信息，当贝叶斯树使用<br>

<br>茗韵
  山西2023年4月3日
  赞
  老师，化石点信息的选取，一般在哪里可以找到呀？
  生信雀
  作者2023年4月3日
  赞
  参考文献<br>

<br>^O^
  宁夏2023年1月4日
  赞
  老师，就是在用beast跑xml文件的时候，选中文件后run就不见了，是什么原因呢？
  生信雀
  作者2023年4月3日
  赞
  不知道。<br>

<br>陈辰
  广东2022年12月18日
  赞
  作者您好。这份教程里“如果￼是第￼个分支上的速率，则ucld.mean是：”是不是有两个地方文字没有显示出来？
  生信雀
  作者2023年4月3日
  赞
  可以去语雀上看我的博客，那里是显示完全的<br>

<br>茗韵
  山西2022年11月22日
  赞
  好的谢谢大佬<br>

<br>果果郭郭锅锅
  湖北2022年11月3日
  赞
  大佬知道哪里下载1.8.2版本吗？
  生信雀
  作者2022年11月20日
  赞
  这个版本没有用过<br>

<br>茗韵
  山西2022年11月1日
  赞
  请教一下大佬，用化石点标定时候，选取化石的数量以及要选取哪些化石，有什么选择依据吗？"合十" 未创建，点击以创建。(<a data-tooltip-position="top" aria-label="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E5%90%88%E5%8D%81%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E5%90%88%E5%8D%81%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)![[合十]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)
  生信雀
  作者2022年11月20日
  赞
  这个就自己把控了，没有标准的<br>

<br>顾浔
  重庆2022年10月22日
  赞
  请教您一个问题，ModelFinder得出的最优模型为HKY，但是Besat2里面需要填写Kappa值我无法在结果文件中确认等于多少。我只了解到Beast2里面HKY的Kappa值指的是ti/tv，那Kappa值是否就是用变异速率计算，即Kappa=(rateAG+rateCT)/(rateAC+rateAT+rateCG+rateGT)？
  生信雀
  作者2022年11月20日
  赞
  不需要管，让它自己去估算<br>

<br>元元🐰
  澳大利亚2022年6月26日
  赞
  博主 求问视频课程在哪里 需要报名"苦涩" 未创建，点击以创建。(<a data-tooltip-position="top" aria-label="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E8%8B%A6%E6%B6%A9%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%E5%AE%89%E8%A3%85%E8%BF%99%E4%B8%80%E6%AD%A5%E5%B0%B1%E6%8A%8A%E6%88%91%E9%9A%BE%E4%BD%8F%E4%BA%86" rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E8%8B%A6%E6%B6%A9%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%E5%AE%89%E8%A3%85%E8%BF%99%E4%B8%80%E6%AD%A5%E5%B0%B1%E6%8A%8A%E6%88%91%E9%9A%BE%E4%BD%8F%E4%BA%86" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)![[苦涩]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)安装这一步就把我难住了</a><br>

<br>洛羽
  2022年4月22日
  赞
  大佬您好，我想知道怎么下载文章里的附件。
  生信雀
  作者2022年4月24日
  赞
  <a rel="noopener" class="external-link" href="https://www.yuque.com/wusheng/gw7a9p/ke1mdu" target="_blank">https://www.yuque.com/wusheng/gw7a9p/ke1mdu</a><br>

<br>龙行龘龘
  2021年12月23日
  赞
  请问，如果Beast1分析得到的树文件，有些节点没有置信区间正常吗
  生信雀
  作者2021年12月24日
  赞
  不正常<br>

<br>L
  2021年12月14日
  赞
  滴滴，大佬我想问一下，我跟着手册步骤进行操作可是生成不了有效的xml文件，一直报错，显示先验分布为零之类的"捂脸" 未创建，点击以创建。(<a data-tooltip-position="top" aria-label="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%EF%BC%8C%E6%88%91%E6%83%B3%E9%97%AE%E9%97%AE%E8%BF%99%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3%EF%BC%9F%E8%A7%86%E9%A2%91%E6%B6%89%E5%8F%8A%E8%BF%99%E4%B8%80%E5%9D%97%E7%9A%84%E9%97%AE%E9%A2%98%E5%90%97%EF%BC%9F" rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)%EF%BC%8C%E6%88%91%E6%83%B3%E9%97%AE%E9%97%AE%E8%BF%99%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3%EF%BC%9F%E8%A7%86%E9%A2%91%E6%B6%89%E5%8F%8A%E8%BF%99%E4%B8%80%E5%9D%97%E7%9A%84%E9%97%AE%E9%A2%98%E5%90%97%EF%BC%9F" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)，我想问问这怎么解决？视频涉及这一块的问题吗？</a> 热切盼望大佬回复"抱拳" 未创建，点击以创建。(<a rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)
  生信雀
  作者2021年12月17日
  赞
  文末有解决方案，认真读下哈<br>

<br>一颗黏豆包
  2021年9月15日
  赞
  d大佬🧍‍♂️想看视频课，现在还能有团购价嘛"加油" 未创建，点击以创建。(<a data-tooltip-position="top" aria-label="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E5%93%87%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" rel="noopener" class="external-link" href="https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)!%5B%5B%E5%93%87%5D%5D(https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif" target="_blank">https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif)![[哇]](https://res.wx.qq.com/mpres/zh_CN/htmledition/comm_htmledition/images/pic/common/pic_blank.gif</a>)
  生信雀
  作者2021年9月19日
  赞
  没有了哈，知识无价。后期交流成本也高。<br>

<br>赵彬
  2021年8月31日
  赞
  谢谢大佬分享。。<br>

<br>已无更多数据]]></description><link>软件操作\分析软件\beast-1.8简易手册-修订版.html</link><guid isPermaLink="false">软件操作/分析软件/Beast 1.8简易手册-修订版.md</guid><pubDate>Tue, 17 Sep 2024 06:30:41 GMT</pubDate><enclosure url="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaUDayISTGFDric8SHRWP4xOibAuOW1STic1TBMZqypDhXSxcSlw8CibVGZA/640?wx_fmt=png&amp;wxfrom=13&amp;tp=wxpic" length="0" type="false"/><content:encoded>&lt;figure&gt;&lt;img src="https://mmbiz.qpic.cn/mmbiz_png/jy1OOeMbHuiaGehVZWHMMrhPXvMVbedDaUDayISTGFDric8SHRWP4xOibAuOW1STic1TBMZqypDhXSxcSlw8CibVGZA/640?wx_fmt=png&amp;wxfrom=13&amp;tp=wxpic"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Adobe绕过通行证检查]]></title><description><![CDATA[ 
 <br>使用 block 掉 adobe.io 域名的所有流量，并允许 lcs-cops.adobe.io 的所有流量 direct 通行即可绕开通行证检查<br>教程 <a rel="noopener" class="external-link" href="https://blog.csdn.net/S1even_2hang/article/details/132163565" target="_blank">https://blog.csdn.net/S1even_2hang/article/details/132163565</a>]]></description><link>软件操作\adobe绕过通行证检查.html</link><guid isPermaLink="false">软件操作/Adobe绕过通行证检查.md</guid><pubDate>Sun, 15 Sep 2024 07:09:37 GMT</pubDate></item><item><title><![CDATA[下载]]></title><description><![CDATA[ 
 <br>视频教程： <a rel="noopener" class="external-link" href="https://www.youtube.com/watch?v=DIiyWkCDKUw&amp;t=277s" target="_blank">https://www.youtube.com/watch?v=DIiyWkCDKUw&amp;t=277s</a><br><br>
<br>
点击链接：<a data-tooltip-position="top" aria-label="https://v2rayssr.com/gui-for-singbox.html" rel="noopener" class="external-link" href="https://v2rayssr.com/gui-for-singbox.html" target="_blank">强大的代理工具！GUI.For.SingBox 的正确食用方式！SingBox 内核配置，规则详细讲解，保姆级教程！ – V2RaySSR综合网</a>

<br>
点击此处进入 github 下载软件 GUI.For.SingBox<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141308939.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
选择 win 版本<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141309307.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
配置过程中需要全程开启 v2rayN，因为需要访问 github。先解压安装包，放在自己的软件盘，双击启动<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141312708.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
设置成中文<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141313500.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141313461.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>
<br>跟着点击设置就行，打开 规则集 和 计划任务<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141321336.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>打开 以管理员身份运行<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141320825.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>还需要在 win11的 个性化 中开启软件的系统托盘<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141318898.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141319662.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>然后在右下角系统托盘，点击 退出，让管理员身份生效<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141320380.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>重新打开软件，点击 设置，更新两个内核<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141404435.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>默认 稳定版 即可<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141406704.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>
<br>点击 插件 ，进入插件中心<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141407135.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>节点转换 是必装的，点击 添加<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141407000.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>回到 概览，点击 快速开始<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141409599.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>输入订阅链接，点击 保存<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141409695.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>
点击 订阅，可以看到下方内容，可以在这里对节点进行编辑<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141415767.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
继续在 概览，点击 启动内核 之后，可以把 v2rayN 关了（清除系统代理）<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141416618.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>点击打开 系统代理，右下角托盘变绿，说明打开了<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141419269.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141419151.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>在配置中，右键，点击 通用设置<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409151516465.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>设置成 WLAN 即可正常使用<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409151517326.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>软件操作\gui.for.singbox下载及配置.html</link><guid isPermaLink="false">软件操作/GUI.for.SingBox下载及配置.md</guid><pubDate>Sun, 15 Sep 2024 07:17:29 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141308939.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409141308939.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[输入文件]]></title><description><![CDATA[ 
 <br><br>只需要准备一个 csv 格式文件，第一列可不要，其他列名必须是：Haplotype 和classification<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407051514129.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>classification 的内容是对群体的分类，比如南北等<br><br>
<br>更改文件路径<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407051522328.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>haplotype_input_file：填入准备的原始单倍群输入文件路径<br>
processed_file：计算的累加频率的中间文件路径，需要更改，但文件本身会删掉<br>
cumulative_file：计算的各级单倍群的累加频率文件<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407051523298.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>manhattan_output_file：指定群体的曼哈顿图频率差值结果<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407051523089.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>
运行代码，填入需要计算的群体<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407051525736.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
输入的依次是减数和被减数，每次输入后按回车即可

<br>
得到曼哈顿图结果<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407051526367.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br><br>import pandas as pd
import os 
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import rcParams
from adjustText import adjust_text

# 定义文件路径
haplotype_input_file = 'C:/Users/LuzHu/Desktop/所有群体原始单倍群.csv'  # 请替换为你的原始单倍群输入文件路径
processed_file = 'C:/Users/LuzHu/Desktop/PROCE.csv'
cumulative_file = 'C:/Users/LuzHu/Desktop/所有群体各级频率总表.csv'  # 请替换为分级单倍群频率输出文件路径
manhattan_input_file = cumulative_file  # 使用第一个代码生成的累加频率文件
manhattan_output_file = 'C:/Users/LuzHu/Desktop/曼哈顿图频率.csv'  # 指定群体的曼哈顿图频率差值结果

# 代码1：生成各级不同分类下的各级单倍群频率
def process_haplotype_data(input_file, output_file, cumulative_file_path):
    # 读取原始数据
    data = pd.read_csv(input_file)

    # 计算每个区域内的每个Haplotype的数量
    haplogroup_counts = data.groupby(['Haplotype', 'classification']).size().reset_index(name='count')

    # 创建数据透视表，将Haplotype作为行，区域作为列
    haplogroup_pivot = haplogroup_counts.pivot(index='Haplotype', columns='classification', values='count').fillna(0)

    # 计算每个区域内每个Haplotype的频率
    haplogroup_pivot = haplogroup_pivot.div(haplogroup_pivot.sum(axis=0), axis=1) * 100

    # 提取Haplotype列表并处理
    haplogroups = data['Haplotype'].tolist()
    processed_haplogroups = []

    # 按规则处理Haplotype
    for haplogroup in haplogroups:
        processed_haplogroups.append(haplogroup)
        while len(haplogroup) &gt; 1:
            haplogroup = haplogroup[:-1]
            processed_haplogroups.append(haplogroup)

    # 去重并排序
    unique_processed_haplogroups = sorted(set(processed_haplogroups))

    # 创建包含处理后Haplotype的新DataFrame
    final_df = pd.DataFrame(unique_processed_haplogroups, columns=['Haplotype'])

    # 合并最终DataFrame和Haplotype频率DataFrame
    proce_df = final_df.merge(haplogroup_pivot, how='left', left_on='Haplotype', right_index=True).fillna(0)

    # 将结果保存到CSV文件
    proce_df.to_csv(output_file, index=False)

    # 清理数据类型
    df_cleaned = pd.read_csv(output_file)
    df_cleaned.iloc[:, 1:] = df_cleaned.iloc[:, 1:].apply(pd.to_numeric, errors='coerce').fillna(0)

    # 获取Haplotype列表
    haplogroups = df_cleaned['Haplotype'].tolist()

    # 初始化累加频率字典
    cumulative_freq = {col: {hg: 0 for hg in haplogroups} for col in df_cleaned.columns[1:]}

    # 定义检查Haplotype是否是另一个Haplotype下级的函数
    def is_descendant(parent, child):
        return child.startswith(parent) and len(child) &gt; len(parent)

    # 缓存 is_descendant 结果
    descendant_cache = {}

    for parent in haplogroups:
        # 先处理 parent 自身的数据
        for col in df_cleaned.columns[1:]:
            if not df_cleaned.loc[df_cleaned['Haplotype'] == parent, col].empty:
                cumulative_freq[col][parent] += df_cleaned.loc[df_cleaned['Haplotype'] == parent, col].values[0]

        for child in haplogroups:
            if (parent, child) not in descendant_cache:
                descendant_cache[(parent, child)] = is_descendant(parent, child)
            if descendant_cache[(parent, child)]:
                for col in df_cleaned.columns[1:]:
                    if not df_cleaned.loc[df_cleaned['Haplotype'] == child, col].empty:
                        cumulative_freq[col][parent] += df_cleaned.loc[df_cleaned['Haplotype'] == child, col].values[0]

    # 创建存储累加频率的新DataFrame
    cumulative_df = pd.DataFrame(cumulative_freq).reset_index()
    cumulative_df.rename(columns={'index': 'Haplotype'}, inplace=True)

    # 将所有数值除以100
    cumulative_df.iloc[:, 1:] = cumulative_df.iloc[:, 1:] / 100

    # 保存累加频率到新文件
    cumulative_df.to_csv(cumulative_file_path, index=False)
    # 删除PROCE.csv
    os.remove(output_file)
    print("一个不需要的文件已经被删除了;\n累加后的文件路径：", cumulative_file_path)
    
    return cumulative_file_path

# 代码2部分
def data_transformation(input_file, output_file):
    # 读取输入文件
    df_input = pd.read_csv(input_file)

    # 创建输出文件的数据框架
    df_output = pd.DataFrame()

    # 第1列：SNP
    df_output['SNP'] = df_input.iloc[:, 0]

    # 第2列：CHR
    df_output['CHR'] = df_output['SNP'].str[0]

    # 第3列：POS
    df_output['POS'] = range(1, len(df_output) + 1)

    # 打印列名供用户选择
    print("可计算频率的群体列名如下：")
    print(df_input.columns)

    # 交互式输入被减数列名
    first_group_col = input("请输入第一个群体分类（被减数，输入列名）：")

    # 交互式输入减数列名
    second_group_col = input("请输入第二个群体分类（减数，输入列名）：")

    # 计算差值并填入第四列
    df_output['P'] = df_input[first_group_col] - df_input[second_group_col]

    # 保存结果到输出文件
    df_output.to_csv(output_file, index=False)

    print("该曼哈顿图的频率差值文件已保存，文件路径：", manhattan_output_file)
    return output_file, first_group_col, second_group_col

def plot_manhattan(file_path, title):
    # 设置字体类型
    rcParams['pdf.fonttype'] = 42
    rcParams['ps.fonttype'] = 42

    # 读取数据
    mydata = pd.read_csv(file_path)

    # 提取绘图所需数据列
    chrom = mydata['CHR']
    pos = mydata['POS']
    pval = mydata['P']
    snp = mydata['SNP']

    # 设置颜色和形状
    colors = ['#EA1F1F', '#E88421', '#E5C923', '#ded82d', '#9DEF1B', '#42D726',
              '#449657', '#4CCCB3', '#369BA8', '#2B7EBC', '#3626D1', '#A128CE', '#999999']
    shapes = ['o', 's', '^', 'D', 'v', '&lt;', '&gt;', 'p', '*', 'H', '+', 'x', 'd']

    # 设置阈值
    thresholds = [-0.05, 0.05]

    # 计算每个染色体的SNP数量和位置信息
    chrom_info = mydata.groupby('CHR')['POS'].agg(['min', 'max', 'count']).reset_index()
    chrom_info['width'] = chrom_info['max'] - chrom_info['min']

    # 绘制曼哈顿图
    plt.figure(figsize=(15, 5))

    # 分配每个染色体的X轴位置，避免重叠
    chrom_mapping = {}
    current_position = 0

    for _, row in chrom_info.iterrows():
        chrom = row['CHR']
        width = row['width']
        chrom_mapping[chrom] = current_position + width / 2
        current_position += width + 10  # 加上间隔避免重叠

    # 绘制点
    texts = []
    for chrom in chrom_mapping:
        group = mydata[mydata['CHR'] == chrom]
        x_base = chrom_mapping[chrom]
        x_positions = group['POS'] + (x_base - group['POS'].mean())  # 调整x位置使其分布在染色体中心
        y_positions = group['P']
        color = colors[list(chrom_mapping.keys()).index(chrom) % len(colors)]
        shape = shapes[list(chrom_mapping.keys()).index(chrom) % len(shapes)]
        plt.scatter(x_positions, y_positions, color=color, s=10, marker=shape)

        # 标记超过阈值的点并添加文字标签
        for (x, y, (_, row)) in zip(x_positions, y_positions, group.iterrows()):
            if row['P'] &lt; thresholds[0] or row['P'] &gt; thresholds[1]:
                text = plt.text(x, y, row['SNP'], fontsize=8, ha='right')
                texts.append(text)

    # 添加阈值线
    plt.axhline(y=thresholds[0], color='#999999', linestyle='--')
    plt.axhline(y=thresholds[1], color='#999999', linestyle='--')

    # 自动调整Y轴范围
    plt.ylim(pval.min() - 0.1, pval.max() + 0.1)

    # 调整文本位置以避免重叠并添加指向的线段
    adjust_text(texts, 
                arrowprops=dict(arrowstyle='-&gt;', color='gray', lw=0.5, shrinkA=5),
                expand_text=(1.5, 1.5),
                expand_objects=(1.5, 1.5),
                force_text=(0.5, 0.5),
                force_objects=(0.5, 0.5),
                only_move={'points':'y', 'text':'xy'})

    # 设置X轴刻度和标签
    plt.xticks(ticks=[chrom_mapping[chrom] for chrom in chrom_mapping], labels=chrom_mapping.keys())
    plt.xlabel('Haplogroup')
    plt.ylabel('Frequency')
    plt.title(title)

    # 显示图像
    plt.show()

if __name__ == "__main__":
    # 处理Haplotype数据并生成累加频率文件
    cumulative_file = process_haplotype_data(haplotype_input_file, processed_file, cumulative_file)

    # 曼哈顿图绘制部分
    # 数据转换并生成曼哈顿图输入文件
    manhattan_output_file, first_group_col, second_group_col = data_transformation(cumulative_file, manhattan_output_file)

    # 使用生成的输出文件绘图，并设置图的标题为“列名1-列名2”
    plot_title = f"{first_group_col} - {second_group_col}"
    plot_manhattan(manhattan_output_file, plot_title)

复制]]></description><link>软件操作\分析软件\python\python：从单倍群频率一键出曼哈顿图.html</link><guid isPermaLink="false">软件操作/分析软件/Python/Python：从单倍群频率一键出曼哈顿图.md</guid><pubDate>Fri, 05 Jul 2024 07:26:30 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407051514129.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407051514129.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[数据]]></title><description><![CDATA[ 
 <br><br>需要从 Tracer 中导出的BSP 的数据文件，此处选择 20000年 尺度，因为会把时间点划分得更精细一些，可以到几百年的尺度<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409102059588.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
点击导出<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409102100973.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>文件格式如下<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409102056618.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>
<br>欧洲近期大扩张<a data-footref="1" href="about:blank#fn-1-1c3de39a805c587b" class="footnote-link" target="_self" rel="noopener">[1]</a>这篇文献中给出的是这样的表格，得到的是 Ne 最小的时候该时间点的置信区间<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409102106601.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
对应的是图中的灰色阴影部分<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409102108368.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>但文中没有直接给出计算方法，在方法中写的是<br>
For the 13 populations  showing a recent expansion in the BSP, the limits of the 95% CI of mutation rate  (0.92–1.09* 10^-9) were used to define the CI of the time estimate of the minimum effective population size before the expansion (grey shading in Fig. 2).
<br>
<br>
根据这个描述，再结合 BSP 导出文件中只有有效群体大小对应的时间点，和该群体大小的置信区间，但没有某个时间点的置信区间，所以只能退而求其次，用这个公式，先求出 Ne 最小时对应的遗传距离，再用突变率的上下定义时间计算出对应的时间<br>


<br>
假设最小有效群体大小的时间点是3023年，突变率为  , 我们可以用以下步骤来计算3023年这个时间的置信区间：

<br>
<br>

<br>遗传距离=3023/  =


<br>2.使用突变率置信区间计算时间的置信区间：

<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409102122804.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">


<br>得出的结果和原文基本一致<br><br>
<br>
需要替换BSP 导出文件所在路径和结果文件所在路径<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409102103355.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
如果使用的是不同的突变率，需要替换掉<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409102104738.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>现在有个问题，就是 BSP 导出的时间特别的有规律，会看起来不太科学（o(╥﹏╥)o），但是暂时没想到解决办法<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409102124575.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>结果文件<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409102125401.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br><br>import os
import pandas as pd

# 替换为你的BSP结果文件所在的目录路径
directory_path = 'C:/Users/LuzHu/Desktop/1' # 请替换为你的BSP结果文件所在的目录路径
output_file = 'C:/Users/LuzHu/Desktop/output_summary.txt'  # 请替换为你的输出结果所在的文件路径

def calculate_time_interval(years_since_expansion, mutation_rate, mutation_rate_confidence): 
    """
    根据遗传距离和突变率计算时间估计的置信区间。

    参数:
    years_since_expansion (int): 自种群扩张以来的年数。
    mutation_rate (float): 每年每碱基的平均突变率。
    mutation_rate_confidence (tuple): 突变率置信区间的上下界。

    返回:
    tuple: 时间估计的置信区间的下限和上限。
    """
    # 使用平均突变率计算遗传距离
    genetic_distance = years_since_expansion * mutation_rate

    # 使用突变率置信区间计算时间的上限和下限
    lower_bound_time = genetic_distance / mutation_rate_confidence[1]  #高突变率给出较近期的时间
    upper_bound_time = genetic_distance / mutation_rate_confidence[0]  #低突变率给出较古老的时间

    return (lower_bound_time, upper_bound_time)

# 遍历目录下所有文件
with open(output_file, 'w', encoding='utf-8') as output:
    # 写入文件头
    output.write(f"文件名\t最小median对应的year值\t置信区间(下限,上限)\n")
    
    for file_name in os.listdir(directory_path):
        # 拼接文件路径
        file_path = os.path.join(directory_path, file_name)
        
        # 检查是否为文件
        if os.path.isfile(file_path):
            try:
                # 读取txt文件并将其转为DataFrame
                df = pd.read_csv(file_path, sep='\t', skiprows=1)
                df.columns = df.columns.str.strip()  # 移除列名中的多余空格

                # 查找median列的最小值及对应的time值
                min_median_row = df.loc[df['median'].idxmin()]
                years_since_expansion = int(round(min_median_row['time']))  # 保留为整数

                # 预设参数
                mutation_rate = 0.76e-9  # 突变率
                mutation_rate_confidence = (0.67e-9, 0.86e-9)  # 突变率置信区间

                # 计算置信区间
                time_interval = calculate_time_interval(years_since_expansion, mutation_rate, mutation_rate_confidence)

                # 将置信区间结果四舍五入为整数
                time_interval = (int(round(time_interval[0])), int(round(time_interval[1])))

                # 将结果保存到输出文件中
                output.write(f"{file_name}\t{years_since_expansion}\t{time_interval}\n")
            except Exception as e:
                # 如果文件处理过程中出现错误，输出错误信息
                output.write(f"{file_name}\t错误: {str(e)}\n")

print(f"结果已保存到 {output_file}")

复制<br><br><br>
<br>
<br>Large-scale recent expansion of European  patrilineages shown by population resequencing<a href="about:blank#fnref-1-1c3de39a805c587b" class="footnote-backref footnote-link" target="_self" rel="noopener">↩︎</a>
]]></description><link>软件操作\分析软件\python\python：计算bsp最小ne时间的置信区间.html</link><guid isPermaLink="false">软件操作/分析软件/Python/Python：计算BSP最小Ne时间的置信区间.md</guid><pubDate>Tue, 10 Sep 2024 13:26:36 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409102059588.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409102059588.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[输入文件]]></title><description><![CDATA[ 
 <br><br>txt 文件，没有表头<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409011532990.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409011533187.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>from collections import defaultdict

def process_names(input_file, output_file):
    # 读取输入文件
    with open(input_file, 'r') as file:
        names = file.read().splitlines()

    # 计数并添加编号
    name_count = defaultdict(int)
    processed_names = []
    for name in names:
        name_count[name] += 1
        processed_name = f"{name}_{name_count[name]}"
        processed_names.append(processed_name)

    # 写入输出文件
    with open(output_file, 'w') as file:
        for name in processed_names:
            file.write(name + '\n')

# 输入和输出文件名
input_file = 'C:/Users/LuzHu/Desktop/1.txt'  # 确保你的输入文件名正确，并位于相同的目录
output_file = 'C:/Users/LuzHu/Desktop/2.txt'  # 输出文件名
process_names(input_file, output_file)

复制]]></description><link>软件操作\分析软件\python\python：自动计数相同内容并编号.html</link><guid isPermaLink="false">软件操作/分析软件/Python/Python：自动计数相同内容并编号.md</guid><pubDate>Sun, 01 Sep 2024 07:34:43 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409011532990.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409011532990.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[数据准备]]></title><description><![CDATA[ 
 <br><br>首先，利用&nbsp;tracer&nbsp;软件绘制一个<a data-tooltip-position="top" aria-label="http://www.llt.asia/%E6%9C%AF%E8%AF%AD/%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%A4%A9%E9%99%85%E7%BA%BF%E5%9B%BE%EF%BC%88bayesian-skyline-plot,-bsp%EF%BC%89.html" rel="noopener" class="external-link" href="http://www.llt.asia/%E6%9C%AF%E8%AF%AD/%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%A4%A9%E9%99%85%E7%BA%BF%E5%9B%BE%EF%BC%88bayesian-skyline-plot,-bsp%EF%BC%89.html" target="_blank">贝叶斯天际线图（Bayesian Skyline Plot, BSP）</a>&nbsp;.<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409021536742.png" referrerpolicy="no-referrer"><br>然后，导出原数据：<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409021536046.png" referrerpolicy="no-referrer"><br>
点击图中的&nbsp;Export Data Table.<br>检查导出的文件，是否存在异常，如果有，记得删去！<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409072016116.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>软件操作\分析软件\python\python：bsp美化.html</link><guid isPermaLink="false">软件操作/分析软件/Python/Python：BSP美化.md</guid><pubDate>Tue, 10 Sep 2024 12:58:01 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409021536742.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409021536742.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[输入文件 ：vcf 或vcf.gz]]></title><description><![CDATA[ 
 <br><br>这是本代码中唯一需要准备的输入文件。注意是一个已经进行过上游处理（异质性等），并且只选择变异位点后（二等位基因、AC=0）的 vcf  文件或者压缩的 vcf.gz 文件。区别只在于代码处理时是否需要解压缩的步骤。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408301449484.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>表头最后1行，从第10列开始是 ID 信息。此时的 vcf 文件中 ID 不包含单倍群。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408301450032.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><br>ped 文件是基因型信息。ID 有两列，从第7列开始是基因型，每个位点的信息重复了1次，如位点原本为G，显示为 GG<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408301459556.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>map 文件是物理位置信息，第四列展示的是每一个 snp位点的物理位置<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408301501476.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><br>这个软件需要的输入文件有两个，一个是上述提到的 vcf 文件，另一个是 vcf 文件中ID 的 list ，list 文件没有表头，本文最后整合的代码中已经生成这个 list，所以不需要额外准备 list 文件。<br>
<img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408301505642.png" referrerpolicy="no-referrer"><br><br><br>-o $name.list.haploGrouper 结果文件如下，其中包含单倍群信息<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408301511136.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>-x $name.list.haploGrouper1 结果文件如下。具体暂时没用到，仍不是很清楚这个文件的作用<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408301512375.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>$name.list.haploGrouper2 文件如下。提取出单倍群信息<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408301518628.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>最后将 ped 文件的序列信息和 name.list.haploGrouper2 文件的单倍群信息进行处理，就得到了带有单倍群信息的fasta 文件。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408301520064.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>#!/bin/bash
name=haplo.mult.hc.gall.all.binary.noindel.nolowq.het.missing.nowoman.Mm2.AC0.4014  # 将文件名替换为自己的vcf文件名，无.vcf后缀
bgzip -c  -d $name.vcf.gz &gt;$name.vcf  # 如果输入vcf文件，则不需要解压的这一步
plink --vcf $name.vcf --recode compound-genotypes --double-id  --out $name  
bcftools view -h $name.vcf |tail -n 1 |cut -f10-|perl -npe "s/\t/\n/g" &gt; $name.list  
#-t和 -l参数后为haploGrouper软件自带文件，不用管
python /home/biosoftware/haploGrouper/hGrpr2.py \
                 -v $name.vcf  \
                 -t /home/biosoftware/haploGrouper/data/treeFileNEW_isogg2019.txt \
                 -l /home/biosoftware/haploGrouper/data/snpFile_b37_isogg2019.txt \
                 -i $name.list \
                 -o $name.list.haploGrouper \
                 -x $name.list.haploGrouper1

awk '{print $1 "\t" $2}' $name.list.haploGrouper &gt;$name.list.haploGrouper2
paste -d' '  &lt;(tail --lines=+2  $name.list.haploGrouper2) &lt;(cat $name.ped |cut -d' ' -f3-) |perl -npe "s/\t/_/"|cut -d' ' -f1,6-|perl -npe "s/^/&gt;/;s/ ([ATCG]){2}/ \1/g;s/ 00/ N/g"|perl -npe  "s/ /\t/;s/ //g;"|perl -npe "s/.*\t\?+$//"|grep -v "^$"|perl -npe "s/\t/\n/"&gt; $name.fasta

复制]]></description><link>软件操作\分析软件\shell\从vcf获得带单倍群信息的fasta.html</link><guid isPermaLink="false">软件操作/分析软件/Shell/从Vcf获得带单倍群信息的fasta.md</guid><pubDate>Sun, 01 Sep 2024 03:32:25 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408301449484.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408301449484.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[1 数据准备]]></title><description><![CDATA[ 
 <br><br>
<br>
整理不同单倍群的模版文件，单倍群取4级，分组为省，都不能重复（要去重）。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021614755.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
整理数据文件，以备填写各省市频率，不能去重，有表头<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021615242.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
转换成对应文件格式，csv和txt<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021619836.png" referrerpolicy="no-referrer" style="width: 275px; max-width: 100%;">

<br>
使用py脚本，得出结果<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021616997.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
将结果转换为xlsx<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021751176.png" referrerpolicy="no-referrer" style="width: 675px; max-width: 100%;">

<br>转置，使单倍群在上，省在左，并加上一列省的中文名，需要与将要使用的省面的字段信息保持一致。再次转换为csv，Arcgis才能识别。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021752340.png" referrerpolicy="no-referrer" style="width: 1550px; max-width: 100%;"><br><br>
<br>
打开Arcgis，点击新建新建空白地图<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021756770.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
不断通过右键图层添加图形或数据/窗口-目录。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021757124.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021758759.png" referrerpolicy="no-referrer" style="width: 925px; max-width: 100%;"><br>
<br>
先连接一下文件夹，然后之后使用的时候只在文件夹连接里找就可以了。需要的是国界和省面，以及单倍群csv数据。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021801788.png" referrerpolicy="no-referrer" style="width: 625px; max-width: 100%;">

<br>
现在需要连接省面和数据。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021802791.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>关于选什么字段，可以右键省面-属性中查看，确定后按如下选择<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021803116.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>确定验证结果时候和自己的表一致<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021804438.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>不一致需要按属性中的字段修改，一致则下一步<br>
<br>右键省面-属性-符号系统-数量，按情况修改，最好选一个色系，更好区分<br>
<img alt="477fe0d371b40af74acdcd172f2b419.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021806089.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>得出结果，出现了缺口，可以重加一个省面图层<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021807755.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>加省面后<br>
<img alt="e60988a3c1fc71933f2cfbfcf3fbecd.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021807805.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>添加图注，切换到布局视图<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021955139.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>在插入中加入所需要的东西<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021956689.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>点击图例后，不用修改什么<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021957828.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>注意与刚开始画的单倍群一直<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404022022515.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>设置默认即可<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404022023602.png" referrerpolicy="no-referrer" style="width: 750px; max-width: 100%;"><br>结果<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404022024331.png" referrerpolicy="no-referrer" style="width: 450px; max-width: 100%;"><br>为何会得到大于 1.0 或小于 -1.0 的 Moran's I 指数？<br>
通常，Global Moran's I 指数介于 -1.0 到 1.0 之间。只有对权重进行了行标准化时才会这样。如果未对权重进行行标准化处理，则指数值可能会落在 -1.0 到 1.0 的范围之外，这表示参数设置有问题  <br>何时采用全局莫兰指数（Global Moran's I），何时采用局部莫兰指数（Local Moran's I），以及，两者有何区别？<br>
莫兰指数分为全局莫兰指数（Global Moran's I）和局部莫兰指数（Local Moran's I），前者是Patrick Alfred Pierce Moran于1950年提出，用来衡量空间自相关程度的度量；后者是美国亚利桑那州立大学地理与规划学院院长 Luc Anselin 教授在1995年提出的。<br>
通常情况，先做一个地区的全局指数，全局指数只是告诉我们空间是否出现了集聚或异常值，但并没有告诉我们在哪里出现。换句话说全局Moran'I只回答Yes还是NO；如果全局有自相关出现，接着做局部自相关；局部Moran'I会告诉我们哪里出现了异常值或者哪里出现了集聚，是一个回答Where的工具<br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404022015241.png" referrerpolicy="no-referrer" style="width: 525px; max-width: 100%;"><br>结果在文档-Arcgis的一个html文件<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404022016077.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>打开可以看到<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404022016208.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404022016596.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>解读方法：<br>
<br>当Z-score值&gt;2.58时则随机产生此高聚类&nbsp;模式的可能性要&lt;1%,即GPD分布具有一定的空间集聚性
<br>空间自相关工具返回五个值：Moran's I 指数、预期指数、方差、z 得分及 p 值。
<br>在给定一组要素及相关属性的情况下，该工具评估所表达的模式是聚类模式、离散模式还是随机模式。使用 z 得分或 p 值指示统计显著性时，如果 Moran's I 指数值为正则指示聚类趋势，如果 Moran's I 指数值为负则指示离散趋势。
<br><br>插入-数据框，然后就可以在数据框中重复上述操作，然后导出两个在一起的结果<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404022100080.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>部分图层可以直接复制粘贴，然后还要修改图例等，暂时先这样<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404022118049.png" referrerpolicy="no-referrer" style="width: 575px; max-width: 100%;">]]></description><link>软件操作\分析软件\单倍群频率地图+热点地图.html</link><guid isPermaLink="false">软件操作/分析软件/单倍群频率地图+热点地图.md</guid><pubDate>Thu, 30 May 2024 05:50:04 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021614755.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404021614755.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[计算每级单倍群频率]]></title><description><![CDATA[ 
 <br><br>
<br>
准备好原始的单倍群数据和群体分组（数量大于 20 的研究群体）的结果，要有表头，用于之后数据透视表筛选<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405300904806.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
建议从 1 级开始取，获得收拢到上级的单倍群<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405300906361.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405300907548.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>全选数据（而不是全选 A\B\C 列），在插入-数据透视表-表格和区域，数据表就建在当前表中就行<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405300911213.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>分别拖动字段<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405300912581.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>调整值显示方式<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405300913621.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>结果就有了<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405300913617.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>进行下一级统计的时候，直接在前插入一行<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405300915542.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>鼠标放到数据表区域，点击右键，然后刷新一下，就可以得到新的字段，重复之前的操作就可以了<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405300918287.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>获得的所有结果依次粘贴到一个 excel 表格中，1 级在前，下游依次在后<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405300920109.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>进行转置，让单倍群在左，群体在上<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405300922011.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>
<br>
这是单倍群 A-Z排序的结果，重复的时候第一个应该是需要的（频率最高），其他的则应该删除。选中第一列，使用条件格式-突出-重复值则可以高亮。在B列新建一列<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405222256425.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
使用公式标记第一次出现的值，在 B 2 中输入以下公式，表示，如果A2单元格中的值在A列中第一次出现，则返回1，否则返回0。

<br>=IF(COUNTIF($A$2:A2,A2)=1,1,0)
复制<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405222258451.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>再次筛选为 0 的值，删除即可，剩下的都是需要的单倍群<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405300923010.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
]]></description><link>软件操作\分析软件\单倍群频率计算与排序（数据透视表）.html</link><guid isPermaLink="false">软件操作/分析软件/单倍群频率计算与排序（数据透视表）.md</guid><pubDate>Thu, 30 May 2024 01:27:36 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405300904806.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405300904806.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[单倍群频率热图]]></title><description><![CDATA[ 
 <br>
<br>
输入文件是地区与频率<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404022236040.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
用Fst脚本就可以，一般来说去掉group文件<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404022237308.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
结果<br>
<img alt="21a6ece13cd9fc44172559af017b887.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404022237094.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>有些频率太低了，需要修改图例频率范围，如上图是修改到0-0.5，根据自己的情况也可以修改其他的，如下图0-0.1；<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404030845567.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>频率差别太大，所以可以分开跑，用不同的颜色会更好看一些。<br>
这是高频的放在一起<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404030846158.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>这是低频的放在一起<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404030847115.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>但是这样的话，有两个问题：1. 省的顺序不一样，就没办法直接拼在一起；2.发育树会影响放在一起。可以通过改变一下代码实现<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404030855797.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
cluster_rows如果选择设置为FALSE，那么行将按照数据框mydata中的顺序排列<br>
cluster_cols参数设置为FALSE，这样就不会在列（单倍群）上进行聚类，也不会显示树状图。<br>
结果如下<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404030906803.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404030906895.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>然后放在一起<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404030914800.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>软件操作\分析软件\单倍群频率热图.html</link><guid isPermaLink="false">软件操作/分析软件/单倍群频率热图.md</guid><pubDate>Wed, 12 Jun 2024 13:11:21 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404022236040.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404022236040.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Dem 文件简介]]></title><description><![CDATA[ 
 <br><br><br>高程数据是指地表高度的测量数据。它们可以表示地球表面的高度变化，通常以数值的形式表示。高程数据可以通过各种方式获取，例如地形测量、卫星遥感和激光雷达（LiDAR）。<br><br>数字高程模型（DEM）是一种数字化的地形表示方法，它使用一系列规则的网格点来描述地球表面的高度。DEM文件包含了这些网格点的高程数据，通常以栅格（raster）的形式存储。每个栅格单元代表地表的一个区域，并包含该区域的平均高度值。<br>
DEM文件通常有以下几种格式：<br>
<br>GeoTIFF：一种常见的栅格格式，具有地理空间参考信息。
<br>ESRI ASCII Grid：一种文本格式，适用于简单的数据交换。
<br>DTED（Digital Terrain Elevation Data）：一种由美国国防部标准化的格式。
<br><br>
<br>
网站<a data-tooltip-position="top" aria-label="https://earthexplorer.usgs.gov/" rel="noopener" class="external-link" href="https://earthexplorer.usgs.gov/" target="_blank">EarthExplorer (usgs.gov)</a>

<br>
注册才能下载，先注册；填写好所有的，验证邮箱就可以登录，回到界面<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271516298.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
根据研究区域选择范围，可以直接用地图勾选<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271552452.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271552414.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>点击 Data sets<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271715532.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>选择常用的 dem 文件：SRTM (Shuttle Radar Topography Mission) 1 Arc-Second Global：提供全球范围内1弧秒分辨率的高程数据。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271533124.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>得到结果，手动加入批量下载<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271701431.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>点击商品篮<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271727307.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271728259.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271728214.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271729013.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271730758.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>设置好文件过后，就可以点击开始下载<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271730058.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271706143.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>点击开启下载<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271706830.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>选择下载的位置<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271708740.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>保存更改<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271708926.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271709586.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>1.导入文件<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271740321.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271738904.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>软件操作\分析软件\高程数据下载.html</link><guid isPermaLink="false">软件操作/分析软件/高程数据下载.md</guid><pubDate>Thu, 27 Jun 2024 10:01:44 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271516298.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406271516298.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[输入文件]]></title><description><![CDATA[ 
 <br><br>csv 文件，共四列<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407031700015.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>SNP 和 CHR列：单倍群名字，CHR 列以宏单倍群命名<br>
POS：每一个数字都要不一样，以保证图标的位置不重叠<br>
P：单倍群频率差值，留下正负<br><br>使用代码 曼哈顿图.R<br># 安装CMplot包
# install.packages("CMplot")
# 安装qqman包
# install.packages("qqman")

# 设置工作目录为桌面路径
setwd("C:/Users/LuzHu/Desktop/")
# 加载qqman包
library(qqman)
# 加载CMplot包
library(CMplot)

# 读取数据文件，包含列名
mydata &lt;- read.csv("All_南北频率差值.csv", header = TRUE)

# 定义输出文件路径和名称
output_path &lt;- "C:/Users/LuzHu/Desktop/"
output_file &lt;- "1.pdf"
output_full_path &lt;- file.path(output_path, output_file)

# 设置PDF绘图设备
pdf(file = output_full_path, width = 10, height = 5)


# 使用CMplot绘制曼哈顿图
CMplot(mydata,
       plot.type="m",          # 图类型 "d"（密度图）, "c"（累计图）, "m"（曼哈顿图）, "q"（Q-Q图）, "b"（基本图）
       cex=1.0,                # 点的大小
       pch=16,                 # 点的形状
       r=0.4,                  # 半径（用于圆形曼哈顿图）
       threshold=c(-0.05,0.05),       # 阈值，设置为0.1
       # col=c("#556B2F","#4DBBD5B2","#80C342","#A945FF","#326397","#11A4C8","#7E277C","#F8941E","#00FFFF","#FF1493","#FF0000","#556B2F","#8B0000","#8B7500","#FFFF00","#4DBBD5B2","#3C5488B2","#F39B7FB2","#91D1C2B2","#7E6148B2","#A4A4A4","#D3D3D3","#00A087B2","#8C2A1C","#00FA9A","#63C2C5","#725DA8","#FF8C00","#0000FF","#FF00FF","#00BFFF","#BFF217"), # 不同染色体的颜色集合
       # # cir.chr.h=1.5,          # 圆形曼哈顿图中染色体的高度
       col=c('#EA1F1F', '#E88421', '#E5C923','#ded82d','#9DEF1B','#42D726','#449657','#4CCCB3','#369BA8','#2B7EBC','#3626D1','#A128CE','#999999'), # 不同染色体的颜色集合
       amplify=TRUE,           # 是否放大超出阈值的点
       threshold.lty=c(2),     # 阈值线的线型
       threshold.col=c("#999999"), # 阈值线的颜色
       signal.cex=1.0,         # 信号点的大小
       signal.pch=17,          # 信号点的形状
       signal.line=1,          # 信号线的宽度
       signal.col=c("#EA1F1F"),    # 信号点的颜色
       # chr.den.col=c("darkgreen","yellow","red"), # 染色体密度的颜色
       bin.size=1e6,           # 染色体密度计算的bin大小
       outward=FALSE,          # 是否绘制外向的圆形曼哈顿图
       file.output=FALSE,      # 不让CMplot函数自己保存文件
       verbose=FALSE,          # 是否显示详细信息
       LOG10=FALSE,            # 是否使用-log10转换P值
       ylim=c(-0.3, 0.1) )      # 设置Y轴范围

# 关闭PDF绘图设备
dev.off()
复制<br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407041545473.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>需要在 AI 中进行修饰]]></description><link>软件操作\分析软件\曼哈顿图绘制.html</link><guid isPermaLink="false">软件操作/分析软件/曼哈顿图绘制.md</guid><pubDate>Thu, 04 Jul 2024 07:45:45 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407031700015.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407031700015.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[准备数据]]></title><description><![CDATA[ 
 <br><br>
<br>
在魔方中搜索目标单倍群，例如O1b1a1a1a1b；但是发现只有下游的<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406132146663.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
现在选择 ISOGG 中最近的下游， O1b1a1a1a1b1a1<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406132149418.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>对应魔方的位点是O-FGC19713，单倍群为O1a2b1b1a1a1a1a1，单倍群为16级<br>
<br>找到魔方16级单倍群对应的频率表，查找 O1a2b1b1a1a1a1a1<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406132207062.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>粘贴到准备的相关性图模版中<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406132209426.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>输入文件长这样<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406132218469.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br><br>
<br>安装对应的包，修改输入文件路径，<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406132231126.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>注意不要存在明明表格没有内容，但是占用了空格的情况，否则会报错<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406132230723.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>这部分代码要设置成 True 才能显示置信区间<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406140908465.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>画出的结果保存<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406140914170.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br><br># 加载所需的包
library(httpgd)
library(ggplot2)
library(ggpubr)
library(ggExtra)

# 加载数据，不使用row.names参数
data &lt;- read.csv("C:/Users/LuzHu/Desktop/O1a2b1b1a1a1a1a1_经纬度相关性.csv", header = TRUE, row.names = 1)

# 定义自定义形状和颜色
custom_shapes &lt;- c(15)
custom_colors &lt;- c("#de283b")

# 创建带边际直方图的函数，用于一个变量的绘图
create_marginal_plot &lt;- function(group_data, x_var, y_var, x_label, y_label, marginal_var) {
  p &lt;- ggplot(group_data, aes(x = .data[[x_var]], y = .data[[y_var]], colour = index, shape = index)) +
    geom_point() +
    geom_smooth(method = "lm", se = TRUE) +  # 显示置信区间
    scale_shape_manual(values = custom_shapes) +
    scale_colour_manual(values = custom_colors) +
    theme_bw() +
    theme(legend.position = "none") +
    stat_cor(method = 'pearson', aes(x = .data[[x_var]], y = .data[[y_var]])) +
    xlab(x_label) + ylab(y_label)
}

# 对每个组应用边际直方图绘图函数（针对 Lat 变量）
plots_lat &lt;- lapply(unique(data$index), function(group) {
  group_data &lt;- subset(data, index == group)
  create_marginal_plot(group_data, "Fre", "Lat", "Fre", "Lat", "x")
})

# 对每个组应用边际直方图绘图函数（针对 Long 变量）
plots_long &lt;- lapply(unique(data$index), function(group) {
  group_data &lt;- subset(data, index == group)
  create_marginal_plot(group_data, "Fre", "Long", "Fre", "Long", "x")
})

# 在网格布局中显示所有图表
ggarrange(plotlist = c(plots_lat, plots_long), ncol = 2, nrow = ceiling((length(plots_lat) + length(plots_long)) / 2))

复制<br><br>
<br>选择海南黎族的单倍群，O1b1a1a1a1b2a1a1<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406132159461.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>对应的是魔方的 O-F2517，单倍群 O1a2b1b1a1a1a2a1a1a，19级<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406132200386.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>软件操作\分析软件\魔方单倍群经纬度相关性绘制.html</link><guid isPermaLink="false">软件操作/分析软件/魔方单倍群经纬度相关性绘制.md</guid><pubDate>Fri, 21 Jun 2024 06:00:23 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406132146663.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406132146663.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[魔方目标单倍群寻找]]></title><description><![CDATA[ 
 <br>
<br>
确定自己感兴趣的单倍群，此处为 O2a2a1a2a1a1<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406211128020.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
在 ISOGG 中寻找，发现位点<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406211129561.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
在魔方数据中搜索位点 O-F1275，对应魔方单倍群为 O2a1b2a1a1a1a，13级<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406211132059.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
在已经获得的16级单倍群频率表中搜索即可，获得频率<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406211140074.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

]]></description><link>软件操作\分析软件\魔方目标单倍群寻找.html</link><guid isPermaLink="false">软件操作/分析软件/魔方目标单倍群寻找.md</guid><pubDate>Fri, 21 Jun 2024 03:40:41 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406211128020.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406211128020.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[三维地形图]]></title><description><![CDATA[ 
 <br>
<br>裁剪 Dem数据<br>
提取前<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406272129652.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>选择工具<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406272117044.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>提取后<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406272129680.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>添加三维地形效果<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406272120643.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406272124572.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>软件操作\分析软件\三维地形图.html</link><guid isPermaLink="false">软件操作/分析软件/三维地形图.md</guid><pubDate>Thu, 27 Jun 2024 13:30:05 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406272129652.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406272129652.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[似然树构建]]></title><description><![CDATA[ 
 <br><br>构建进化树的方法和软件很多，前面我们讲解构<a data-tooltip-position="top" aria-label="http://mp.weixin.qq.com/s?__biz=MzIyNzIyNTczNA==&amp;mid=2247491242&amp;idx=3&amp;sn=b4a8232832d08bf1c08c9291503354a8&amp;chksm=e8652743df12ae55c8b120eee15e9e6774ac7714ad5467b1e1046ddf7e7740729d6e3f0d889e&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="http://mp.weixin.qq.com/s?__biz=MzIyNzIyNTczNA==&amp;mid=2247491242&amp;idx=3&amp;sn=b4a8232832d08bf1c08c9291503354a8&amp;chksm=e8652743df12ae55c8b120eee15e9e6774ac7714ad5467b1e1046ddf7e7740729d6e3f0d889e&amp;scene=21#wechat_redirect" target="_blank">建进化树的原理</a>时提过，最准确的方法为贝叶斯方法，但是贝叶斯的方法计算量太大太耗时，对于大量的数据不适用，其次就是最大似然法，这里我们解释三种利用最大似然法构建进化树的软件：fasttree，iqtree2，RAxML-ng.输入的数据为做群体遗传进化得到的SNP数据。  <br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/bjvWWMcEDllRjKyOZo0rc7kWeAKLnYaKuA5Kqv6kCvH1S42cNvsMwg1A6XwEQkH0wkvQfHvPA96Y8ZaU2hZulQ/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>数据准备<br>做完重测序分析后，我们可以得到包含 SNP的变异结果vcf文件作为输入文件。详见课程：<a data-tooltip-position="top" aria-label="http://mp.weixin.qq.com/s?__biz=MzIyNzIyNTczNA==&amp;mid=2247490638&amp;idx=1&amp;sn=bc420d5bea451c9998162b2616276791&amp;chksm=e86525a7df12acb1527d54312c9d08c6625dd0bf12b3e8fc64c2a187442af55c73f59b21cfbf&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="http://mp.weixin.qq.com/s?__biz=MzIyNzIyNTczNA==&amp;mid=2247490638&amp;idx=1&amp;sn=bc420d5bea451c9998162b2616276791&amp;chksm=e86525a7df12acb1527d54312c9d08c6625dd0bf12b3e8fc64c2a187442af55c73f59b21cfbf&amp;scene=21#wechat_redirect" target="_blank">重测序数据分析课程</a>，然后利用omicsclass/pop-evol-gwas:v1.3 镜像进行前期数据准备与后续进化树构建分析：<br>#运行环境准备：docker镜像启动#镜像下载：docker&nbsp;pull&nbsp;omicsclass/pop-evol-gwas:v1.3#启动遗传进化镜像docker&nbsp;run&nbsp;--rm&nbsp;-it&nbsp;-m&nbsp;4G&nbsp;--cpus&nbsp;1&nbsp;&nbsp;-v&nbsp;D:\pop:/work&nbsp;omicsclass/pop-evol-gwas:v1.3#对vcf文件进行数据过滤vcftools&nbsp;--gzvcf&nbsp;all.varFilter.vcf.gz&nbsp;--recode&nbsp;--recode-INFO-all&nbsp;--stdout&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--maf&nbsp;0.05&nbsp;&nbsp;--max-missing&nbsp;0.7&nbsp;&nbsp;--minDP&nbsp;4&nbsp;&nbsp;--maxDP&nbsp;1000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\&nbsp;&nbsp;&nbsp;&nbsp;--minQ&nbsp;30&nbsp;--minGQ&nbsp;0&nbsp;--min-alleles&nbsp;2&nbsp;&nbsp;--max-alleles&nbsp;2&nbsp;--remove-indels&nbsp;|gzip&nbsp;-&nbsp;&gt;&nbsp;clean.vcf.gz#利用tassel软件对文件进行排序run_pipeline.pl&nbsp;-Xmx30G&nbsp;&nbsp;-SortGenotypeFilePlugin&nbsp;-inputFile&nbsp;clean.vcf.gz&nbsp;\&nbsp;&nbsp;&nbsp;&nbsp;-outputFile&nbsp;clean.sorted.vcf.gz&nbsp;-fileType&nbsp;VCF#vcf文件格式转换成Phylip格式，用于后续构建进化树run_pipeline.pl&nbsp;&nbsp;-Xmx5G&nbsp;-importGuess&nbsp;&nbsp;$workdir/00.filter/clean.sorted.vcf.gz&nbsp;&nbsp;\&nbsp;&nbsp;&nbsp;&nbsp;-ExportPlugin&nbsp;-saveAs&nbsp;supergene.phy&nbsp;-format&nbsp;Phylip_Inter
复制<br><br>FastTree 是基于最大似然法构建进化树的软件，它最大的特点就是运行速度快，支持几百万条序列的建树任务。但是fasttree不支持bootstrap检验以及支持的替换模型有限。官网如下：<a rel="noopener" class="external-link" href="http://www.microbesonline.org/fasttree/" target="_blank">http://www.microbesonline.org/fasttree/</a><br><br>FastTree 支持核酸和蛋白的进化树构建，对于核酸，可选的替换模型包括以下几种：JC（Jukes-Cantor）、GTR（generalized time-reversible），默认的模型为JC。对于蛋白质，可选的替换模型包括以下几种：JTT (Jones-Taylor-Thornton 1992)、LG(Le and Gascuel 2008)、WAG(Whelan &amp; Goldman 2001) 默认的模型为JTT。FastTree要求输入的多序列比对结果为FASTA或者Phylip格式。<br>
构建进化树命令举例：<br>fasttree&nbsp;-nt&nbsp;-gtr&nbsp;&nbsp;supergene.fa&nbsp;&nbsp;&nbsp;&gt;&nbsp;&nbsp;fasttree.nwk
复制<br>FastTree 其他命令举例：<br>#对于蛋白质的进化树构建，基本用法如下fasttree&nbsp;protein.fasta&nbsp;&gt;&nbsp;tree#也可以选择LG或者WAG替换模型，用法如下fasttree&nbsp;-lg&nbsp;protein.fasta&nbsp;&gt;&nbsp;treefasttree&nbsp;-wag&nbsp;protein.fasta&nbsp;&gt;&nbsp;tree#对于核酸序列，基本用法如下fasttree&nbsp;-nt&nbsp;nucleotide.fasta&nbsp;&gt;&nbsp;tree#也可以选择GTR替换模型，用法如下fasttree&nbsp;-nt&nbsp;&nbsp;-gtr&nbsp;nucleotide.fasta&nbsp;&gt;&nbsp;tree
复制<br><br>IQ-tree也是一款最大似然法构建进化树的软件，目前IQ-tree已经更新到2.0版本功能和性能也有很大的提升，主要有四大功能，高效建树（efficient tree reconstruction），模型选择（modelfinder: fast and accurate model selection），超快bootstrap（ultrafast bootstrap approximation），大型数据（big data analysis），以上特点特别适用于高通量测序的大量SNP构建进化树。<br><br>构建进化树有很多模型对于初学者往往不知道那种模型最适合，iqtree提供自动模型选择功能，使用的软件为modelfinder。Modelfinder是一款速度超快的自动最佳模型选择软件。其在保证准确性的情况下，速度上比jmodeltest（针对DNA）和prottest（针对蛋白）要快100倍（ModelFinder is up to 100 times faster than jModelTest/ProtTest.），使用命令举例：<br>#自动选择最佳模型并构建进化树：-m&nbsp;MFPiqtree&nbsp;-s&nbsp;supergene.phy&nbsp;-m&nbsp;MFP#只是想找最佳模型不构建进化树：iqtree&nbsp;-s&nbsp;example.phy&nbsp;-m&nbsp;MF#查找模型计算过程：ModelFinder&nbsp;will&nbsp;test&nbsp;up&nbsp;to&nbsp;546&nbsp;protein&nbsp;models&nbsp;(sample&nbsp;size:&nbsp;36415)&nbsp;...&nbsp;No.&nbsp;Model&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-LnL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;df&nbsp;&nbsp;AIC&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AICc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BIC&nbsp;&nbsp;1&nbsp;&nbsp;LG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10134094.366&nbsp;349&nbsp;20268886.731&nbsp;20268893.505&nbsp;20271854.186&nbsp;&nbsp;2&nbsp;&nbsp;LG+I&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10133927.677&nbsp;350&nbsp;20268555.354&nbsp;20268562.167&nbsp;20271531.312&nbsp;&nbsp;3&nbsp;&nbsp;LG+G4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10043239.052&nbsp;350&nbsp;20087178.104&nbsp;20087184.917&nbsp;20090154.062&nbsp;&nbsp;4&nbsp;&nbsp;LG+I+G4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10043175.024&nbsp;351&nbsp;20087052.048&nbsp;20087058.900&nbsp;20090036.508&nbsp;&nbsp;5&nbsp;&nbsp;LG+R2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10063911.721&nbsp;351&nbsp;20128525.442&nbsp;20128532.294&nbsp;20131509.902&nbsp;&nbsp;6&nbsp;&nbsp;LG+R3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10045448.117&nbsp;353&nbsp;20091602.235&nbsp;20091609.165&nbsp;20094603.701
复制<br>MFP为ModelFinder Plus的缩写，该参数使程序执行ModelFinder选择最适模型并完成建树分析。ModelFinder为许多不同的模型计算初始简约树的逻辑概率，并产生Akaike information criterion (AIC), corrected Akaike information criterion (AICc), and the Bayesian information criterion (BIC)三个结果标准值，通常ModelFinder选择BIC分数最低的模型（当然也可以指定AIC和AICc通过指定选项-AIC或者-AICc)。如果你想节约时间，可指定选择的模型及编码参数，例如:从WAG ,LG ,JTT 核苷酸替代模型里选一个: -mset WAG,LG,JTT；在+G和+I，以及+I+G三个里面选择rate ：-mrate G,I,I+G；heterogeneity参数：-mfreq FU,F<br>命令行如下：<br>iqtree&nbsp;-s&nbsp;example.phy&nbsp;-m&nbsp;MPF&nbsp;-mset&nbsp;WAG,LG,JTT&nbsp;&nbsp;-mrate&nbsp;G,I,I+G&nbsp;-mfreq&nbsp;FU,F
复制<br><br>MODEL：model name+FreqType：(可选项)frequency type+RateType：(可选项)rate heterogeneity type
复制<br><br>
<br>DNA模型:<br>

<br>JC/JC69, F81, K2P/K80, HKY/HKY85, TN/TrN/TN93, TNe,<br>
K3P/K81, K81u, TPM2, TPM2u, TPM3, TPM3u, TIM, TIMe,<br>
TIM2, TIM2e, TIM3, TIM3e, TVM, TVMe, SYM, GTR and 6-digit<br>
<br>蛋白质模型：<br>

<br>BLOSUM62, cpREV, Dayhoff, DCMut, FLU, HIVb, HIVw, JTT,<br>
JTTDCMut, LG, mtART, mtMAM, mtREV, mtZOA, mtMet, mtVer,<br>
mtInv, Poisson, PMB, rtREV, VT, WAG<br><br>每个核苷酸位点上的替代是随机发生的，则A,T,C,G出现的频率应该大致相等。实际情况：DNA受到自然选择的压力，各个位点的碱基出现频率并不相等。<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/bjvWWMcEDln3nqZicVREABdiayxb9qcQpCfhy36EErP0R4ykdUyax3MpVqlst5zSVkMibsXKj9OA1gw9rCm6JSib4w/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>+RateType：rate heterogeneity across sites可选设置：<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/bjvWWMcEDln3nqZicVREABdiayxb9qcQpC4CAFcUQMACLF5uBjQLtPm4Pk90nq0QeW5x8mFevne0Ev4zS6dzZ4aQ/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>指定替换模型构建进化树命令举例：<br>iqtree&nbsp;-s&nbsp;example.phy&nbsp;-m&nbsp;TIM2+I+G
复制<br><br>真实的进化信息只有一个，而我们总是拿着有限的序列信息，希望去获得他。能否获得他，是一个问题。而我们使用的序列信息是否能真实且稳定地反应一个进化信息，那么是另外一个事情。bootstrap法常用的，尤其是ML法构建进化树上，分支可靠性检验方法。但是这个计算逻辑最大的问题在于，抽样重新跑，抽样再重新跑，不断重复，直到收敛或者是到指定的比如1000次。计算量大，耗时长。IQ-tree的作者团队在前述提出了一个快速的BS方法，最后整合到IQ-tree中。使用的方式是<br>iqtree&nbsp;-s&nbsp;example.phy&nbsp;-m&nbsp;TIM2+I+G&nbsp;-b&nbsp;1000
复制<br><br>大概是IQTREE的精髓所在。顾名思义，ultrafast bootstrap approximation的特点就是超快。这里涉及到的细节，感兴趣的读者可以参见IQTREE的开发者写的几篇文章。作者认为，UFBoot is 10 to 40 times faster than RAxML rapid bootstrap and obtains less biased support values。<br>iqtree&nbsp;-s&nbsp;example.phy&nbsp;-m&nbsp;TIM2+I+G&nbsp;-B&nbsp;1000
复制<br>除ultrafast bootstrap之外，IQTREE还提供了以下检验树的拓扑结构可信度的方法。<br>
<br>-alrt：SH-aLRT检验(4)，没记错的话FastTree2使用的就是这个吧？<br>

<br>-abayes：approximate Bayes test，由瑞士苏黎世应用科学教授Maria Anisimova提出(5)<br>

<br>-lbp：fast local bootstrap probability method，由Adachi and Hasegawa提出（<a data-tooltip-position="top" aria-label="http://www.is.titech.ac.jp/~shimo/class/doc/csm96.pdf%EF%BC%89" rel="noopener" class="external-link" href="http://www.is.titech.ac.jp/~shimo/class/doc/csm96.pdf%EF%BC%89" target="_blank">http://www.is.titech.ac.jp/~shimo/class/doc/csm96.pdf）</a><br>

<br>iqtree&nbsp;-s&nbsp;example.phy&nbsp;-m&nbsp;TIM2+I+G&nbsp;-B&nbsp;1000&nbsp;-alrt&nbsp;1000
复制<br>如果你指定了多个检验方法，那么其结果会在树里（.treefile）呈现出来，不同检验所得数值用斜线隔开，比如：((a,b)100/98:0.1,c:0.2)90/95<br>最后，iqtree做群体遗传进化构建进化树推荐命令：<br>iqtree2&nbsp;-s&nbsp;supergene.phy&nbsp;-st&nbsp;DNA&nbsp;-T&nbsp;2&nbsp;&nbsp;-mem&nbsp;8G&nbsp;\&nbsp;&nbsp;&nbsp;&nbsp;-m&nbsp;&nbsp;GTR&nbsp;&nbsp;-redo&nbsp;\&nbsp;&nbsp;&nbsp;&nbsp;-B&nbsp;1000&nbsp;-bnni&nbsp;\&nbsp;&nbsp;&nbsp;&nbsp;--prefix&nbsp;iqtree&nbsp;
复制<br><br>RAxML是最大似然法（maximum likelihood）建树的经典工具，其由来自德国海德堡理论科学研究所（Heidelberg Institute for Theoretical Studies）的Alexandros Stamatakis开发,最新已经更新了版本RAxML-NG，支持的替换模型更多，运行速度更快。<br><br>RAxML采用最大似然法建树，即将系统树的拓扑结构、分支长度及进化模型等的全部或者部分作为需要估计的参数，在给定的数据集及进化模型的基础上，用最大似然法的标准-似然值最大化来估计这些参数。首先，要选择进化模型，以简约树或者联接树为基础，采用似然法估计模型中各个参数。设置好参数后，以简约树或者联接树作为起始树，进行似然分析，最后用统计学方法从多个似然树中寻找最佳得分树。<br><br>RAxML软件支持输入文件的格式可以是比对好的fasta格式或者phylip格式，例如DNA比对序列，核苷酸替代模型为GTR，rate heterogeneity设置为gamma分布，不做bootstraping，命令如下：<br>raxml-ng&nbsp;&nbsp;--msa&nbsp;supergene.phy&nbsp;--model&nbsp;GTR+G&nbsp;&nbsp;--prefix&nbsp;raxml_tree&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--threads&nbsp;2&nbsp;--seed&nbsp;123
复制<br>如果是建树和bootstrap一起做，可以加--all参数一步完成：<br>raxml-ng&nbsp;&nbsp;--msa&nbsp;supergene.phy&nbsp;--model&nbsp;GTR+G&nbsp;&nbsp;--prefix&nbsp;raxml_tree&nbsp;--threads&nbsp;2&nbsp;--seed&nbsp;123&nbsp;&nbsp;&nbsp;
复制<br>关于raxml-ng模型的设置与iq-tree类似，支持很多种个性化的模型设置：<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/bjvWWMcEDllRjKyOZo0rc7kWeAKLnYaKXNLALJgqBa5JibO42u60UichzzOnhOpHV6PE7efFl73ovvp0icibDKpGYg/640?wx_fmt=png&amp;wxfrom=13&amp;tp=wxpic" referrerpolicy="no-referrer"><br>详细设置方法见：<a rel="noopener" class="external-link" href="https://github.com/amkozlov/raxml-ng/wiki/Input-data#evolutionary-model" target="_blank">https://github.com/amkozlov/raxml-ng/wiki/Input-data#evolutionary-model</a>]]></description><link>软件操作\分析软件\似然树构建.html</link><guid isPermaLink="false">软件操作/分析软件/似然树构建.md</guid><pubDate>Thu, 22 Aug 2024 03:36:11 GMT</pubDate><enclosure url="https://mmbiz.qpic.cn/mmbiz_png/bjvWWMcEDllRjKyOZo0rc7kWeAKLnYaKuA5Kqv6kCvH1S42cNvsMwg1A6XwEQkH0wkvQfHvPA96Y8ZaU2hZulQ/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" length="0" type="false"/><content:encoded>&lt;figure&gt;&lt;img src="https://mmbiz.qpic.cn/mmbiz_png/bjvWWMcEDllRjKyOZo0rc7kWeAKLnYaKuA5Kqv6kCvH1S42cNvsMwg1A6XwEQkH0wkvQfHvPA96Y8ZaU2hZulQ/640?wx_fmt=png&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[1 数据准备]]></title><description><![CDATA[ 
 <br><br>
<br>根据模版文件准备好一个基于Fst的后缀为.meg的文件，前面一段不用管<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012150493.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>需要改的有分组名（上面蓝色箭头部分，#号也会在树上显示出来）和矩阵，分组注意001和后面名字之间没有空格<br>矩阵只需要Fst的半矩阵，去掉对角线的0和第一排第一列0<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012153967.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>
<br>
打开win端的MEGA，点击open a file<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012216254.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
选择你的.meg文件，导入后是这样，

<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012217436.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>
点击phylogeny-NJ画树<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012218862.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
不用修改什么<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012219751.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
画出来是这样，左侧可以做很多修改<br>
<img alt="1709301271800.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012154647.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
在稍微修改一下tree width那些过后，可以保存为.nwk文件，然后前往itol美化<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012159062.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>选择支长，但实际上之后会省略，因为只需要拓扑结构<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012200082.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>会出现这个界面，不管它，点击x退出<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012201826.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012201719.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>保存名字即可<br><br>官网地址：<a rel="noopener" class="external-link" href="https://itol.embl.de/" target="_blank">https://itol.embl.de/</a><br>
<br>登录自己的账号，然后点击uoload<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012207777.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012207182.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>可以直接拖拽，也可以上传<br>
<br>点击自己上传的文件<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012208504.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>进入到树界面即可进行美化<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012209130.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>现在枝长不好看，所以点击ignore<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012210016.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>这样就好多了<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012211559.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>其他的自己慢慢探索吧！]]></description><link>软件操作\分析软件\用mega画nj树.html</link><guid isPermaLink="false">软件操作/分析软件/用Mega画NJ树.md</guid><pubDate>Fri, 01 Mar 2024 14:21:57 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012150493.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012150493.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[AMOVA工作流程]]></title><description><![CDATA[ 
 <br>准备工作：<br>
<br>通过vcf2ArlequinDiploid.py脚本实现 .vcf 转 .Arp，因为Arlequin需要Arp文件格式
<br>#去掉第5列中的X，转换成.并且输出一个新文件，没有改变原文件
awk 'BEGIN{FS=OFS="\t"} $5=="X"{$5="."}1' Illumina2636_Y.vcf &gt; Illumina2636_Y_modified.vcf
#激活python环境
conda activate py-popgen
#现在实行vcf转Arp，population.txt是一个只有两列且没有表头的文本文件，第一列是ID，第二列是分组
python /home/liuyunhui/VCFtoArp/vcf2ArlequinDiploid.py --vcf Illumina2636_Y_modified.vcf --popFile population.txt --splitContigs
复制<br>
<br>下载[Arlequin](<a data-tooltip-position="top" aria-label="http://cmpg.unibe.ch/software/arlequin35/" rel="noopener" class="external-link" href="http://cmpg.unibe.ch/software/arlequin35/" target="_blank">Arlequin 3.5 (unibe.ch)</a>)。
<br><br>
<br>
打开已准备好的Arp文件<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402192120267.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
点击Structure editor，可以看到分好的组，组名根据情况进行区分，但不能是0，否则无法勾选<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402192121863.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
点击Settings，按方框中勾选<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402192124722.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
然后点击Start，开始运行<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402192126556.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>会弹窗，正在进行<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402192126383.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402192130805.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>点击View results<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402192132151.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>会跳出一个网页<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402192133184.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>找到结果文件（通常在安装软件的文件夹里，但也可能在桌面），用记事本打开XML文件<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402192136935.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>把文本文件拉到中间、最后，可以看到结果，例如下方<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402192140939.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402192142558.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>Fst结果<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271756639.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>软件操作\分析软件\amova工作流程.html</link><guid isPermaLink="false">软件操作/分析软件/AMOVA工作流程.md</guid><pubDate>Tue, 27 Feb 2024 09:57:56 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402192120267.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402192120267.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[数据准备]]></title><description><![CDATA[ 
 <br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402292222009.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>
<br>打开软件 Arcgis pro，新建地图（可以保存到推荐路径，但是由于样本的 csv 数据是会被移动的，所以下次打开后实际上保存的结果会出现丢失，需要重新 link）<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071027452.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>注意调整窗格的方式<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406140939663.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>
将地图包和自己的数据添加到目录的收藏夹中方便使用，注意只能添加文件夹，所以需要把数据放在文件夹中<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071035392.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
添加以下内容到地图中，并添加数据（展示采样点应该用 XY 数据，分级色彩图才放在省面）<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071054709.png" referrerpolicy="no-referrer" style="width: 725px; max-width: 100%;">

<br>
在省面上右键进行添加连接，然后选好字段<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071127297.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
修改符号系统，这里才能设置点大小<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071138281.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071142985.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>调整好过后就可以切换到布局视图了<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071143535.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>选择 A4纸大小，然后插入地图框<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071145469.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>在布局中放置地图<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071151364.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>右键-激活，可以调整地图在框中的位置，此时会变成地图框的层级<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071151632.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>同样在插入菜单栏，可以将图例和地图框进行插入，获得手动版本的南海附图框<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071155461.png" referrerpolicy="no-referrer" style="width: 550px; max-width: 100%;">
]]></description><link>软件操作\分析软件\arcgis-pro采样地图（原始.html</link><guid isPermaLink="false">软件操作/分析软件/Arcgis pro采样地图（原始.md</guid><pubDate>Fri, 16 Aug 2024 03:08:43 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402292222009.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402292222009.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[数据准备]]></title><description><![CDATA[ 
 <br><br>实际上不需要第一列地区的名称，因为不需要和地图连接。注意内容中不要有空值或者经纬度乱码，否则会无法导入数据<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409122043209.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409122042252.png" referrerpolicy="no-referrer"><br><br>
<br>添加地图图层<br>
世界地图<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409042012837.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>中国的部分<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409042012397.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>效果如下<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409042013606.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>新建布局<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409042014968.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>鼠标移动到地图上后，右键-激活<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409042016576.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>地图框模式可以移动显示的地图范围<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409042017240.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>把准备好的文件直接拖入到软件中，添加经纬度数据<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409042021391.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409042023950.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>然后可以点击符号，或者右键打开符号系统，进行修改，使用分级符号<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409042034289.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409042031066.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409042038868.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>新建图例，点击图例过后就在布局中左键画出边框即可<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409042038411.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409042039278.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>导出图像在共享的窗口<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409042116560.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>自己设置过后导出就行<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409042116278.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>软件操作\分析软件\arcgis-pro采样地图气泡图（新.html</link><guid isPermaLink="false">软件操作/分析软件/Arcgis Pro采样地图气泡图（新.md</guid><pubDate>Thu, 12 Sep 2024 12:56:22 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409122043209.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409122043209.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[频率地图]]></title><description><![CDATA[ 
 <br><br>
<br>
数据准备，csv 格式<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406140931467.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
添加2019版市的 shp<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406140940551.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>添加频率文件 csv<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406140941647.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>在市的图层上添加连接<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406140942015.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406140943691.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>可以验证连接，一共有364个市<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406140943111.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>点击市的符号系统<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406140946812.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>采用分级<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406140947094.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406141041246.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>河流使用的是一级<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406141034334.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
效果<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406141042164.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>插入图例等<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406141044282.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406141046505.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>导出 PDF<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406141048122.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br><br>
<br>选择菜单栏的分析-工具<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406141002692.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>修改一下<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406141003943.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>软件操作\分析软件\arcgis-pro单倍群频率地图+热点.html</link><guid isPermaLink="false">软件操作/分析软件/Arcgis pro单倍群频率地图+热点.md</guid><pubDate>Fri, 14 Jun 2024 02:48:29 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406140931467.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406140931467.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Arcgis采样地图]]></title><description><![CDATA[ 
 <br>
<br>准备好一个文件夹，内有省份经纬度的csv文件以及地图文件<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402292221280.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>注意csv文件有表头<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402292222009.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>
然后打开Arcgis，刚开始不用管，直接ok进入，然后右键图层，新建数据<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402292225162.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
依次添加这些内容<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402292225906.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>文件-添加数据-添加XY<br>
<img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404051629733.png" referrerpolicy="no-referrer"><br>然后地理坐标选Asia-北京1954<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404051629533.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>结果如图，可以右键表格，选择标注要素，即可显示标签<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402292228125.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>草图就画好了<br>
通过属性-符号系统-数量，可以画出样本分布数量图<br>
<br>
在视图-布局视图下，可以增加一些标注

<br>
在插入中，可以添加指针、图例、比例尺等，如果需要修改图例的某个部分，则直接右键-转换图形，即可拥有取消编组的效果

<br>
保存时，直接点击另存为，选择位置即可，得到的是mxd文件格式<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402292232824.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

]]></description><link>软件操作\分析软件\arcgis采样地图.html</link><guid isPermaLink="false">软件操作/分析软件/Arcgis采样地图.md</guid><pubDate>Fri, 05 Apr 2024 08:33:01 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402292221280.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402292221280.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[1 选支系]]></title><description><![CDATA[ 
 <br><br>挑选研究群体的高频支系，然后搜索所有该单倍群，看时间<br>
第一步：在研究群体中挑选高频单倍群<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408221608956.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>第二步：把所有该单倍群的群体都提出来<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408221630165.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>第三步：选择外群<br>
每个宏单倍群选4个，单倍群组成尽量一样，如四个都是 N1b2支系，实在不行2个一样<br>
定时间的支系每个选6个，如以 NO 支系定年，则每个 N 或 O 选6个<br>
尽量选用1KG 、HGDP 做外群<br><br>在确定数据过后，应该要跑一个模型，来确定在设置的模型参数（暂时直接选用的 GTR）<br><br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408222133215.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408222135779.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408222141851.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408222153563.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><br>这个是以 NO 支系定年<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408222154353.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>如果以 GT 定年，则<br>
年份均值51557<br>
标准差135<br>
（参考文献 MBE 大洋洲）<br><br>10K_5个数据集的总位点数：7247765<br>
130个 O1a1a1a1的 snp 数：11764<br>
PINV=0.9983768789（未变异位点的比例）<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408222157820.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408222158743.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408222200662.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408222203000.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>把 log 文件拖进去，一两个 groupsize 低于200没啥问题<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409040853188.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>烧掉前25%的树<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409040849174.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>]]></description><link>软件操作\分析软件\beast-beast树.html</link><guid isPermaLink="false">软件操作/分析软件/Beast-Beast树.md</guid><pubDate>Wed, 04 Sep 2024 00:54:28 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408221608956.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408221608956.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[1 BEAUti]]></title><description><![CDATA[ 
 <br>未提及的地方是默认的，不需要更改<br><br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408161436204.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408161437129.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408161436118.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>
<br>
pINV 值<br>
10K_5个数据集的总位点数：7247765<br>
94个 HM的 snp 数：4693<br>
PINV=0.99935249（未变异位点的比例）<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408161534717.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
突变速率<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408161434710.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408161536211.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408161537325.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>
<br>先查看 log 文件<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408181957298.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>选择对应的树文件，线性这点和之前的设置统一，可以指定时间区间<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409101752829.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>构建 BSP 结果<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408181958489.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
]]></description><link>软件操作\分析软件\beast-bsp设置.html</link><guid isPermaLink="false">软件操作/分析软件/Beast-BSP设置.md</guid><pubDate>Tue, 10 Sep 2024 09:53:04 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408161436204.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408161436204.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[报错内容]]></title><description><![CDATA[ 
 <br><br>
<br>Beast跑出的结果 log 和 tree 文件在拉入 tracer 时遇到了报错，此时需要借助 logCombiner 来将现有文件进行拆分和合并<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408291712203.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br><br>
<br>找到 log 结果文件中错误的行，如上图，是状态27516000的位置<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408291715665.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>步长不一致，不是4000的增长；拉到后面，看到长度明显不一致。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408292125921.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>
再找 tree 文件中状态27516000，没有找到的话下就查看位置相近的状态，这里是27504000，步长也不一致，与 log 文件的状态缺失的范围还不一样。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408291718366.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
要保证 log 和 tree 文件中状态数字一致，并分割成2个文件，用于合并。所以以有更少状态数字为准。由于我删掉了 log 文件出错的27516000前的27504000，所以最后取的状态是27500000和27548000。方法是直接粘贴一个 log 文件，删掉不需要的部分即可，不要自己每个部分去粘贴新的，容易出错。<br>
log1如下<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408292131469.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>log2如下<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408292134994.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>tree1如下<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408292135363.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>tree2如下<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408292135843.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>合并的时候一定要把状态从0开始的作为第一个文件，状态更大的作为第二个文件。<br><br>注意 File 的类型要选择 log<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408292141604.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>注意 File 的类型要选择 tree<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408292140777.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>注意：<br>
需要两个文件开始和结束状态的数目一致，有部分不一致的话就删掉，一定要保持二者首尾状态一致。<br>
<br>
log合并结果<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408292144937.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408292146341.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
tree合并结果<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408292143035.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408292147724.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>软件操作\分析软件\beast-logcombiner.html</link><guid isPermaLink="false">软件操作/分析软件/Beast-logCombiner.md</guid><pubDate>Thu, 29 Aug 2024 13:56:58 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408291712203.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408291712203.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[数据准备]]></title><description><![CDATA[ 
 <br><br>
<br>
Fasta 文件，是有单倍群后缀的<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071519166.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
前期工作：<br>
获得连好后缀的 ID：用_连接第 1,2 列. Py （这里得到的文件可以供第 2 步分组使用）<br>
提取这些样本的 fasta：提取 fasta 中特定 fasta. Py

<br>
分组文件，无标题，制表符tab 分割<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071538006.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
分组文件，其他条件，如群体，无标题，制表符 tab 分割<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071545205.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
在 wsl 中运行代码 Network 大礼包 copy. sh 来获得输入文件, 需要修改这 5 个路径<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071550828.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
注意 fastHaN 的路径可以先添加到工作区再粘贴<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071551721.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>在 wsl 终端运行脚本即可<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071555317.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>得到的结果如下<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071557104.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>其中 .gml 文件和分组 csv 文件是需要的输入文件<br><br>
<br>
找到这个 html 文件，用浏览器打开（我的必须在软件目录里打开才能使用）<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071600357.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
使用前说明：<br>
<img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071612176.png" referrerpolicy="no-referrer"><br>
红框内 Group 是自定的其他分组文件（这里是群体名），黄框内 Hap 是单倍群分组文件，每次画图只展现其中一种分组。如果先展现其他分组的图，则将红框内的 groupconf.csv 是填入 Groups 中，而 hapconf.csv 是填入 Haplotypes 中。两个 updated.csv 是彩虹色配色。

<br>
依次点击

<br>
<br>
选择 TCS 或其他算法的 gml 文件<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071610100.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
先选 Group<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071621031.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
再选 haplotype<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071622939.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
<br>导出结果为 svg，可以在 AI 中打开<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071632515.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
]]></description><link>软件操作\分析软件\fasthan软件制作network.html</link><guid isPermaLink="false">软件操作/分析软件/FastHaN软件制作Network.md</guid><pubDate>Fri, 07 Jun 2024 08:32:58 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071519166.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406071519166.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Fst流程]]></title><description><![CDATA[ 
 <br>
<br>
将 Arp 分组为每个群体 1 个组<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405201104682.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
参数选择<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405201104532.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
结果粘贴到 excel 中，半矩阵丢给 chat 变成全矩阵（下三角转置到上三角），注意将负值转换为 0，保存为 csv<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405201135966.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
准备好分组文件 csv，有表头<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405201716343.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>分组文件可以有多列<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406122112417.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>在 Fst_heatmap. R 跑，修改文件路径和 2 个文件名<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405201718571.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>（如果分组是 txt 文件，记得要改分隔符）<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406121732061.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br># 在开始之前请确保你已经安装了下列package
# 载入需要的package
library(ape)
library(igraph)
library(ggplot2)

library(pheatmap)
library(reshape2)
library(ggsci)
library(gridExtra)

# 设置工作路径，你需要把Fst文件和分组文件放到工作路径
setwd("C:/Users/LuzHu/Desktop")

# 清除内存
rm(list=ls())

# 读取数据
mydata&lt;-read.table("2207Y_10级0.1.csv",header=TRUE,sep=",", row.names = 1)
#group &lt;-read.table("group.csv",header=TRUE,sep=",", row.names = 1)

# 创建绘图PDF
pdf("Fre2207_10级0.1_3.pdf", width=20, height=8.5)

# 绘制图像
pheatmap(mydata, 
         cluster_cols=FALSE, # 建议换成FALSE
         cluster_rows=FALSE, # 建议换成FALSE
         angle_col = c("45"),
         fontsize = 8,
         fontsize_row =8,
         fontsize_col =6,
         #annotation_col = group, 
         #annotation_row = group,
         cellwidth =8, 
         cellheight = 8, 
         cutree_cols=1, # 建议换成1
         cutree_rows=1, # 建议换成1
         main = "Frequency",
         color = colorRampPalette(c("#00A087FF","#3C5488FF","#F39B7FFF"))(10000),
         display_numbers = matrix(ifelse(abs(mydata)&gt; 50, "++", ifelse(abs(mydata)&gt;=40,"+"," ")), nrow(mydata)))
# 结束绘图
dev.off()

# 换个样式
pheatmap(mydata, 
         cluster_cols=TRUE, 
         cluster_rows=TRUE, 
         angle_col = c("45"),
         fontsize = 8,
         fontsize_row =8,
         fontsize_col =6,
         annotation_col = group, 
         annotation_row = group,
         cellwidth =8, 
         cellheight = 8, 
         cutree_cols=4,
         cutree_rows=4, 
         main = "FstMatrix",
         color = colorRampPalette(c("#F8F8FF","#91D1C2FF","#3C5488FF"))(10000),
         display_numbers = matrix(ifelse(abs(mydata)&gt; 50, "++", ifelse(abs(mydata)&gt;=40,"+"," ")), nrow(mydata)))




# 换个样式
pheatmap(mydata,
         cluster_cols=TRUE,
         cluster_rows=TRUE,
         angle_col = c("45"),
         fontsize = 8,
         fontsize_row =8,
         fontsize_col =6,
         annotation_col = group,
         annotation_row = group,
         cellwidth =8,
         cellheight = 8,
         cutree_cols=4,
         cutree_rows=4,
         main = "FstMatrix",
         color = colorRampPalette(c("#20364F","#31646C","#4E9280","#96B89B","#DCDFD2","#ECD9CF","#D49C87","#B86265","#8B345E","#50184E"))(10000),
         display_numbers = matrix(ifelse(abs(mydata)&gt; 50, "++", ifelse(abs(mydata)&gt;=40,"+"," ")), nrow(mydata)))

# 换个样式
pheatmap(mydata,
         cluster_cols=TRUE,
         cluster_rows=TRUE,
         angle_col = c("45"),
         fontsize = 8,
         fontsize_row =8,
         fontsize_col =6,
         annotation_col = group,
         annotation_row = group,
         cellwidth =8,
         cellheight = 8,
         cutree_cols=4,
         cutree_rows=4,
         main = "FstMatrix",
         color = colorRampPalette(c("#023047","#126883","#279EBC","#90C9E6","#FC9E7F","#F75B41","#D52120"))(10000),
         display_numbers = matrix(ifelse(abs(mydata)&gt; 50, "++", ifelse(abs(mydata)&gt;=40,"+"," ")), nrow(mydata)))
复制]]></description><link>软件操作\分析软件\fst流程.html</link><guid isPermaLink="false">软件操作/分析软件/Fst流程.md</guid><pubDate>Wed, 12 Jun 2024 13:12:33 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405201104682.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405201104682.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[MDS工作流程]]></title><description><![CDATA[ 
 <br>
<br>
输入文件：只需要准备好Fst矩阵，同Fst流程中的csv文件<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402281112676.png" referrerpolicy="no-referrer" style="width: 550px; max-width: 100%;">

<br>
使用MDSRUN脚本（不用MDS脚本），会得到一个转化为变异值的文件<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402281113442.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>R脚本里真正需要的其实只有这一点点，所以需要安装ggplot2包<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402281114727.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
注意修改路径和文件名，因为是csv文件，要修改table位置。运行的时候也直接点到setwd那里开始run就可以。最后一个write得到的是结果文件<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402281118544.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>得到输出的结果文件，其实就相当于是PCA的向量文件
<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402281122268.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>使用PCA的r和py脚本，用同样的方式修改路径等即可画出MDS，py脚本只是把原来的改良了一下<br>
准备好以下4个文件<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402281138934.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>poplist文件其实就是Fst中类似的矩阵名再次分组的group文件，但是要按照这种格式，我这里的南北是乱分的<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402281147426.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>首先对py脚本进行修改<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402281139416.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>现在R脚本已经修改好了，然后按照之前PCA的方式修改路径<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402281342636.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>标签的大小改一下，否则会报错显示太宽了<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402281348089.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>（其实可以改成4,1,0,2，比较好看）拉动窗口是可以看到图随之变化的，不需要去改代码<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403012033979.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>导出的时候使用Portrait！！<br>
<br>这是结果，会发现横纵轴还是PC1、PC2，要么导出过后在AI/adobePDF修改，要么就要把R代码中的PCA替换成MDS<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402281349649.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
]]></description><link>软件操作\分析软件\mds工作流程.html</link><guid isPermaLink="false">软件操作/分析软件/MDS工作流程.md</guid><pubDate>Sun, 16 Jun 2024 13:09:22 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402281112676.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402281112676.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Network + Network Publisher]]></title><description><![CDATA[ 
 <br>
<br>对于Y-STR，需要的是输入的需要是.ych文件。打开Network后依次点击<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404211720299.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>选择自己的ych文件后，出现一些提示，直接点yes就行<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404211721092.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>然后点击计算，会提示再次保存一个pro文件，并开始计算<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404211721368.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404211722578.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>然后会提示是否继续收缩树枝，选择yes到最后完成即可，这时候会保存一个SCO文件<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404211722054.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404211723967.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>现在计算MJ数据，依次点击后选择sco文件进行MJ计算<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404211735033.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>然后点击计算，最后会得到一个out文件<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404211736971.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>现在再对out文件进行一个MP最大简约法优化，不用更改参数，最后得到一个sto文件。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404211811098.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
]]></description><link>软件操作\分析软件\network-+-network-publisher.html</link><guid isPermaLink="false">软件操作/分析软件/Network + Network Publisher.md</guid><pubDate>Sun, 21 Apr 2024 10:12:36 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404211720299.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202404211720299.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[NJ Tree]]></title><description><![CDATA[ 
 <br>谁说明问题就用谁（何老师说用 UPGMA）<br>
<br>
算法 UPGMA<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405282233122.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
算法邻接<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405282235610.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

]]></description><link>软件操作\分析软件\nj-tree.html</link><guid isPermaLink="false">软件操作/分析软件/NJ Tree.md</guid><pubDate>Tue, 28 May 2024 14:50:07 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405282233122.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405282233122.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[PCA计算变异解释度]]></title><description><![CDATA[ 
 <br>
<br>使用 Lineagetracker 跑 PCA 会获得每一级单倍群的对应文件，以 4 级单倍群为例<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406032218252.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>变异解释度在这个文件中<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406032223120.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>变异解释度计算方法：将获得的所有值求和，然后用每一个值去除以总值，第一行代表 PC1，第二行代表 PC2，以此类推。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406032222022.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
]]></description><link>软件操作\分析软件\pca计算变异解释度.html</link><guid isPermaLink="false">软件操作/分析软件/PCA计算变异解释度.md</guid><pubDate>Mon, 03 Jun 2024 14:23:36 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406032218252.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406032218252.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[sublime用法-序列检查]]></title><description><![CDATA[ 
 <br><br>因为1条序列由1个&gt;开头，&gt;的数量应与我们实际需要比对的序列数量一致。比如我这次需要比对18条序列，在 Sublime 中按&nbsp;Ctrl&nbsp;+&nbsp;F进入搜索模式，然后搜索&gt;，如下图所示，此时左下角会出现文档中的&gt;的数量(绿色方框)，显示18个即说明序列数量正确。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202401242034862.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>对于CDs序列，大部分的序列应该都是以ATG 起始密码子起始（有些物种可能出现GTG），我们不能直接搜索以ATG开头的行，这样会与序列中间的以ATG开头的行混淆。再仔细看一下这些序列，发现都是&gt;所在的行以1个数字结尾，然后另起一行以ATG开头，我们通过精确匹配就能准确搜索到到所有以ATG开始的序列。  <br>在 Sublime 中按&nbsp;Ctrl&nbsp;+&nbsp;F进入搜索模式，如下图所示，点击下方最左侧的正则表达式搜索，搜索式为[1-9]\nATG，此时左下角显示18个即说明序列方向应该正确。（该搜索式中，[1-9]代表第1个字符匹配1-9之间的所有数字，\n代表换行符）<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202401242036325.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>同样的，我用表达式TAG\n\n搜索时，发现所有18条序列都是以TAG结尾（终止密码子一般是 TAA、TAG、TGA）,因此可以确认我的所有序列都是完整的，且方向也是对的。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202401242037065.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>一般从genbank上下载下来的序列&gt;所在的行不会像例子中这么干净，一般会有一串信息。因为之后构建进化树的时候软件一般会默认使用&gt;后面的信息给树中的序列命名，所以这里可以提前用 Sublime 进行批量整理。<br>在下面的例子中，如果我们想只保留&gt;后面的 genbank登录号，只需要搜索:，然后点击右侧的 Find All，此时光标会出现在所有匹配的:上，此时想批量删除:右侧的信息，只需要按Fn+Shift+右方向键选中，然后按退格键删除即可。<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202401242038776.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>软件操作\分析软件\sublime用法-序列检查.html</link><guid isPermaLink="false">软件操作/分析软件/sublime用法-序列检查.md</guid><pubDate>Wed, 24 Jan 2024 12:40:28 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202401242034862.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202401242034862.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[WGS操作流程]]></title><description><![CDATA[ 
 <br><br>具体流程如下：<br>
<br>测序数据生成：实验室中进行DNA测序实验，生成原始的测序数据，通常以FASTQ格式保存。
<br>数据质控：对FASTQ文件进行质控，包括去除低质量读段、去除接头序列等，以确保数据质量。
<br>比对：使用比对工具（如BWA、Bowtie等）将质控后的FASTQ文件比对到参考基因组上，生成SAM格式的比对结果。
<br>SAM转BAM：将SAM格式的比对结果转换为BAM格式，BAM文件包含了比对信息，并且通常被压缩以节省存储空间。
<br>排序和索引：对BAM文件进行排序和索引，以便更快地访问和处理数据。
<br>后续分析：对BAM文件进行后续的生物信息学分析，如变异检测、基因表达分析等。
<br>bam转gvcf，是得出变异位点的信息，包括检测出的变异位点和未检测出的位点<br>使用gvcf得到vcf]]></description><link>软件操作\分析软件\wgs操作流程.html</link><guid isPermaLink="false">软件操作/分析软件/WGS操作流程.md</guid><pubDate>Tue, 09 Apr 2024 11:37:49 GMT</pubDate></item><item><title><![CDATA[初探PLINK文件格式（bed，bim，fam）]]></title><description><![CDATA[ 
 <br>近十几年来，全基因组关联研究（Genome-Wide Association Study,GWAS）迅速发展，为探索疾病的发病机制做出了突出贡献，也为精准医学的发展奠定基础。在我们进行GWAS分析时，经常会使用到PLINK软件，对于新手来说可能掌握起来比较困难，所以首先我将和大家分享PLINK文件的基本格式。<br>我在这里讲到的PLINK文件主要有三类，即bed，bim和fam文件。<br>
其中bed是存储基因型信息的，bim文件则是存储每个遗传变异（通常是SNP）的相关信息，最后的fam存储的是样本信息，接下来我将一一介绍。<br><br>文件bed主要是存储等位基因信息，它开头前三个字节永远是0x6c, 0x1b, 和0x01，接下来就是V组N/4个字节的序列，这里V是指遗传变异的个数，N是指样本数，假如N无法被4整除，那么将N/4的结果取整后加1作为各组的字节数，编码信息如下：<br>00：基因型是bim文件第一个等位基因的纯合子<br>01：基因型缺失<br>10：基因型是杂合子<br>11：基因型是bim文件第二个等位基因的纯合子<br>如果你在PLINK里加载如下文件：<br>test.ped:<br>
1 1 0 0 1 0 G G 2 2 C C<br>
1 2 0 0 2 0 A A 0 0 A C<br>
1 3 1  2 1 2 0 0  1 2 A C<br>
2 1 0 0 1 0 A A 2 2 0 0<br>
2 2 0 0 2 2 A A 2 2 0 0<br>
2 3 1 2 1 2 A A 2 2 A A<br>test.map:<br>
1 snp1 0 1<br>
1 snp2 0 2<br>
1 snp3 0 3<br>那么它就会自动生成一个bed文件，查看bed文件内容为：<br>_0x6c 0x1b 0x01 0xdc 0x0f 0xe7 0x0f 0x6b 0x01_<br>同时也会有bim文件：<br>1 snp1 0 1 G A<br>
1 snp2 0 2 1 2<br>
1 snp3 0 3 A C<br>这里bed文件的前三个字节是固定格式，第四个字节0xdc的二进制值为11011100，那么在第一个SNP（snp1）上，样本1的基因型00对应就是GG（从后往前数），样本2的基因型11对应就是AA, 样本3的基因型缺失，样本4基因型11对应AA，第五个字节0x0f 的二进制值为00001111，那么样本5的基因型11对应AA，样本6基因型11也对应AA，注意了后面的00和00是指6个样本每四个分一组需要分为两组，但由于两组需要8样本，这时就缺少两个样本，这缺失的就用00表示。这里第6和第7字节存储的是第二个snp的基因型信息，推断方法同上，这里就不赘述了。<br><br>讲完bed文件后，bim文件应该非常好理解了，这里bim文件是一个没有题头的文本文件，每一行代表一个遗传变异，共计有6列，其信息如下：<br>（1）第一行：染色体编号(通常用整数标记，如22表示第22条染色体，性染色体和线粒体染色体用'X'/'Y'/'XY'/'MT'表示，而'0' 代表染色体信息缺失) ；<br>（2） 第二行：变异标识符，这个就相当与每一个遗传变异的编号，常见的SNP可以采用以“rs”开头的编号；<br>（3） 第三行：每个遗传变异在基因组上的位置，用摩尔根或者厘摩尔根表示；<br>（4） 第四行：碱基对的坐标；<br>（5） 第五行：等位基因1，通常是次要等位基因（minor allele）；<br>（6） 第六行：等位基因2，通常是主要等位基因（major allele）。<br><br>关于fam文件，它也是一个没有题头的文本文件，每一行代表一个样本，共计6列，其信息如下：<br>（1） 第一行：家系编号('FID')<br>（2） 第二行：家系内部编号('IID'; 不能是 '0')<br>（3） 第三行：父系编号 ('0' 表示父系信息缺失)<br>（4） 第四行：母系编号('0' 表示母系信息缺失)<br>（5） 第五行：性别编号('1' = 男, '2' = 女, '0' = 性别未知)<br>（6） 第六行：表型值 ('1' = 对照, '2' = 病例, '-9'/'0'/表示表型缺失)。<br>关于PLINK文件的基本格式就介绍完毕了，希望大家能牢记各个文件的结构信息，这在后续的数据分析中非常重要。]]></description><link>软件操作\分析原理\初探plink文件格式（bed，bim，fam）.html</link><guid isPermaLink="false">软件操作/分析原理/初探PLINK文件格式（bed，bim，fam）.md</guid><pubDate>Tue, 23 Jan 2024 14:36:11 GMT</pubDate></item><item><title><![CDATA[单体型网络(Haplotype Network)的构建及展示]]></title><description><![CDATA[ 
 <br><a data-tooltip-position="top" aria-label="https://mp.weixin.qq.com/s/1qMhH6PwZGAXzIGBDzHV1w" rel="noopener" class="external-link" href="https://mp.weixin.qq.com/s/1qMhH6PwZGAXzIGBDzHV1w" target="_blank">mp.weixin.qq.com</a>傅军 生信者言<br>单体型网络（Haplotype Network）是谱系地理研究的重要手段。通过单体型网络，我们可以推断群体的起源、扩散历史。<br>那么，怎样理解单体型网络？怎样构建单体型网络？  <br><br>单体型（haplotype）在单体型网络中是指一段遗传连锁的核酸序列。不同的单体型，通过序列中的变异来区分（常用SNP）。一般用来进行单体型网络构建的单体型有：1）线粒体基因组；2）Y染色体；3）叶绿体基因组；4）基因组上一段强连锁的区段。<br><img src="https://image.cubox.pro/cardImg/2024022715214586297/22018.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer">  <br>上图是一个单体型网络的例子，图中一个圆圈表示一个单体型，两个圆圈之间的连线表示这两个单体型相关（一个是由另一个突变而来），连线上面的短竖线表示从一个单体型到与其相连的单体型需要经历的碱基替换数，一个竖线表示一个替换。彩色的圆圈表示我们实际取样到的单体型，圆圈大小表示这种单体型的个数。灰色圆圈表示推断出来可能存在的中间单体型，没有被取样到。<br>一种颜色一般表示一个群体，如按地理划分，品种划分等。图中例子一个单体型只存在于一个群体中，实际情况一个单体型往往在多个群体中出现。此时，一个单体型圆圈中填充多种颜色，以饼图的形式展示。<br>从上图我们可以猜测一种可能的群体历史：**A群体和C群体都起源于B群体，A群体从B群体分化出来后，经历过急剧的群体扩张，导致A群体的单体型演化出多个亚型。当然，为了避免过度解读，推断群体历史需要多种证据结合起来。<br><br>比较经典的软件就是Network了，但是该软件只支持Windows系统，用起来也比较复杂。这里推荐的是PopART，该软件支持Windows，Mac，Linux系统，而且用起来也非常方便，支持多种常用的Network构建方法，关键是该软件支持地图的形式展示单体型分布。下面简单介绍一下该软件的使用方法。<br><br>#NEXUS
begin data;
dimensions ntax=4 nchar=30;
format datatype=dna missing=N gap=-;
matrix
seq1 CCACCGTTGCTAAAAATTCATGACACAAGG
seq2 CCACAGTTTCTAAAAATTCGTGATACAAGG
seq3 CCACAGTTGCTACAAATTCATGATACAAGG
seq4 CCACAGGTGCTAAAAATTCATGAAACAAGG

;

end;

BEGIN TRAITS;
Dimensions NTRAITS=5;Format labels=yes missing=? separator=Comma;
TraitLatitude 53 43.6811 5.4 -25.61 -0;
TraitLongitude 16.75 87.3311 26.5 134.355 -76;
TraitLabels Europe Asia Africa Australia America;
Matrix
seq1 10,5,0,6,0
seq2 0,0,5,0,0
seq3 4,0,10,0,0
seq4 0,0,0,4,2

;

END;
复制<br>DATA部分主要纪录单体型信息，比较好理解。<br>TRAITS部分主要纪录单体型来源的群体。如上所示，例子中取了来自5个大洲的样本，一共4种单体型，TRAITS纪录了每种单体型在不同大洲取样的个数，如seq1在Europe有10个，在Asia有5个等等。关键字TraitLatitude和TraitLongitude纪录5个群体取样地点的经纬度，该信息在单体型网络构建中可以不用，当需要用地图展示单体型地理分布时，需要填该信息。<br>NEXUS文件生成后，打开PopART，通过File -&gt; Open输入NEXUS文件，然后通过菜单栏Network选择单体型网络构建算法，如常用的Median Joining Network。选择Median Joining Network后，会提示填写Epsilon参数，该参数用来控制推断中间单体型的细节程度，该值越大，会展示更多推断的中间单体型，一般选择默认的0就好。填好该参数后，点击OK，就生成了我们需要的单体型网络。然后通过菜单栏Edit下的选项，对图中群体的颜色、字体、图例等进行调整。<br><br><img src="https://image.cubox.pro/cardImg/2024022715214636274/11777.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer"><br>点击View -&gt; Switch to map view就可以得到如上所示的单体型地理分布图。通过单体型的地理分布直观展示，我们就可以对群体的扩散迁徙途径进行推断。<br><br> 像线粒体、叶绿体、Y染色体等这些在遗传过程中不发生重组的序列，我们直接把检测到的变异替换到参考序列中，就可以用于单体型网络构建。但是通常研究的二倍体基因组数据，由于存在重组，因此不能简单的拿一段序列就进行单体型网络构建，这样的单体型网络就失去了它本身的意义。如要用基因组上面的序列，可以通过以下步骤：<br>
<br>
找到基因组上强连锁的区段；

<br>
对这段区域中的SNP进行phase。

<br>第一步可以用PLINK，命令如下：<br> plink --noweb --bfile bed_prefix --blocks no-pheno-req <br>该命令运行会生成.blocks.det文件，该文件纪录了强连锁区段的起止位置、所包含的SNP。接下来，我们需要对感兴趣的强连锁区域的杂合SNP进行phase，构建单体型，该步可以使用软件BEAGLE。<br><br><br>第二步，使用BEAGLE进行phase：<br>java -Xss5m -Xmx4g -jar beagle.jar gt=prefix.vcf out=phased.vcf chrom=[chr]:[start]-[end]<br>phase完成后，经过简单的文本处理，就可以将vcf文件转化为PopART需要的单体型文件格式。<br><img src="https://image.cubox.pro/cardImg/2024022715214650633/97111.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer"><br>本图来自DodoGene<br>PopART在展示单体型地理分布时，饼图大小不能很好调整，这里良心推荐拓美科的DodoGene地理饼图小工具，该工具可以按照需求调节饼图大小比例和颜色，而且比PopART美观，可以去dodogene.com体验。<br>作者介绍<br>
<a data-tooltip-position="top" aria-label="https://mp.weixin.qq.com/s?__biz=MzI3Mzc1MzczMA==&amp;mid=2247485404&amp;idx=1&amp;sn=cddab2e74fe2a2f2424fddd10acd515a&amp;chksm=eb1f3431dc68bd27f5941c1f2168d4c1af24f61b1896aad8e27a24eb9b906d2d7724bc58c52a&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="https://mp.weixin.qq.com/s?__biz=MzI3Mzc1MzczMA==&amp;mid=2247485404&amp;idx=1&amp;sn=cddab2e74fe2a2f2424fddd10acd515a&amp;chksm=eb1f3431dc68bd27f5941c1f2168d4c1af24f61b1896aad8e27a24eb9b906d2d7724bc58c52a&amp;scene=21#wechat_redirect" target="_blank"></a><img src="https://image.cubox.pro/cardImg/2024022715214746226/23084.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer">]]></description><link>软件操作\分析原理\单体型网络(haplotype-network)的构建及展示.html</link><guid isPermaLink="false">软件操作/分析原理/单体型网络(Haplotype Network)的构建及展示.md</guid><pubDate>Tue, 27 Feb 2024 07:32:42 GMT</pubDate><enclosure url="https://image.cubox.pro/cardImg/2024022715214586297/22018.jpg?imageMogr2/quality/90/ignore-error/1" length="0" type="false"/><content:encoded>&lt;figure&gt;&lt;img src="https://image.cubox.pro/cardImg/2024022715214586297/22018.jpg?imageMogr2/quality/90/ignore-error/1"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[评估树可靠性的方法]]></title><description><![CDATA[ 
 <br>无论是使用的distance-based方法，还是character-based建树方法，都需要进行树的可靠性检验<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403011924008.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>一般，常用的有以下两种不同的检验策略<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403021441717.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>这是一个bootstrap的分析模式图，简单来说就是通过对数据集进行轻微扰动来重新采样<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403021442863.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>
刚开始根据序列得到Original alignment，并画出了一个对应的树

<br>
然后重新采样（在8个位点中随机取一个，如同时取site1，site3等，因为取完会放回，所以可能会出现重复某个位点），然后又画出相应的树。

<br>
最后按设定的次数重复，如设定为100次，则会完成bootstrap100次。然后标出在这100次中original tree每个节点出现的次数，如果&gt;70次，就认为是可靠的。

<br><br>会删掉一半的位点，然后继续分析，此处不过多阐述]]></description><link>软件操作\分析原理\评估树可靠性的方法.html</link><guid isPermaLink="false">软件操作/分析原理/评估树可靠性的方法.md</guid><pubDate>Sat, 02 Mar 2024 06:56:13 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403011924008.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403011924008.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[群体分化指数-Fst]]></title><description><![CDATA[ 
 <br><a data-tooltip-position="top" aria-label="https://mp.weixin.qq.com/s/iIjEchxt-6gVZ_xWT8yPAg" rel="noopener" class="external-link" href="https://mp.weixin.qq.com/s/iIjEchxt-6gVZ_xWT8yPAg" target="_blank">mp.weixin.qq.com</a>Yankai universebiologygirl<br><br>前面文章写到群体遗传学主要致力于解决两个问题：1. 推断群体历史；2. 检测自然选择。今天这篇文章就来讲一下检测自然选择最基础也是最常用的一种方法：群体分化指数Fst<br><br><br>在群体遗传学中，F-statistics（Fixation indices）是衡量种群中基因型实际频率是否偏离遗传平衡（哈温平衡）理论比例 的指标。F-statistics的概念由美国遗传学家Wright在文章中提出，当时他对牛的近亲繁殖很感兴趣，然而，由于完全显性优势导致显性纯合子和杂合子控制的表型相同，直到20世纪60年代以来分子遗传学的出现，遗传学家们才得以测量群体中的杂合度。<br>
F-statistics也可以被认为是在分层群体（如生活在高原的高海拔人群和生活在平原的低海拔人群）中不同亚群间基因相关性的度量 。这种相关性 (也可以理解为genetic distance ) 会受到进化事件的影响，如遗传漂变，瓶颈效应，遗传搭载效应（有利突变附近位点由于连锁随着主效应位点一起频率升高并逐渐在群体中固定下来），突变，基因交流，近亲繁殖，自然选择等。这些进化事件导致的改变都会反映在等位基因频率和单倍型频率上，不过目前大多算法都是针对二等位基因设计，多等位基因的计算效果还有待进一步评估。<br>
在这里我们先定义一些符号：<br>
O(f(Aa))--实际观察杂合子频率，E(f(Aa))--期望杂合子频率，N表示数目。<br>
在群体结构为两个层次的群体中：一个层次为个体（I）到亚群（S），另一个从亚群(S)到总群体（T）.<br>
HI 表示总群体所有个体实际观察到的杂合子频率平均值；<br><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FyVVY2SZTVTzQYiceIDHpcpHo3PiawBwNE8xJXHgibMVg2KJ7uiaznlicPwxh8iadkUCv43jwm72ibfvA1B8H8cb7Ph2XQ%2F640%3Fwx_fmt%3Dpng&amp;valid=false" referrerpolicy="no-referrer"><br>HS 表示亚群在哈温平衡下杂合子期望频率:<br><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FyVVY2SZTVTzQYiceIDHpcpHo3PiawBwNE8hA1JoeU2U2cS7yybDj5FhjgHSqPo37ud3lX1klqcgT8xkRtxFsG2icg%2F640%3Fwx_fmt%3Dpng&amp;valid=false" referrerpolicy="no-referrer"><br>HT表示总群体在哈温平衡下杂合子期望频率；<br><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FyVVY2SZTVTzQYiceIDHpcpHo3PiawBwNE8rMYsSSFVoKJib4qvbNHWAmRpuRUNibiaV32NEMIWwRSYSvPek9dBwza7A%2F640%3Fwx_fmt%3Dpng&amp;valid=false" referrerpolicy="no-referrer"><br>FIT 表示个体(I)相对于总群体(T)的近交系数，即总群体的平均近交系数；<br><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FyVVY2SZTVTzQYiceIDHpcpHo3PiawBwNE80MpS5sLR3xEVfWCHM1ib5BgrSblxrxiaoTwo2mxyDkZeVOuy5t1qe2Ug%2F640%3Fwx_fmt%3Dpng&amp;valid=false" referrerpolicy="no-referrer"><br>FIS 表示个体(I)相对于亚群(S)的近交系数，即亚群的平均近交系数；<br><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FyVVY2SZTVTzQYiceIDHpcpHo3PiawBwNE8MhOx4pvluS2icML6bgvlJzOpJmZhicILoInahcs4micMgTHcKYIIfgczA%2F640%3Fwx_fmt%3Dpng&amp;valid=false" referrerpolicy="no-referrer"><br>FST表示亚群(S)相对于总群体(T)的近交系数，即有亲缘关系亚群间的平均近交系数。<br><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FyVVY2SZTVTzQYiceIDHpcpHo3PiawBwNE8Jf4nsKxJFqs91MoOQpWOPice5AQILBH5PqacpRKEYYhzW9EtGv2AtoA%2F640%3Fwx_fmt%3Dpng&amp;valid=false" referrerpolicy="no-referrer"><br>在哈温平衡下，近交系数计算公式如下：~~<br><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FyVVY2SZTVTzQYiceIDHpcpHo3PiawBwNE8L3kWEjlMe0CcVVDUibPlxBIg6VL2SruCAs61YpSicmJljyOHE1SOwNoQ%2F640%3Fwx_fmt%3Dpng&amp;valid=false" referrerpolicy="no-referrer"><br>并且预期杂合频率为： E (f(Aa)) = 2pq<br><br>上面讲了这么多公式，下面通过一个例子来加深理解。<br><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_jpg%2FyVVY2SZTVTzQYiceIDHpcpHo3PiawBwNE8BpdfKqu6D6xzbAibdVJNFg7gtK3cMQZnvfgVKpYD4aSnGicyZ3KveJvA%2F640%3Fwx_fmt%3Djpeg&amp;valid=false" referrerpolicy="no-referrer"><br>FST的取值范围为[0,1], 数值越大，表明等位基因在各自亚群中越固定（频率越高），群体间分化程度越大。<br><br><br>在实际项目中，样本很难完全代表总体，上述各统计量也很难得到，因此出现了很多FST计算方法，现在应用最广泛的是Weir &amp; Cockerman（1984）提出的方法。<br>
数据上采用Gou et al (2014, Genome Reserch) 中的数据。<br><br>进行质控，剔除高缺失率（--geno 0.05）和极低等位基因频率( --maf 0.01 )的SNP<br>#!/bin/bash

plink=/software/biosoft/software/plink/plink
$plink--vcf60dog.vcf--geno0.05--maf0.01--dog--recodevcf-iid--out60dog_QC
复制<br>这里以TM和YJ为例，计算FST，因为逐个位点计算F~ST~时，可能会出现F~ST~值很高的假阳性信号（中性选择导致），所以这里考虑到搭载效应同时计算了滑窗F~ST~，二者可以对照着看。TM_4500.txt为TM样本ID文件，一行一个ID，YJ_800.txt同左。<br>#!/bin/bash

vcftools=/software/biosoft/software/vcftools_0.1.13/bin/vcftools

#单位点计算Fst
$vcftools--vcf60dog_QC.vcf--weir-fst-popYJ_800.txt--weir-fst-popTM_4500.txt--outTM_4500vsYJ_800_single_locus

#窗口
$vcftools--vcf60dog_QC.vcf--weir-fst-popYJ_800.txt--weir-fst-popTM_4500.txt--fst-window-size20000--fst-window-step5000--outTM_4500vsYJ_800_20k_5k
复制<br>这里可以来看下结果文件<br>
单位点：<br>
<img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FyVVY2SZTVTzQYiceIDHpcpHo3PiawBwNE87TnZEtCaNKwMClHlDvMcW0Rtcicuoeh6br9URb4mpnMjU2c7rKpKCzw%2F640%3Fwx_fmt%3Dpng&amp;valid=false" referrerpolicy="no-referrer"><br><br><br>窗口：<br>
<img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FyVVY2SZTVTzQYiceIDHpcpHo3PiawBwNE8ia7w7L5MDRcdKLhekHIG5PF6e8AAhiadl2IT1dLibQEmFt3DgKcpggL2g%2F640%3Fwx_fmt%3Dpng&amp;valid=false" referrerpolicy="no-referrer"><br><br>这里使用R包qqman完成曼哈顿图可视化，以窗口结果为例。<br>
先处理数据文件格式：<br>sed"1d"TM_4500vsYJ_800_20k_5k.windowed.weir.fst|awk'{if($5&lt;0)print$1"\t"$2"\t0";elseprint$1"\t"$2"\t"$5}'&gt;TM_4500vsYJ_800_20k_5k_plot.txt
复制<br><br>#!/usr/bin/envRscript

rm(list=ls())

###加载要使用的R包
library(qqman)
library(Cairo)

Fstfile\&lt;-read.table("TM_4500vsYJ_800_20k_5k_plot.txt",header=F,stringsAsFactors=F)
SNP\&lt;-paste(Fstfile\[,1\],Fstfile\[,2\],sep=":")
Fstfile=cbind(SNP,Fstfile)
colnames(Fstfile)\&lt;-c("SNP","CHR","POS","Fst")
outfile\&lt;-"TM_4500vsYJ_800_20k_5k"
filePNG\&lt;-paste(outfile,"manhattan.png",sep=".")
CairoPNG(file=filePNG,width=1500,height=500)
colorset\&lt;-c("#FF0000","#FFD700","#2E8B57","#7FFFAA","#6495ED","#0000FF","#FF00FF")

###调用qqman,画出全部染色体
manhattan(Fstfile),chr="CHR",bp="POS",p="Fst",snp="SNP",col=colorset,logp=F,suggestiveline=F,genomewideline=F,ylab="Fst",ylim=c(0,1),font.lab=4,cex.lab=1.2,main="TMvsYJ",cex=0.8)

###只绘制单条染色体
if(FALSE){
manhattan(subset(Fstfile,CHR=="10"),chr="CHR",bp="POS",p="Fst",snp="SNP",col=colorset,logp=F,suggestiveline=F,genomewideline=F,ylab="Fst",ylim=c(0,1),font.lab=4,cex.lab=1.2,"TMvsYJ_chr10",cex=0.8)
}

dev.off()
print("==================manhattanplot====================")
复制<br><br>全部染色体<br>
<img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FyVVY2SZTVTzQYiceIDHpcpHo3PiawBwNE8TLo9V7Cia1unl00ApOCsgnVNPHfN4zFeSic1Al149h30YXdtiaCBXiciczA%2F640%3Fwx_fmt%3Dpng&amp;valid=false" referrerpolicy="no-referrer"><br>10号染色体<br>
<img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FyVVY2SZTVTzQYiceIDHpcpHo3PiawBwNE86P3riaRoGDiapEDfnOWaJzbznq32c8vd9GDGolLibaZicJiauCr3D5t95HQ%2F640%3Fwx_fmt%3Dpng&amp;valid=false" referrerpolicy="no-referrer"><br><br>本篇文章介绍了F~ST~的计算过程，实战过程和可视化。F~ST~是目前最基础也是最常用的检测自然选择的方法，但是由于F~ST~会显示出所有分化程度较高的位点和基因，所以有时候不是十分贴合我们的目前性状或环境因素，后续还需要结合其他分析综合判断。<br>参考文献：<br><a rel="noopener" class="external-link" href="https://en.wikipedia.org/wiki/F-statistics" target="_blank">https://en.wikipedia.org/wiki/F-statistics</a><br><a rel="noopener" class="external-link" href="https://en.wikipedia.org/wiki/Fixation_index" target="_blank">https://en.wikipedia.org/wiki/Fixation_index</a><br>Weir, B. S., and C. Clark Cockerham. "Estimating F-Statistics for the Analysis of Population Structure."Evolution , vol. 38, no. 6, 1984, pp. 1358--1370.JSTOR , <a data-tooltip-position="top" aria-label="http://www.jstor.org/stable/2408641" rel="noopener" class="external-link" href="http://www.jstor.org/stable/2408641" target="_blank">www.jstor.org/stable/2408641</a>.<br>往期精彩：  <br><a data-tooltip-position="top" aria-label="http://mp.weixin.qq.com/s?__biz=MzU1NDkzOTk2MQ==&amp;mid=2247484876&amp;idx=1&amp;sn=936375f13108c53a5d5fd759a2ad765e&amp;chksm=fbdaa69accad2f8c96768fe250f0f3ab5c76e65816cbc11df7ea0c1c960c7b2f491e524688b1&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="http://mp.weixin.qq.com/s?__biz=MzU1NDkzOTk2MQ==&amp;mid=2247484876&amp;idx=1&amp;sn=936375f13108c53a5d5fd759a2ad765e&amp;chksm=fbdaa69accad2f8c96768fe250f0f3ab5c76e65816cbc11df7ea0c1c960c7b2f491e524688b1&amp;scene=21#wechat_redirect" target="_blank">Haplotype phasing 常用软件实操介绍</a>  <br><a data-tooltip-position="top" aria-label="http://mp.weixin.qq.com/s?__biz=MzU1NDkzOTk2MQ==&amp;mid=2247484691&amp;idx=1&amp;sn=a4cd05054bcfd00e9e6c7cc3fcd7befd&amp;chksm=fbdaa645ccad2f53dba39ee6710f5eb5c96f0a92712c3966457dc7683a33f3dbdeb75baa2053&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="http://mp.weixin.qq.com/s?__biz=MzU1NDkzOTk2MQ==&amp;mid=2247484691&amp;idx=1&amp;sn=a4cd05054bcfd00e9e6c7cc3fcd7befd&amp;chksm=fbdaa645ccad2f53dba39ee6710f5eb5c96f0a92712c3966457dc7683a33f3dbdeb75baa2053&amp;scene=21#wechat_redirect" target="_blank">群体结构分析三种常用方法 (上篇)</a>  <br><a data-tooltip-position="top" aria-label="http://mp.weixin.qq.com/s?__biz=MzU1NDkzOTk2MQ==&amp;mid=2247484692&amp;idx=1&amp;sn=5a364028fccd94c3eaf2aca6e678edc9&amp;chksm=fbdaa642ccad2f54fd670a1de39665dc9bc750b6adea6306e47b4fec1c8ce7985bbefdf8e734&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="http://mp.weixin.qq.com/s?__biz=MzU1NDkzOTk2MQ==&amp;mid=2247484692&amp;idx=1&amp;sn=5a364028fccd94c3eaf2aca6e678edc9&amp;chksm=fbdaa642ccad2f54fd670a1de39665dc9bc750b6adea6306e47b4fec1c8ce7985bbefdf8e734&amp;scene=21#wechat_redirect" target="_blank">群体结构分析三种常用方法（下篇）</a>  <br><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FyVVY2SZTVTzKVJDxIPqWX7HDUTwkMpDBE4ibtKdwLyrQGWl31cfDsusZedsnEOAG5icoPomsPyClyRTqkahxtW8g%2F640%3Fwx_fmt%3Dpng&amp;valid=false" referrerpolicy="no-referrer"><br><img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_jpg%2FyVVY2SZTVTzKVJDxIPqWX7HDUTwkMpDBUF8eC6QQy9IBQoicBFHTkxQQaQhugzXGn1ysjtkw63BLia4V6XO48uEg%2F640%3Fwx_fmt%3Djpeg&amp;valid=false" referrerpolicy="no-referrer"><br><a data-tooltip-position="top" aria-label="https://cubox.pro/my/card?id=7162060777581448461" rel="noopener" class="external-link" href="https://cubox.pro/my/card?id=7162060777581448461" target="_blank">跳转到 Cubox 查看</a>]]></description><link>软件操作\分析原理\群体分化指数-fst.html</link><guid isPermaLink="false">软件操作/分析原理/群体分化指数-Fst.md</guid><pubDate>Tue, 27 Feb 2024 08:13:53 GMT</pubDate><enclosure url="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FyVVY2SZTVTzQYiceIDHpcpHo3PiawBwNE8xJXHgibMVg2KJ7uiaznlicPwxh8iadkUCv43jwm72ibfvA1B8H8cb7Ph2XQ%2F640%3Fwx_fmt%3Dpng&amp;valid=false" length="0" type="false"/><content:encoded>&lt;figure&gt;&lt;img src="https://cubox.pro/c/filters:no_upscale()?imageUrl=https%3A%2F%2Fmmbiz.qpic.cn%2Fmmbiz_png%2FyVVY2SZTVTzQYiceIDHpcpHo3PiawBwNE8xJXHgibMVg2KJ7uiaznlicPwxh8iadkUCv43jwm72ibfvA1B8H8cb7Ph2XQ%2F640%3Fwx_fmt%3Dpng&amp;valid=false"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[群体结构分析-PCA，TREE，STRUCTURE]]></title><description><![CDATA[ 
 <br><br><br>
<br>
分析原理

<br>PCA(Principal Component Analysis)，即主成分分析方法，是一种使用最广泛的数据降维算法。
<br>PCA的主要思想是将n维特征映射到k维上，这k维是全新的正交特征也被称为主成分，是在原有n维特征的基础上重新构造出来的k维特征。
<br>PCA的工作就是从原始的空间中顺序地找一组相互正交的坐标轴，新的坐标轴的选择与数据本身是密切相关的。
<br>其中，第一个新坐标轴选择是原始数据中方差最大的方向，第二个新坐标轴选取是与第一个坐标轴正交的平面中使得方差最大的，第三个轴是与第1,2个轴正交的平面中方差最大的。依次类推，可以得到n个这样的坐标轴。通过这种方式获得的新的坐标轴，我们发现，大部分方差都包含在前面k个坐标轴中，后面的坐标轴所含的方差几乎为0。
<br>于是，我们可以忽略余下的坐标轴，只保留前面k个含有绝大部分方差的坐标轴。事实上，这相当于只保留包含绝大部分方差的维度特征，而忽略包含方差几乎为0的特征维度，实现对数据特征的降维处理。


<br>
简洁点来讲现在有这样的数据，100个样品，2M标记，即是2000000X100的矩阵，那么就通过数学降维的方法简化到100X3甚至100X2乘（即PC1，PC2）

<br>
分析软件

<br>GCTA
<br>tassel
<br>EIGENSTRAT


<br>
结果展示

<br>
这个结果每一个值对应的维度的解释情况，行数与样品数量一致，第一行代表第一维，依次类推；每一行除以所有行数的和即是其第几维解释的比例<br>


<br>
第一列样品名称，第二列PC1的值，第三列PC2的值，第四列PC3的值（也就是平时看到的结果图的横纵坐标来源）<br>


<br>
PCA结果矩阵（特征向量）&nbsp;GWAS_1 0.0295707 0.0174155 -0.0245656   GWAS_10 0.0212291 -0.0552983 -0.0280335   GWAS_100 -0.0645872 0.00456635 0.00588907   GWAS_101 -0.0779853 -0.0317529 0.0138288   GWAS_102 -0.0790227 -0.0295285 0.0147819   GWAS_105 -0.0845384 0.000685319 0.0108059   GWAS_108 -0.0779536 -0.00380985 0.0101755   GWAS_109 -0.0789908 -0.00534946 0.012742   GWAS_11 0.0152839 0.0185823 -0.0305629   GWAS_110 -0.080786 -0.00255263 0.0131448<br>


<br>
PCA解释数据结果（特征值）
  &nbsp;54.402   32.2402   25.6809   18.0063   13.7968   9.6096   9.46086   9.00158   8.16587   7.60115

<br>
PCA结果图  

<br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/yLNbnJQIBAHVjvTrsXNSJPcECiaXLW151teJVqTW4HvCJYYhZMSmlOP8AWW1CA0gUItxmt40FPicVOicMXLjSkPaQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/yLNbnJQIBAHVjvTrsXNSJPcECiaXLW151wzZaDeMlvm7tJIAOqd0JghTALO91sSiaQbyykwkIKowEfDTeicXo5v9A/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/yLNbnJQIBAHVjvTrsXNSJPcECiaXLW151FNk3batcf4uCCWUia4mN3uicnf4UhWSnasBPXvWpaWnzeoIy8icPabKpA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/yLNbnJQIBAHVjvTrsXNSJPcECiaXLW151VXPjSYY4icFic8AKaJpXZO6f7RuLyCqXE57ArwibR59xSLZjnBLUF1bPA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>
<br>
结果要点

<br>
结果图中相对分群结果合理，大部分跟生产经验相一致<br>


<br>
解释度可接受，这个方面想了解的话，可以看看文献的，不是硬标准<br>


<br><br><br>
<br>
分析原理

<br>
系统发育分析中，最重要和最常见的内容为构建系统发育树。系统发育树也称为系统发生树（phylogenetic tree）、聚类树或者进化树（evolutionary tree）。以树状结构表示各个节点的进化关系，支点可以是物种、同一物种的样本、基因等单元。<br>


<br>
根据SNP或者Indel 构建其系统进化树，可以展示群体中不同个体的相互关系，基因变异相似的往往会在同一个树的cluster中，一颗好的树可以给你一个群体大概的分类(你这个群体中有多少个cluster，一般同一个亚种或者有亲缘关系的个体会形成一个cluster），这是群体遗传中重要的一部分。其构建的核心原理就是把每个位点SNPs的信息提取，然后计算每个变异位点的差异得到算法中的“距离”。

<br>
分析软件

<br>
treebest<br>


<br>
mega<br>


<br>
taseel<br>


<br>
snphylo<br>


<br>
phylip

<br>
算法

<br>
nj 临近算法<br>


<br>
ml 最大似然值

<br>
结果展示<br>


<br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/yLNbnJQIBAHVjvTrsXNSJPcECiaXLW151xWvjEs62rV0dV2v9FzA41lBruUANJrL4XpqCZqyexe7jFnOAnSjdJw/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/yLNbnJQIBAHVjvTrsXNSJPcECiaXLW151NVRFDEJ1ydZFTBLh7FrO8Jd0ZvcJS88dlxxQGnTHy0Lfa6TMfu05MA/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>
<br>
结果要点

<br>
分群清晰,大部分样品与已知生产经验一致<br>


<br><br><br>
<br>
分析原理

<br>
先预设群体由若干亚群（k=x）构成，通过模拟算法找出在k=x的情况下，最合理的样本分类方法。最后再根据每次模拟的最大似然值，找出最适用这群体的K值。

<br>
分析软件

<br>
STRUCTURE<br>


<br>
ADMIXTURE<br>


<br>
FRAPPE<br>


<br>
fast-STRUCTURE

<br>
算法

<br>
主要涉及两种模型 no admixture model和admixture model。前者假设亚群间不存在杂交，后者则假设亚群间存在杂交。在绝大部分情况下，当然是选择admixture 模型更合理了。<br>


<br>
以k=2为例，解释一下structure是如何找到样本的最优分类。其实简单说来，就是利用了计算机超强的运行能力，一开始计算机只是随机将样本分为两份，然后在每个亚群内进行哈温平衡检验。如果不符合哈温平衡（拍脑袋的分类，一开始当然是惨不忍睹），计算机继续调整分类，然后继续检验。<br>


<br>
如此这般，在计算n次后，计算机再从这一堆结果中找到最佳的分类。这个过程称为“隐马科夫-蒙特卡罗链”的过程，计算次数n就是这个链的长度，这是structure一个重要的参数“Number of MCMC Reps”，需要预先设定。<br>


<br>
但因为这个计算的过程是从随机模拟开始的。如果一开始拍脑袋拍的不好（随机分类与真实分类差距太大），计算机一黑到底，最后把n次用完了，都没有找到一个合理的分类。所以，分析软件往往有个预实验的过程。<br>


<br>
就是在正式进行大规模运算前，计算机先尝试各种各样的随机分类，运行非常短的次数，然后评估哪种随机分类是最合理的。之后，在根据最优的随机分类，进行后续的大规模运算。这个过程就称为burn-in period，预实验的次数就称为burin-in的次数。这也是structure分析另外一个重要的参数“length of burn-in period”。<br>


<br>
同一个体基因组上的不同SNP可能来源不同亚群体,软件是对每个位点单独进行分群的,然后统计比例,所以要求进行分析的每个位点是独立,不然会造成比例的不准确<br>


<br>
那么，软件在如何确定样本的最优分类方法呢？其实基于一个假设：在各个亚群内部个体应该符合哈代-温伯格平衡（哈温平衡的概念可以在百度查询），那么这个亚群内的基因频率分布应该可通过哈温平衡检验。例如，现在有40个个体的1个SNP位点的基因型，我预设亚群数k=2。我先随机将40个个体分成两份，然后检验是否符合哈温平衡。如果不符合，我继续调整分类策略，直到找到一种最优的分类方法：40个个体被分为了两份，每个亚群都由若干个体构成，每个亚群内部都最大程度地符合哈温平衡。<br>


<br>
亚群内符合哈温平衡<br>


<br>
每个位点是独立的<br>


<br>
每个样本的血统构成<br>


<br>
选择使用那种模型

<br>
结果展示

<br>
<img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/yLNbnJQIBAHVjvTrsXNSJPcECiaXLW1512YcTibjyvtdTzS1xAFLTrT6TU2GIj3UlECSica6SDjSlWbnaFVO3ItKQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>


<br>
结果要点

<br>
最终k值选取的结果跟实际生产相符性<br>


<br>
一般会以该结果的0.8或者0.6以上血缘比例的作为标准(血缘复杂的根据情况有些可以追溯原因)

]]></description><link>软件操作\分析原理\群体结构分析-pca，tree，structure.html</link><guid isPermaLink="false">软件操作/分析原理/群体结构分析-PCA，TREE，STRUCTURE.md</guid><pubDate>Sun, 28 Jan 2024 07:33:48 GMT</pubDate><enclosure url="https://mmbiz.qpic.cn/sz_mmbiz_png/yLNbnJQIBAHVjvTrsXNSJPcECiaXLW151teJVqTW4HvCJYYhZMSmlOP8AWW1CA0gUItxmt40FPicVOicMXLjSkPaQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" length="0" type="false"/><content:encoded>&lt;figure&gt;&lt;img src="https://mmbiz.qpic.cn/sz_mmbiz_png/yLNbnJQIBAHVjvTrsXNSJPcECiaXLW151teJVqTW4HvCJYYhZMSmlOP8AWW1CA0gUItxmt40FPicVOicMXLjSkPaQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Fasta]]></title><description><![CDATA[ 
 <br>在之前的分享中，零零散散讲过一些生信的数据格式<a data-tooltip-position="top" aria-label="http://mp.weixin.qq.com/s?__biz=MzU0NjgxNjAxMA==&amp;mid=2247485344&amp;idx=1&amp;sn=11e99e244321347101e26f72dd86f4d8&amp;chksm=fb56aec5cc2127d3ad97c8974152f76d5dd045fba7750e67331cf90da613d04097b0a41f929a&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="http://mp.weixin.qq.com/s?__biz=MzU0NjgxNjAxMA==&amp;mid=2247485344&amp;idx=1&amp;sn=11e99e244321347101e26f72dd86f4d8&amp;chksm=fb56aec5cc2127d3ad97c8974152f76d5dd045fba7750e67331cf90da613d04097b0a41f929a&amp;scene=21#wechat_redirect" target="_blank">你知道生信里的FASTA格式和FASTQ格式吗</a>、<a data-tooltip-position="top" aria-label="http://mp.weixin.qq.com/s?__biz=MzU0NjgxNjAxMA==&amp;mid=2247485537&amp;idx=1&amp;sn=5f5955680dee0665d65fd9e7d36ea6a7&amp;chksm=fb56a104cc212812d591ee84e1d76b0c351deffa0c7a35005fe24c4e8e5d3794420440048cc4&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="http://mp.weixin.qq.com/s?__biz=MzU0NjgxNjAxMA==&amp;mid=2247485537&amp;idx=1&amp;sn=5f5955680dee0665d65fd9e7d36ea6a7&amp;chksm=fb56a104cc212812d591ee84e1d76b0c351deffa0c7a35005fe24c4e8e5d3794420440048cc4&amp;scene=21#wechat_redirect" target="_blank">生信Sam、Bam文件处理之——Samtools软件安装使用</a>。在生信中还有一些常用的其他的数据格式，本期进行一个汇总分享。<br><br>fasta 格式是一种文本格式，以单字符贮存核酸或者蛋白序列信息，允许在序列前加注释信息。<br>Fasta文件主要由两个部分构成：<br>以“&gt;”开头主要存储的是序列的描述信息；具体的序列数据。<br>
&gt;AF466308.1 Dictyostelium discoideum ABC transporter AbcB5 (abcB5) gene, complete cds TTTTAAATTTAAAACAAATACTATTATATTAATATATAAATAAATTTTATAATTACCTTTTTTTTTTGTT<br>
序列头信息独占一行，以大于号&gt;开头作为识别标记。而紧接的下一行则是序列内容，直到碰到一行为&gt;的新序列，或文件末尾。<br>序列头信息一般基因名称及其他一些注释信息。<br><br>fastq 格式是一种文本格式，通常用于贮存核苷酸序列及其相应质量值。序列以及质量信息使用ASCII 字符标示。目前主要用于储存高通量测序数据。<br> Fastq文件的构成：FASTQ文件中每个序列通常有4行信息，每四行为一个独立的单元，也叫read。<br>
<br>
第一行：以“@”开头，后面接着唯一的序列ID标识符和描述信息是该段read 的名称；

<br>
第二行：该段read 的测序序列，由A、T、C、G、N构成。N表示测序时无法被识别出来的碱基；或者为蛋白质序列氨基酸字符[MPVY…]；

<br>
第三行：必须以“+”开头，后面可以接第一行“@”后面的内容，也可以不接；

<br>
第四行：是第二行中的序列内容每个碱基所对应的测序质量值，用ASCII码表示，可按照一定规则转换为碱基质量值（quality values)。不同测序平台，在表示质量值时选择的字符区段也有差异：Sanger = Q+33；Solexa = Q+64。

<br>@DJB775P1:248:D0MDGACXX:7:1202:12362:49613
TGCTTACTCTGCGTTGATACCACTGCTTAGATCGGAAGAGCACACGTCTGAA
+
JJJJJIIJJJJJJHIHHHGHFFFFFFCEEEEEDBD?DDDDDDBDDDABDDCA
@DJB775P1:248:D0MDGACXX:7:1202:12782:49716
CTCTGCGTTGATACCACTGCTTACTCTGCGTTGATACCACTGCTTAGATCGG
+
IIIIIIIIIIIIIIIHHHHHHFFFFFFEECCCCBCECCCCCCCCCCCCCCCC
复制<br><br>GFF和GTF是两种最常用的基因组注释格式，在信息分析中建库时除了需要fasta文件一般还会需要这两种文件，提取需要的信息进行注释。<br><br>gff全称General featureformat，主要是用来注释基因组。<br>gff文件是以tab键分割的9列组成，以下为每一列的对应信息：<br>
<br>
第一列：seq_id，序列的编号，一般为chr或者scanfold编号；

<br>
第二列：source，注释的来源，一般为数据库或者注释的机构，如果未知，则用点“.”代替；

<br>
第三列：type，注释信息的类型，比如Gene、cDNA、mRNA、CDS等；

<br>
第四列：start，该基因或转录本在参考序列上的起始位置(从1开始，包含)；

<br>
第五列：end，该基因或转录本在参考序列上的终止位置(从1开始，包含)；

<br>
第六列：score，是注释信息可能性的说明，可以是序列相似性比对时的E-values值或者基因预测的P-values值，.表示为空；

<br>
第七列：strand，该基因或转录本位于参考序列的正链(+)或负链(-)上；

<br>
第八列：phase，仅对注释类型为“CDS”有效，表示起始编码的位置，有效值为0、1、2。(对于编码蛋白质的CDS来说，本列指定下一个密码子开始的位置。每3个核苷酸翻译一个氨基酸，从0开始，CDS的起始位置，除以3，余数就是这个值，表示到达下一个密码子需要跳过的碱基个数。该编码区第一个密码子的位置，取值0,1,2。0表示该编码框的第一个密码子第一个碱基位于其5’末端；1表示该编码框的第一个密码子的第一个碱基位于该编码区外；2表示该编码框的第一个密码子的第一、二个碱基位于该编码区外；如果Feature为CDS时，必须指明具体值)；

<br>
第九列：attributes，一个包含众多属性的列表，格式为“标签＝值”(tag=value)，以多个键值对组成的注释信息描述，键与值之间用“=”，不同的键值用“；”隔开，一个键可以有多个值，不同值用“,”分割。注意如果描述中包括tab键以及“，= ；”，要用URL转义规则进行转义，如tab键用代替。键是区分大小写的，以大写字母开头的键是预先定义好的，在后面可能被其他注释信息所调用。

<br><br>gtf格式大部分与gff相同，但有两个不同：<br>
<br>
第三列：gtf第三列的type是feature，必须注明；而gff第三列是type常见类型有：gene、exon、intron等；

<br>
第九列：gtf第九列的attributes必须有gene_id和transcript_id这两个属性，即必须以gene_id以及transcript_id开头；而gff不需要。

<br><br>Sequence Alignment/Map format（SAM）。当测序得到的 fastq 文件 map 到基因组之后，通常会得到一个以 sam 或者 bam 为扩展名的文件，该文件记录了比对率、比对位置等具体信息。BAM 是 SAM 的二进制文件(B 取自 binary)。<br><br>Variant Call Format，用于记录序列变异信息 (SNP / InDel)的文件格式。<br>VCF 文件分为两部分内容：以“#”开头的注释部分和没有“#”开头的主体部分。<br>
<br>注释部分有很多对 VCF 的介绍信息；
<br>主体部分包含 10 列数据。主体部分每一行代表一个variant的信息。主体部分 10 列分别含义：CHROM，染色体编号；POS，SNP 所在染色体位置；ID，SNP ID 注释；REF，该位置参考基因组上的碱基类型；ALT，样品中出现的与参考基因组不一致的碱基类型（可能是多个，由逗号分隔）；QUAL，SNP 质量值；FILTER，过滤结果；INFO，注释信息；FORMAT，分析结果的格式注释；XXXXXX，每个样品的分析结果。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202401230932098.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>森格赛生物科技专注于单细胞组学、空间组学和类器官(包括器官芯片)相关前沿技术，致力为客户提供优质解决方案。]]></description><link>软件操作\分析原理\生信常用数据格式汇总——fasta、fastq、gff、gtf、sam、bam、vcf格式及构成信息.html</link><guid isPermaLink="false">软件操作/分析原理/生信常用数据格式汇总——fasta、fastq、gff、gtf、sam、bam、VCF格式及构成信息.md</guid><pubDate>Tue, 23 Jan 2024 01:36:49 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202401230932098.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202401230932098.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[AMOVA分子方差分析原理]]></title><description><![CDATA[ 
 <br><br>AMOVA的计算过程可以概括为以下几个步骤：<br>
<br>
分组定义：首先定义群体（population）和可能的子群体（subpopulation）。例如，我们可能有三个不同地理位置的人群，每个地理位置都是一个群体。

<br>
计算分子变异：AMOVA计算的是遗传变异，这通常体现为基因频率的变异。这些变异可以来自于不同的遗传标记，例如SNPs。

<br>
变异分解：总变异被分为三个部分：

<br>组间变异：不同群体间的变异，比如地理隔离导致的遗传差异。
<br>组内变异：单个群体内不同个体间的变异。
<br>个体内变异：如果数据来自于二倍体个体，还可能包括个体的两个等位基因间的变异。


<br>
方差成分计算：AMOVA通过计算不同分子标记在群体间和群体内的变异比例，来量化每个层次的方差成分。这通过对比实际数据和在零假设下（即没有遗传结构）的预期分布来完成。

<br>
统计检验：最后，通过置换测试（permutation tests）等统计方法来检验组间变异是否显著大于随机情况下的预期。

<br><br>
<br>组间变异较高：若大部分遗传变异发生在群体间，这表明不同群体之间存在显著的遗传分化，可能是由于地理隔离、生态位差异或繁殖隔离等因素造成的。
<br>组内变异较高：若大部分遗传变异在群体内部，这意味着群体内个体之间的遗传差异大，群体具有较高的遗传多样性。
<br>个体内变异：对于二倍体生物，如果个体内两个等位基因间的变异显著，这可能表明多态性很高或存在杂合优势。
<br><br>假设我们研究三个不同地区的人群（A、B、C），通过分析Y染色体上特定的SNP标记来评估遗传变异。<br>
<br>我们找到的是，群体A和B的遗传组成非常相似，而群体C则有明显不同的遗传标记。
<br>AMOVA分析显示，大部分遗传变异（比如70%）发生在群体C与群体A和B之间。
<br>群体内部的变异（比如A内部）相对较小（比如15%），而个体间的变异（比如在A中）也相对较小（比如15%）。
<br>这样的结果表明，群体C可能因为地理隔离或历史事件（比如人口瓶颈或迁移）与群体A和B遗传上有显著的分化。而群体A和B可能由于地理位置接近或遗传交流，导致它们之间遗传差异较小。<br><br>
<br>
Phi统计量 (Φ-statistics)：这是AMOVA的核心统计量，等价于F统计量（F-statistics），用于量化遗传变异在不同层次上的分布。它有三个层次：

<br>Φ_ST：表示总体遗传结构，即遗传变异在所有群体间和群体内的分布。
<br>Φ_SC：表示个体群体内的遗传结构，即个体群体内部的变异。
<br>Φ_CT：表示群体之间的遗传结构，即群体间的变异。


<br>
总体遗传变异 (Total genetic variance)：通常表示为VT​，是群体内所有个体遗传变异的总和。

<br>
组间遗传变异 (Among-groups genetic variance)：表示为VA​，是群体间遗传差异的度量。

<br>
组内遗传变异 (Within-groups genetic variance)：表示为VW​，是群体内个体间遗传差异的度量。

<br><br>假设有n个群体，每个群体有m个个体。<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402191524239.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>为了确定这些Φ统计量是否显著，通常进行置换测试。这涉及到重新随机分配个体到群体中，并计算新的Φ值。通过多次（例如1000次）重复这个过程，我们可以建立Φ统计量的随机分布。然后，我们比较实际观察到的Φ值与这个随机分布，以判断遗传结构是否具有统计学意义。<br><br>Φ值的范围从0到1，其中0表示没有遗传结构（即组间和组内的遗传变异相同），而1表示完全的遗传分化（即所有遗传变异都在组间）。Φ值的显著性告诉我们，相对于随机情况，实际的遗传结构是否具有统计学意义。<br>这些统计量和公式是AMOVA的基础，它们提供了对遗传数据的遗传结构和变异分布的量化方法。通过这些量化结果，研究者可以推断群体间的遗传关系和群体内的遗传多样性。]]></description><link>软件操作\分析原理\amova分子方差分析原理.html</link><guid isPermaLink="false">软件操作/分析原理/AMOVA分子方差分析原理.md</guid><pubDate>Mon, 19 Feb 2024 07:25:00 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402191524239.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402191524239.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[bam文件含义]]></title><description><![CDATA[ 
 <br>这是用samtool查看的bam文件<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403281259682.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>第一列： ST-E00192:993:H5HHNCCX2:2:1101:9181:2592
<br>
<br>ST-E00192：可能代表的是样本ID或项目编号。
<br>993：这可能是一个内部标识符，用于区分不同的样本或实验条件。
<br>H5HHNCCX2：通常是测序仪或者测序芯片的ID。
<br>2：可能表示这个读段来自于测序芯片的哪个通道（lane）。
<br>1101：可能表示tile的编号，tile是测序仪流片上具体的区域。
<br>9181:2592：这通常表示读段在tile上的具体坐标位置。
<br>
<br>第二列：0/16<br>
在BAM文件中，第二列的FLAG是一个用于描述读段（read）特性的位标志（bitwise flag）。它是一个十进制数，但它表示的是一组二进制位，每个位都有特定的意义。以下是SAM格式规范中定义的一些常见的位标志及其含义：
<br>
<br>0x1：读段是成对的（paired）。
<br>0x2：读段是成对的，并且两个都成功映射。
<br>0x4：读段未映射到参考序列。
<br>0x8：读段的配对段未映射。
<br>0x10：读段是反向互补的（即，它比对到参考序列的反向互补序列）。
<br>0x20：读段的配对段是反向互补的。
<br>0x40：读段是成对的第一个读段。
<br>0x80：读段是成对的第二个读段。
<br>0x100：该读段不是次优的比对。
<br>0x200：读段是PCR或光学重复。
<br>具体到你提供的图片，标志位0通常表示该读段没有特殊的属性被标记，而16代表的二进制为0x10，意味着读段与参考序列相比是在反向链上。也就是说，这个读段的序列与参考序列的反向互补序列比对。这通常是测序过程中生成的正常结果之一，因为DNA是双链的，测序可以在两条链上进行。<br>
<br>第三列展示了读段比对的参考序列的名称。第四列给出了读段比对到参考序列的起始位置。第五列MAPQ值都是37或0，表示比对质量的得分。
<br>第五列的MAPQ值是一个表示比对质量的整数分数，它给出了一个读段比对到参考序列位置的置信度。MAPQ值的范围是从0到255，其中0表示最低的置信度，255表示最高的置信度。MAPQ值通常是通过比对算法根据比对得分、比对位置的多样性（是否有多个相同得分的比对位置）、序列的质量等因素计算得出的。<br>对于MAPQ值的具体解释，可以参照以下通用指南：<br>
<br>MAPQ = 0：表示比对位置没有置信度，也就是说，读段可能与多个位置一样好地比对，因此无法确定其唯一性。
<br>MAPQ = 37：这个值是比对软件设定的，不同软件可能对应不同的置信度。在某些比对软件中，MAPQ = 37可以表明约有99.95%的置信度，读段在该位置的比对是正确的。换句话说，大约每2000个此类比对中，可能会有1个是错误的。
<br>需要注意的是，不同的比对软件可能会以不同的方式计算MAPQ值，因此解释这个值时需要参考使用的具体比对软件的文档。通常，一个高的MAPQ值意味着高置信度的比对，而低值则表明比对的置信度较低。然而，某些比对软件可能会有最大MAPQ值的上限，因此不会输出最大值255。<br>
<br>
<br>
<br>CIGAR字符串：第六列中的 xxM 表示CIGAR字符串。在这里，xx 是一个数字，代表着接下来的 M（匹配Match）操作持续的长度。M 可以表示匹配（match）或错配（mismatch），意味着读段中的这部分序列可以与参考序列的相应位置对应上。CIGAR字符串还可以包含其他字符，比如 I（插入Insertion）、D（删除Deletion）、S（软剪切Soft clip）、H（硬剪切Hard clip）等，以详细描述读段与参考序列的对齐方式。<br>

<br>RNEXT字段：第七列通常包含一个 * 或一个参考序列名称，它指明了配对读段的位置。如果这个字段是 *，它通常意味着这个读段没有配对的读段，或者这个信息在当前的上下文中不相关。<br>

<br>PNEXT字段：第八列是配对读段的比对位置，如果该读段没有配对或者信息不相关，则通常是 0。<br>

<br>TLEN字段：第九列显示的是观察到的插入片段的长度（Template LENgth）。对于未配对的读段或者信息不相关的情况，该值通常为 0
]]></description><link>软件操作\分析原理\bam文件含义.html</link><guid isPermaLink="false">软件操作/分析原理/bam文件含义.md</guid><pubDate>Thu, 28 Mar 2024 05:08:58 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403281259682.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403281259682.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[BLAST获取目标序列]]></title><description><![CDATA[ 
 <br><br>一般来说，我们自己至少会有1条感兴趣的目标序列，其格式应该是 FASTA 格式。我这里举了个例子，是一个细菌序列的某个基因，第一行为&gt;开头，后面为该序列的注释信息，第二行之后的所有内容是该基因的核酸序列。<br>&gt;CP000702.1:1005082-1006524 Thermotoga petrophila RKU-1, complete genome
ATGCCATCTGTGAAGATCGGTATCATCGGTGCGGGGAGCGCGGTGTTTTCTCTGAGGCTTGTGAGTGATC
TTTGCAAAACGCCGGGACTCTCTGGCAGCACGGTCACCCTCATGGATATCGACGAAGAAAGACTCGACGC
TGTTCTGACCATCGCGAAAAAATACGTTGAAGAAGTGGGAGCGGATCTGAAATTCGAAAAAACCATGAAT
TTAGATGACGTCATCATCGACGCGGATTTTGTGATAAACACAGCGATGGTGGGTGGCCATACCTACTTGG
AGAAAGTCAGACAGATCAGTGAGAAATACGGCTACTACAGAGGAATAGACGCTCAGGAGTTTAACATGGT
CTCCGACTACTACACCTTCTCCAACTACAACCAGCTCAAGTACTTCGTTGAAATAGCAAGGAAGATAGAG
AAGCTCTCCCCAAAAGCCTGGTACTTGCAGGCAGCGAATCCCGTTTTCGAAGGAACAACCCTTGTGACAA
GAACGGTTCCCATAAAGGCAGTGGGATTCTGCCATGGACACTACGGCGTGATGGAGATCGTAGAGAAACT
GGGGCTGGAAGAAGAAAAAGTAGATTGGCAGGTCGCAGGAGTGAACCACGGTATCTGGCTGAATAGGTTC
AGATACAACGGGGAGAACGCGTATCCCCTCCTTGACAGGTGGATCGAGGAAAAATCAAAAGATTGGAAAC
CAGAGAACCCCTTCAACGATCAGCTCTCTCCCGCTGCGATAGATATGTACAGATTCTACGGTGTGATGCC
CATCGGTGACACCGTGAGAAACTCTTCGTGGAGGTACCACAGGGATCTTGAGACCAAGAAGAAATGGTAC
GGTGAACCCTGGGGAGGAGCAGATTCTGAAATAGGCTGGAAATGGTACCAGGACACACTTGGAAAGGTAA
CGGAGATCACAAAGAAGGTGGCAAAGTTCATCAAAGAAAATCCGTCCGCGAGGCTCTCCGACCTTGGAAG
TGTTCTGGGAAAAGACCTCTCAGAAAAGCAGTTTGTGCTCGAAGTAGAGAAAATCCTCGATCCAGAAAGA
AAGAGTGGAGAGCAGCACATCCCATTCATCGATGCGCTGTTGAACGATAACAAGGCAAGATTCGTGGTGA
ACATACCAAATAGGGGTATCATCCACGGAATAGACGATGACGTGGTCGTTGAAATCCCAGCCCTTGTGGA
CAAGAACGGAATCCATCCCGAGAAGATCGAACCACCGCTTCCAGATCGCGTGGTCAAGTACTACCTGAGA
CCAAGGATCATGAGAATGGAAATGGCTCTGGAGGCGTTCCTCACGGGGGACATAAGGATCATAAAAGAAC
TTCTCTACAGAGATCCAAGAACGAAGAACGACGAACAGGTAGAAAAGGTGATCGAGGAAATCCTCGCACT
CTCGGAAAACGAAGAGATGCGGAAACATTATCTGAAGAGATGA
复制<br>这里需要注意一个概念，我们用于进化分析的所有序列理论上应该都是同源的，所以并不是说随便下载几条序列都可以进行进化分析的。有些序列比对后仅仅能证明它们相似而不一定能证明它们同源，而 NCBI的blast工具就可以进行显著性检验，帮助我们判断序列同源的可靠性。<br>
需要区分同源与相似的概念。<br>
如果两个序列享有一个共同的进化上的祖先,则这两个序列是同源(homologous)的。对这个定义需要注意的一点是，同源是个定性的概念，没有“度”的差异。对两个序列，它们或者同源或者不同源，不能说它们70%同源或80%同源。<br>
与同源相关但不同的两个概念是相似(similarity)和相同(identity)，它们都是定量的概念，基于对序列中字符的精确比较，既可以说两个核酸序列高度相似，也可以说它们 70% 的碱基相同。  
<br><br>进入ncbi在线网站&nbsp;-&gt; 点击右侧的blast -&gt; 选择 Nucleotide BLAST -&gt; 将前面的序列复制进去，其它参数默认即可 -&gt; 然后点击下方的 BLAST，等待比对结果。<br><img src="https://pic2.zhimg.com/80/v2-60bd05e93929565e8181fc021e62f019_1440w.webp" referrerpolicy="no-referrer"><br>比对结果的解释<br>blast 把我们输入的序列称为 query 序列，数据库中与之比对的序列称为 subject 序列。<br>
<br>Description 列，是对当前 subject 序列的简短介绍，它还有一个链接，鼠标左键点击它即可通往该序列比对的结果页面；
<br>Scientific Name 列，不是我们关注的重点；
<br>Max Score 列，代表比对到 subject 序列的片段的最高评分（因为 blast 比对时是将待比对序列拆分成一系列片段去与subject序列进行比对的）；Total Score 列，同理，即所有比对片段的评分之和。这两个评分越高，代表两个序列越相近；
<br>Query Cover 列，代表与 query 序列的全长相比，有多少比例的 query 序列与 subject 序列能比对上（即序列比对时能覆盖到的比例）；
<br>E value 列，即期望值。是 blast 软件进行统计显著性计算得到的值，E值越接近0，代表该 subject 序列越有可能与 query 序列同源；
<br>Per.Ident 列，即两个序列能比对上的部分完全相同的碱基的比例；
<br>Acc.Len 列，即 subject 序列的原始长度；Accession 列表明了 subject 序列的在 genbank 上的登录号。
<br><img src="https://pic1.zhimg.com/80/v2-707e836ca3525fe6f25622f0e5fd71e0_1440w.webp" referrerpolicy="no-referrer"><br>
<br>序列同源性判断与下载<br>
我们点击 Description 列的第一条序列，可以通往比对结果的链接。<br>

<br>先看下图中红色方块中的内容，Score/Expect/Identities 与前面的一致（identities可以检查比对的序列是否有失配，包括插入缺失以及碱基的替换）；<br>
Gaps代表空格数（序列比对时如果有插入/缺失，blast会通过插入空格来使序列对齐）；<br>
Strand代表 query 序列与 subject 序列的方向；<br>
Plus/Plus 代表 subject 序列与 query序列是同向的，Plus/Minus则代表是反向的。<br>

<br>绿色方块中显示了具体的比对情况，有gap的位置会通过-表示。<br>

<br>接着我们要判读该 subject 序列是不是可以下载下来作为我们进化分析的同源序列。事实上并没有一个严格的标准来界定序列是否同源，有文献把 Query Cover&gt;=60%，E value &lt;1e-3 的序列作为区分是否同源的依据，也有文献选择 E value &lt;1e-5，所以需要我们根据自己的研究领域进行判断，如果符合我们的要求，就可以认为比对得到的这条 subject 序列与我们的 query 序列同源，就可以下载下来用于进化分析了。<br>

<br>在本例中(Query Cover=100%，Strand=Plus/Plus)，可以直接点击粉色方块中的 Download -&gt; 选择 FASTA(aligned sequences)可以直接下载到完整的subject序列。<br>

<br><img src="https://pic1.zhimg.com/80/v2-236533cb5dc236f7dd66b538112c88a0_1440w.webp" referrerpolicy="no-referrer"><br>
<br>当 Query Cover &lt; 100%，或者 Strand=Plus/Minus。比如我们比对到的下图中这条 subject序列，它的序列其实和我们输入的序列是反向互补的，如果直接点击 Download 其实下载的是反向互补的序列，如果我们没注意的话后面比对结果会不准确。<br>
因此我们点击下面蓝色方块中的 Genbank 链接，会进入一个新的窗口（下图2），然后在右侧的 Customize view 中勾选 Show reverse complement，接着点击 Update View即可。<br>
接着可以再手动确认一下更新的序列前几位是否与我们的 query 序列一致，即可下载这条 subject 序列，点击上方的 Send to 下载 FASTA 文件（下图3）<br>

<br><img src="https://pic1.zhimg.com/80/v2-d490c54c895bade3118d31b626898b9c_1440w.webp" referrerpolicy="no-referrer"><br><img src="https://pic4.zhimg.com/80/v2-5e07bf6bef4d7f70519f86ad3c3027bb_1440w.webp" referrerpolicy="no-referrer"><br><img src="https://pic4.zhimg.com/80/v2-61c2167332cec4ccba6cdc04037fde43_1440w.webp" referrerpolicy="no-referrer"><br>总结：<br>这样一条条序列检查是否同源，是否同向，然后下载是比较稳妥的方法，不会出错，但是序列多了就会比较浪费时间，我们也可以直接在比对页面直接选择多个序列批量下载 FASTA 文件(如下图所示)，但是下载后一定要注意有些序列是与我们的 query 序列是反向互补的，需要将其反向互补后重新整合才能用于后面的序列比对（不过之后用MEGA也可以对序列进行反向互补操作）。<br><img src="https://pic1.zhimg.com/80/v2-0ca6f13be67b15126cb3c8a57d0b9ec4_1440w.webp" referrerpolicy="no-referrer"><br><br>还有一种情况是我们自己知道下载的序列一定是同源的，比如下载某个病毒不同毒株的某个基因序列，就没有必要通过 blast 等软件检查序列是否同源。<br>比如我在 NCBI 的 Nucleotide 数据库中检索 PRRSV 病毒的 ORF5基因，如下图所示，然后下载其中一些序列用于进化分析，勾选想要的序列后还是和前面一样点击 Send to 下载 FASTA 文件即可。<br><img src="https://pic4.zhimg.com/80/v2-41bb310bebf8e9aa2be8c2fe5e08d307_1440w.webp" referrerpolicy="no-referrer"><br><br>不管我们是如何获取到的序列，在将其用于比对之前一般应确保以下原则（1）尽量保证序列完整，既没有缺失也没有多余（2）用于进化分析的序列应同源（3）序列的方向应一致。<br>如果我们选择的是某个基因全长或者CDs序列(即编码序列)这种会比较好检查。获取到所有序列后一般是将其保存在一个FASTA文件中，接着推荐使用 Sublime 软件直接打开 FASTA 文件，可以方便地对序列进行批量检查。检查的方式可以根据我们的序列特征进行，比如下面几种方法：<br>
<br>检查&gt;的数量。<br>
因为1条序列由1个&gt;开头，&gt;的数量应与我们实际需要比对的序列数量一致。比如我这次需要比对18条序列，在 Sublime 中按&nbsp;Ctrl&nbsp;+&nbsp;F进入搜索模式，然后搜索&gt;，如下图所示，此时左下角会出现文档中的&gt;的数量(绿色方框)，显示18个即说明序列数量正确。<br>

<br><img src="https://pic3.zhimg.com/80/v2-07a1d0cb6fa8ad510a236b02ef810f7a_1440w.webp" referrerpolicy="no-referrer"><br>
<br>检查序列方向。针对我感兴趣的序列，因为我要比对的这18条序列都是CDs序列，因此大部分的序列应该都是以 ATG 起始密码子起始（有些物种可能出现GTG），我们不能直接搜索以ATG开头的行，这样会与序列中间的以ATG开头的行混淆。再仔细看一下这些序列，发现都是&gt;所在的行以1个数字结尾，然后另起一行以ATG开头，我们通过精确匹配就能准确搜索到到所有以ATG开始的序列。<br>
在 Sublime 中按&nbsp;Ctrl&nbsp;+&nbsp;F进入搜索模式，如下图所示，点击下方最左侧的正则表达式搜索，搜索式为[1-9]\nATG，此时左下角显示18个即说明序列方向应该正确。（该搜索式中，[1-9]代表第1个字符匹配1-9之间的所有数字，\n代表换行符）<br>

<br><img src="https://pic3.zhimg.com/80/v2-7887684e9b3533591769bd1ac05ff526_1440w.webp" referrerpolicy="no-referrer"><br>
<br>同样的，我用表达式TAG\n\n搜索时，发现所有18条序列都是以TAG结尾（终止密码子一般是 TAA、TAG、TGA）,因此可以确认我的所有序列都是完整的，且方向也是对的。
<br><img src="https://pic3.zhimg.com/80/v2-432972b28ac8a74199916b23e74dd0fe_1440w.webp" referrerpolicy="no-referrer"><br>
<br>批量修改注释行。一般从genbank上下载下来的序列&gt;所在的行不会像我的例子中这么干净，一般会有一串信息。因为之后构建进化树的时候软件一般会默认使用&gt;后面的信息给树中的序列命名，所以这里可以提前用 Sublime 进行批量整理。<br>
在下面的例子中，如果我们想只保留&gt;后面的 genbank登录号，只需要搜索:，然后点击右侧的 Find All，此时光标会出现在所有匹配的:上，此时想批量删除:右侧的信息，只需要按Fn+Shift+右方向键选中，然后按退格键删除即可。<br>

<br><img src="https://pic3.zhimg.com/80/v2-c5dcec711e3ecd1a62a79b03a404e386_1440w.webp" referrerpolicy="no-referrer"><br>总结：<br>前面的序列检查方法并不唯一，针对我们自己的序列特征可以进行不同的检查（比如还可以检查文档的行数，如果1个基因序列一般都占10行的话，20条序列应该就是200行，Sublime中左侧标出了行数，可以防止下载成了别的基因）。总之，其主要目的都是为了确保所有序列的方向一致，所有序列同源且完整。]]></description><link>软件操作\分析原理\blast获取目标序列.html</link><guid isPermaLink="false">软件操作/分析原理/BLAST获取目标序列.md</guid><pubDate>Thu, 25 Jan 2024 03:49:37 GMT</pubDate><enclosure url="https://pic2.zhimg.com/80/v2-60bd05e93929565e8181fc021e62f019_1440w.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://pic2.zhimg.com/80/v2-60bd05e93929565e8181fc021e62f019_1440w.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[fasta，fastq，sam，bam，vcf，bed文件的获得顺序]]></title><description><![CDATA[ 
 <br>在基因组学和生物信息学中，这些文件格式（fasta、fastq、sam、bam、vcf、bed）通常是通过不同的测序实验和数据分析步骤获得的，它们之间存在一定的顺序关系：<br>
<br>
FASTA：

<br>FASTA 文件通常包含参考基因组序列或者从测序实验中组装得到的序列。它用于存储已知的DNA或蛋白质序列，是一个纯文本格式，每一行以&nbsp;&gt;&nbsp;开头表示序列标题，后面是序列本身。


<br>
FASTQ：

<br>FASTQ 文件是在高通量测序实验（如Illumina、Ion Torrent等平台）完成后产生的原始数据文件。它包含了每个读段的序列信息以及对应的测序质量信息，每条记录由四行组成：标题行、序列行、一个+标记行和质量值行。


<br>
SAM/BAM：

<br>SAM (Sequence Alignment/Map) 是一种文本格式的比对结果文件，记录了测序reads与参考基因组或其他序列的比对信息。
<br>BAM (Binary Alignment/Map) 是SAM文件的二进制压缩版本，便于存储和快速访问，同时需要索引文件(.bai)来支持随机访问。

这两种文件一般通过将FASTQ数据与参考基因组比对生成，例如使用工具如BWA、Bowtie2进行比对后转换得到。

<br>
VCF：

<br>VCF (Variant Call Format) 文件记录了在特定样本群体中相对于参考基因组发现的变异信息，包括SNPs、Indels以及其他复杂的变异类型。
<br>为了生成VCF文件，首先需要将比对后的SAM/BAM文件经过变异检测步骤，比如使用GATK、FreeBayes等工具分析比对数据，找出潜在的变异位点，并对这些变异进行注释和过滤，最终输出为VCF格式。


<br>
BED：

<br>BED (Browser Extensible Data) 文件用来描述基因组上的区域或区间数据，常用于可视化、注释和统计分析，如基因位置、转录本结构、芯片数据峰区、调控元件等。
<br>在处理高通量数据时，BED文件可以来自多种途径，如基于比对数据手动或自动标注出感兴趣的区域，也可以直接来源于其他研究提供的注释数据。


<br>总结一下，典型流程大致如下：<br>
<br>实验获取FASTQ数据
<br>使用比对工具将FASTQ比对到参考基因组得到SAM/BAM文件
<br>对比对结果进行变异调用和注释生成VCF文件
<br>根据需要从比对数据或其它来源创建BED文件
]]></description><link>软件操作\分析原理\fasta，fastq，sam，bam，vcf，bed文件的获得顺序.html</link><guid isPermaLink="false">软件操作/分析原理/fasta，fastq，sam，bam，vcf，bed文件的获得顺序.md</guid><pubDate>Thu, 25 Jan 2024 11:54:22 GMT</pubDate></item><item><title><![CDATA[Fst-选择信号]]></title><description><![CDATA[<a class="tag" href="?query=tag:计算个体缺失率" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#计算个体缺失率</a> <a class="tag" href="?query=tag:计算个体测序深度" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#计算个体测序深度</a> <a class="tag" href="?query=tag:选留个体" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#选留个体</a> <a class="tag" href="?query=tag:过滤" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#过滤</a> <a class="tag" href="?query=tag:snp位点Fst计算" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#snp位点Fst计算</a> <a class="tag" href="?query=tag:固定窗口计算" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#固定窗口计算</a> <a class="tag" href="?query=tag:滑动窗口计算" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#滑动窗口计算</a> <a class="tag" href="?query=tag:排序并提取top前1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#排序并提取top前1</a> <a class="tag" href="?query=tag:曼哈顿图" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#曼哈顿图</a> <a class="tag" href="?query=tag:热图" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#热图</a> 
 <br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271745428.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271747969.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><a data-tooltip-position="top" aria-label="https://mp.weixin.qq.com/s/iKH1KIYipJKUuErCteYGyQ" rel="noopener" class="external-link" href="https://mp.weixin.qq.com/s/iKH1KIYipJKUuErCteYGyQ" target="_blank">mp.weixin.qq.com</a>小趴菜 小趴菜的备忘录<br>简单些一个群体遗传分析吧，先从最基础的选择信号Fst分析开始，后续会更新几期Tajima'D , PI , LD , XP-EHH , iHS , nSL , DI , ROH 等分析，给自己备忘的同时也可以让大家共同学习讨论。<br>01<br><br>Fst原理讲解<br>Fst，全称为fixation index，是一种用于衡量群体间分化程度的统计检验量（由Wright's F-statistics衍生而来）。一般从SNP或microsatellites数据计算得到，且一般用在群体遗传学分析中。<br>计算群体间的Fst需要执行以下步骤：<br>
<br> 确定参与比较的群体：首先要明确需要比较的群体数量和种类。这些群体可以按照地理位置、人种、文化背景等方面进行分类。
<br> 收集DNA数据：从每个群体中收集足够的DNA样本进行分析。这些样本可以是血液、唾液或口腔拭子等来源。
<br> 确定基因座：选择一组共同的基因座，这些基因座需要在所有参与比较的群体中都存在。这样做是为了确保比较的公正性。
<br> 分子生物学实验：进行PCR扩增、测序和基因型分析，以获取每个个体在选定的基因座上的基因型。
<br> 计算基因频率：根据每个基因型的出现频率计算每个群体中每个等位基因的频率。
<br> 计算F统计量：使用F统计量（如Weir and Cockerham's Fst）计算群体间的遗传分化程度。Fst值介于0和1之间，0表示没有群体分化，而1则表示两个群体完全隔离。
<br> 统计显著性：通过Bootstrap或其他方法评估群体间Fst值的显著性。
<br><img src="https://image.cubox.pro/cardImg/2024022716425191057/38807.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer"><br>Fst值的取值范围是[0,1]，最大值为1表明两个群体完全分化，最小值为0表明群体间无分化。Fst值越大（越接近1）表明两个群体间分化程度越高，亲缘关系越远；Fst值越小（越接近0）表明群体间分化程度越低，亲缘关系越近。（但是在实际计算中会出现负值）<br>0--0.05,表示群体分化很小；<br>0.05--0.15，中等程度的分化；<br>0.15--0.25，较大的分化；<br>0.25以上，分化很大。<br>02<br><br>Fst计算实战  <br>全过程在linux系统，需要有一定linux基础，使用下机vcf数据，先用vcftools检测样本缺失率和测序深度，若有不合格的使用bcftools直接剔除部分个体。随后用vcftools对剔除后的vcf文件进行过滤，主要是--maf , --min-meanDP , --minQ , --max-missing ,等指标。<br><a href=".?query=tag:计算个体缺失率" class="tag" target="_blank" rel="noopener">#计算个体缺失率</a><br>
<br>
  vcftools --vcf use.vcf --missing-indv  --out miss

<br><a href=".?query=tag:计算个体测序深度" class="tag" target="_blank" rel="noopener">#计算个体测序深度</a>  <br>
<br>
  vcftools --vcf use.vcf  --depth --out depth

<br><a href=".?query=tag:选留个体" class="tag" target="_blank" rel="noopener">#选留个体</a>  <br>
<br>
  bcftoolsview-Ssave.txtuse.vcf&gt;save.vcf

<br><a href=".?query=tag:过滤" class="tag" target="_blank" rel="noopener">#过滤</a>  <br>
<br>
  vcftools--vcfsave.vcf--maf0.05--min-meanDP5--minQ30--max-missing0.8--recode--recode-INFO-all--outfilter.vcf

<br>计算Fst分为单个snp位点Fst计算和按窗口计算，单snp位点计算值普遍较大，不如窗口fst值更有代表性。  <br><a href=".?query=tag:snp位点Fst计算" class="tag" target="_blank" rel="noopener">#snp位点Fst计算</a>  <br>
<br>
  vcftools--vcffilter.vcf--weir-fst-popgroup1.txt--weir-fst-popgroup2.txt--outgroup1_2_snp_fst

<br><a href=".?query=tag:固定窗口计算" class="tag" target="_blank" rel="noopener">#固定窗口计算</a><br>
<br>
  vcftools--vcffilter.vcf--weir-fst-popgroup1.txt--weir-fst-popgroup2.txt--fst-window-size100000--outgroup1_2_size100kb_fst

<br><a href=".?query=tag:滑动窗口计算" class="tag" target="_blank" rel="noopener">#滑动窗口计算</a>  <br>
<br>
  vcftools--vcffilter.vcf--weir-fst-popgroup1.txt--weir-fst-popgroup2.txt--fst-window-size100000--fst-window-step 50000--outgroup1_2_size100kb_step50kb_fst

<br><a href=".?query=tag:排序并提取top前1" class="tag" target="_blank" rel="noopener">#排序并提取top前1</a>%  <br>
<br>
<br>
<br>
  sort-nr-k3snp_fst&gt; sort.fst &amp;&amp;sort-nr-k6window_fst &gt; sort.fstwc-lsort.fst#计数例如189203，那下一步就取1892head -n 1892 sort.fst

<br>03<br><br>Fst结果可视化  <br>专门对Fst可视化大致有三类，对某两个品种某一染色体或某一基因上下游区间做折线图，对某两个品种全部染色体做曼哈顿图，对某一品种和多个品种全部窗口做热图。折线图不再赘述，曼哈顿图使用CMplot作图，热图使用pheatmap作图，其中需要合并相邻窗口这个脚本因人而异就不放了,下机各种数据也不放了（以后有空单开一期讲解），涉及课题数据暂不放例图（后续补充）。<br><a href=".?query=tag:曼哈顿图" class="tag" target="_blank" rel="noopener">#曼哈顿图</a><br>
<br>
  CMplot(data, plot.type="m", band=0.5, LOG10=FALSE,ylim=c(0,1),ylab="Fst",threshold=NULL, amplify=FALSE, bin.size=1e6,chr.den.col=c("darkgreen", "yellow", "red"), file="jpg",dpi=300,file.output=TRUE, verbose=TRUE,cex=0.7,width = 22,height = 12)

<br><a href=".?query=tag:热图" class="tag" target="_blank" rel="noopener">#热图</a>  <br>
<br>
  pheatmap(hm,cluster_rows=FALSE,cluster_cols=FALSE,show_colnames=FALSE,border=FALSE,legend_breaks=c(0,0.25,0.5,0.75,1),color=colorRampPalette(c('white','#FAEBD7',"red","red1","red4"))(100),annotation_row=anno_col,gaps_row=c(1,2,3),gaps_col=c(1,2,3),annotation_col=anno_row,cellwidth=0.07,cellheight=16)

<br><img src="https://image.cubox.pro/cardImg/2024022716425132019/14497.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer"><br><a data-tooltip-position="top" aria-label="https://cubox.pro/my/card?id=7162074118496455220" rel="noopener" class="external-link" href="https://cubox.pro/my/card?id=7162074118496455220" target="_blank">跳转到 Cubox 查看</a>]]></description><link>软件操作\分析原理\fst-选择信号.html</link><guid isPermaLink="false">软件操作/分析原理/Fst-选择信号.md</guid><pubDate>Tue, 27 Feb 2024 09:47:07 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271745428.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271745428.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Linux 文件基本属性]]></title><description><![CDATA[ 
 <br>Linux 系统是一种典型的多用户系统，不同的用户处于不同的地位，拥有不同的权限。<br>为了保护系统的安全性，Linux 系统对不同的用户访问同一文件（包括目录文件）的权限做了不同的规定。<br>在 Linux 中我们通常使用以下两个命令来修改文件或目录的所属用户与权限：<br>
<br>chown (change owner) ： 修改所属用户与组。
<br>chmod (change mode) ： 修改用户的权限。
<br>下图中通过 chown 来授权用户，通过 chmod 为用户设置可以开门的权限。<br><img src="https://www.runoob.com/wp-content/uploads/2014/06/1_151733904241.png" referrerpolicy="no-referrer"><br>在 Linux 中我们可以使用&nbsp;ll&nbsp;或者&nbsp;ls –l&nbsp;命令来显示一个文件的属性以及文件所属的用户和组，如：<br>[root@www /]# ls -l
total 64
dr-xr-xr-x   2 root root 4096 Dec 14  2012 bin
dr-xr-xr-x   4 root root 4096 Apr 19  2012 boot
……
复制<br>实例中，bin&nbsp;文件的第一个属性用&nbsp;d&nbsp;表示。d&nbsp;在 Linux 中代表该文件是一个目录文件。<br>在 Linux 中第一个字符代表这个文件是目录、文件或链接文件等等。<br>
<br>当为d&nbsp;则是目录
<br>当为-则是文件；
<br>若是l&nbsp;则表示为链接文档(link file)；
<br>若是b则表示为装置文件里面的可供储存的接口设备(可随机存取装置)；
<br>若是c&nbsp;则表示为装置文件里面的串行端口设备，例如键盘、鼠标(一次性读取装置)。
<br>接下来的字符中，以三个为一组，且均为&nbsp;rwx&nbsp;的三个参数的组合。其中，&nbsp;r&nbsp;代表可读(read)、&nbsp;w&nbsp;代表可写(write)、&nbsp;x&nbsp;代表可执行(execute)。 要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号&nbsp;-&nbsp;而已。<br><img src="https://www.runoob.com/wp-content/uploads/2014/06/file-llls22.jpg" referrerpolicy="no-referrer"><br>每个文件的属性由左边第一部分的 10 个字符来确定（如下图）。<br><img alt="363003_1227493859FdXT" src="https://www.runoob.com/wp-content/uploads/2014/06/363003_1227493859FdXT.png" referrerpolicy="no-referrer"><br>从左至右用&nbsp;0-9&nbsp;这些数字来表示。<br>第&nbsp;0&nbsp;位确定文件类型，第&nbsp;1-3&nbsp;位确定属主（该文件的所有者）拥有该文件的权限。<br>第4-6位确定属组（所有者的同组用户）拥有该文件的权限，第7-9位确定其他用户拥有该文件的权限。<br>其中，第&nbsp;1、4、7&nbsp;位表示读权限，如果用&nbsp;r&nbsp;字符表示，则有读权限，如果用&nbsp;-&nbsp;字符表示，则没有读权限；<br>第&nbsp;2、5、8&nbsp;位表示写权限，如果用&nbsp;w&nbsp;字符表示，则有写权限，如果用&nbsp;-&nbsp;字符表示没有写权限；第&nbsp;3、6、9&nbsp;位表示可执行权限，如果用&nbsp;x&nbsp;字符表示，则有执行权限，如果用&nbsp;-&nbsp;字符表示，则没有执行权限。<br><br>[root@www /]# ls -l
total 64
drwxr-xr-x 2 root  root  4096 Feb 15 14:46 cron
drwxr-xr-x 3 mysql mysql 4096 Apr 21  2014 mysql
……
复制<br>对于文件来说，它都有一个特定的所有者，也就是对该文件具有所有权的用户。<br>同时，在Linux系统中，用户是按组分类的，一个用户属于一个或多个组。<br>文件所有者以外的用户又可以分为：文件所属组的同组用户和其他用户。<br>因此，Linux系统按文件所有者、文件所有者同组用户和其他用户来规定了不同的文件访问权限。<br>在以上实例中，mysql 文件是一个目录文件，属主和属组都为 mysql，属主有可读、可写、可执行的权限；与属主同组的其他用户有可读和可执行的权限；其他用户也有可读和可执行的权限。<br>对于 root 用户来说，一般情况下，文件的权限对其不起作用。<br><br><br>语法：<br>chgrp [-R] 属组名 文件名
复制<br>参数选项<br>
<br>-R：递归更改文件属组，就是在更改某个目录文件的属组时，如果加上&nbsp;-R&nbsp;的参数，那么该目录下的所有文件的属组都会更改。
<br><br>语法：<br>chown [–R] 所有者 文件名
chown [-R] 所有者:属组名 文件名
复制<br>进入 /root 目录（~）将install.log的拥有者改为bin这个账号：<br>[root@www ~] cd ~
[root@www ~]# chown bin install.log
[root@www ~]# ls -l
-rw-r--r--  1 bin  users 68495 Jun 25 08:53 install.log
复制<br>将install.log的拥有者与群组改回为root：<br>[root@www ~]# chown root:root install.log
[root@www ~]# ls -l
-rw-r--r--  1 root root 68495 Jun 25 08:53 install.log
复制<br><br>Linux文件属性有两种设置方法，一种是数字，一种是符号。<br>Linux 文件的基本权限就有九个，分别是&nbsp;owner/group/others(拥有者/组/其他)&nbsp;三种身份各有自己的&nbsp;read/write/execute&nbsp;权限。<br><br>先复习一下刚刚上面提到的数据：文件的权限字符为：&nbsp;-rwxrwxrwx&nbsp;， 这九个权限是三个三个一组的！其中，我们可以使用数字来代表各个权限，各权限的分数对照表如下：<br>
<br>r:4
<br>w:2
<br>x:1
<br>每种身份(owner/group/others)各自的三个权限(r/w/x)分数是需要累加的，例如当权限为：&nbsp;-rwxrwx---&nbsp;分数则是：<br>
<br>owner = rwx = 4+2+1 = 7
<br>group = rwx = 4+2+1 = 7
<br>others= --- = 0+0+0 = 0
<br>所以等一下我们设定权限的变更时，该文件的权限数字就是&nbsp;770。变更权限的指令 chmod 的语法是这样的：<br> chmod [-R] xyz 文件或目录<br>选项与参数：<br>
<br>xyz&nbsp;: 就是刚刚提到的数字类型的权限属性，为&nbsp;rwx&nbsp;属性数值的相加。
<br>-R&nbsp;: 进行递归(recursive)的持续变更，以及连同次目录下的所有文件都会变更
<br>举例来说，如果要将&nbsp;.bashrc&nbsp;这个文件所有的权限都设定启用，那么命令如下：<br>[root@www ~]# ls -al .bashrc
-rw-r--r--  1 root root 395 Jul  4 11:45 .bashrc
[root@www ~]# chmod 777 .bashrc
[root@www ~]# ls -al .bashrc
-rwxrwxrwx  1 root root 395 Jul  4 11:45 .bashrc
复制<br>那如果要将权限变成&nbsp;-rwxr-xr--&nbsp;呢？那么权限的分数就成为 [4+2+1]+[4+0+1]+[4+0+0]=754。<br><br>还有一个改变权限的方法，从之前的介绍中我们可以发现，基本上就九个权限分别是：<br>
<br>user：用户
<br>group：组
<br>others：其他
<br>那么我们就可以使用&nbsp;u, g, o&nbsp;来代表三种身份的权限。<br>此外，&nbsp;a&nbsp;则代表&nbsp;all，即全部的身份。读写的权限可以写成&nbsp;r, w, x，也就是可以使用下表的方式来看：<br><br>如果我们需要将文件权限设置为&nbsp;-rwxr-xr--&nbsp;，可以使用&nbsp;chmod u=rwx,g=rx,o=r 文件名&nbsp;来设定:<br># touch test1    // 创建 test1 文件
# ls -al test1    // 查看 test1 默认权限
-rw-r--r-- 1 root root 0 Nov 15 10:32 test1
# chmod u=rwx,g=rx,o=r  test1    // 修改 test1 权限
# ls -al test1
-rwxr-xr-- 1 root root 0 Nov 15 10:32 test1
复制<br>而如果是要将权限去掉而不改变其他已存在的权限呢？例如要拿掉全部人的可执行权限，则：<br>#  chmod  a-x test1
# ls -al test1
-rw-r--r-- 1 root root 0 Nov 15 10:32 test1
复制]]></description><link>软件操作\分析原理\linux-文件基本属性.html</link><guid isPermaLink="false">软件操作/分析原理/Linux 文件基本属性.md</guid><pubDate>Thu, 25 Jan 2024 01:40:49 GMT</pubDate><enclosure url="https://www.runoob.com/wp-content/uploads/2014/06/1_151733904241.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://www.runoob.com/wp-content/uploads/2014/06/1_151733904241.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Linux常用命令]]></title><description><![CDATA[ 
 <br>我们知道 Linux 的目录结构为树状结构，最顶级的目录为根目录/。<br>其他目录通过挂载可以将它们添加到树中，通过解除挂载可以移除它们。<br>在开始本教程前我们需要先知道什么是绝对路径与相对路径。<br>
<br>绝对路径：<br>
路径的写法，由根目录&nbsp;/&nbsp;写起，例如： /usr/share/doc 这个目录。<br>

<br>相对路径：<br>
路径的写法，不是由&nbsp;/&nbsp;写起，例如由 /usr/share/doc要到 /usr/share/man底下时，可以写成：&nbsp;cd ../man&nbsp;这就是相对路径的写法。<br>

<br><br>接下来我们就来看几个常见的处理目录的命令吧：<br>
<br>ls（英文全拼：list files）: 列出目录及文件名
<br>cd（英文全拼：change directory）：切换目录
<br>pwd（英文全拼：print work directory）：显示目前的目录
<br>mkdir（英文全拼：make directory）：创建一个新的目录
<br>rmdir（英文全拼：remove directory）：删除一个空的目录
<br>cp（英文全拼：copy file）: 复制文件或目录
<br>rm（英文全拼：remove）: 删除文件或目录
<br>mv（英文全拼：move file）: 移动文件与目录，或修改文件与目录的名称
<br>你可以使用&nbsp;man 命令&nbsp;来查看各个命令的使用文档，如 ：man cp。<br><br>在Linux系统当中， ls 命令可能是最常被运行的。<br>语法：<br>[root@www ~]# ls [-aAdfFhilnrRSt] 目录名称
[root@www ~]# ls [--color={never,auto,always}] 目录名称
[root@www ~]# ls [--full-time] 目录名称
复制<br>选项与参数：<br>
<br>-a ：全部的文件，连同隐藏文件(开头为 . 的文件) 一起列出来(常用)
<br>-d ：仅列出目录本身，而不是列出目录内的文件数据(常用)
<br>-l ：长数据串列出，包含文件的属性与权限等等数据；(常用)
<br>将目录下的所有文件列出来(含属性与隐藏档)<br>[root@www ~]# ls -al ~<br>自己试了一下，ll比较好用
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202401251004682.png" referrerpolicy="no-referrer">
<br><br>cd是Change Directory的缩写，这是用来变换工作目录的命令。<br>语法：<br> cd [相对路径或绝对路径]<br>#使用 mkdir 命令创建 runoob 目录
[root@www ~]# mkdir runoob

#使用绝对路径切换到 runoob 目录
[root@www ~]# cd /root/runoob/

#使用相对路径切换到 runoob 目录
[root@www ~]# cd ./runoob/

# 表示回到自己的家目录，亦即是 /root 这个目录
[root@www runoob]# cd ~

# 表示去到目前的上一级目录，亦即是 /root 的上一级目录的意思；
[root@www ~]# cd ..
复制<br>接下来大家多操作几次应该就可以很好的理解 cd 命令的。<br><br>pwd 是&nbsp;Print Working Directory&nbsp;的缩写，也就是显示目前所在目录的命令。<br>[root@www ~]# pwd [-P]<br>选项与参数：<br>
<br>-P&nbsp;：显示出确实的路径，而非使用链接 (link) 路径。
<br>实例：单纯显示出目前的工作目录：<br>[root@www ~]# pwd
/root   &lt;== 显示出目录啦～
复制<br>实例显示出实际的工作目录，而非链接档本身的目录名而已。<br>[root@www ~]# cd /var/mail   &lt;==注意，/var/mail是一个链接档
[root@www mail]# pwd
/var/mail         &lt;==列出目前的工作目录
[root@www mail]# pwd -P
/var/spool/mail   &lt;==怎么回事？有没有加 -P 差很多～
[root@www mail]# ls -ld /var/mail
lrwxrwxrwx 1 root root 10 Sep  4 17:54 /var/mail -&gt; spool/mail
# 看到这里应该知道为啥了吧？因为 /var/mail 是链接档，链接到 /var/spool/mail 
# 所以，加上 pwd -P 的选项后，会不以链接档的数据显示，而是显示正确的完整路径啊！
复制<br><br>如果想要创建新的目录的话，那么就使用mkdir (make directory)吧。<br>语法：<br>mkdir [-mp] 目录名称<br>选项与参数：<br>
<br>-m ：配置文件的权限喔！直接配置，不需要看默认权限 (umask) 的脸色～
<br>-p ：帮助你直接将所需要的目录(包含上一级目录)递归创建起来！
<br>实例：请到/tmp底下尝试创建数个新目录看看：<br>[root@www ~]# cd /tmp
[root@www tmp]# mkdir test    &lt;==创建一名为 test 的新目录
[root@www tmp]# mkdir test1/test2/test3/test4
mkdir: cannot create directory `test1/test2/test3/test4': 
No such file or directory       &lt;== 没办法直接创建此目录啊！
[root@www tmp]# mkdir -p test1/test2/test3/test4
复制<br>加了这个 -p 的选项，可以自行帮你创建多层目录！<br>实例：创建权限为&nbsp;rwx--x--x&nbsp;的目录。<br>[root@www tmp]# mkdir -m 711 test2
[root@www tmp]# ls -l
drwxr-xr-x  3 root  root 4096 Jul 18 12:50 test
drwxr-xr-x  3 root  root 4096 Jul 18 12:53 test1
drwx--x--x  2 root  root 4096 Jul 18 12:54 test2
复制<br>上面的权限部分，如果没有加上 -m 来强制配置属性，系统会使用默认属性。<br>如果我们使用 -m ，如上例我们给予 -m 711 来给予新的目录 drwx--x--x 的权限。<br><br>语法：<br>rmdir [-p] 目录名称<br>选项与参数：<br>
<br>-p ：从该目录起，一次删除多级空目录
<br>删除 runoob 目录<br>[root@www tmp]# rmdir runoob/<br>将 mkdir 实例中创建的目录(/tmp 底下)删除掉！<br>[root@www tmp]# ls -l   &lt;==看看有多少目录存在？
drwxr-xr-x  3 root  root 4096 Jul 18 12:50 test
drwxr-xr-x  3 root  root 4096 Jul 18 12:53 test1
drwx--x--x  2 root  root 4096 Jul 18 12:54 test2
[root@www tmp]# rmdir test   &lt;==可直接删除掉，没问题
[root@www tmp]# rmdir test1  &lt;==因为尚有内容，所以无法删除！
rmdir: `test1': Directory not empty
[root@www tmp]# rmdir -p test1/test2/test3/test4
[root@www tmp]# ls -l        &lt;==您看看，底下的输出中test与test1不见了！
drwx--x--x  2 root  root 4096 Jul 18 12:54 test2
复制<br>利用 -p 这个选项，立刻就可以将 test1/test2/test3/test4 一次删除。<br>不过要注意的是，这个 rmdir 仅能删除空的目录，你可以使用rm命令来删除非空目录。<br><br>cp 即拷贝文件和目录。<br>语法:<br>[root@www ~]# cp [-adfilprsu] 来源档(source) 目标档(destination)
[root@www ~]# cp [options] source1 source2 source3 .... directory
复制<br>选项与参数：<br>
<br>-a：相当於 -pdr 的意思，至於 pdr 请参考下列说明；(常用)<br>

<br>-d：若来源档为链接档的属性(link file)，则复制链接档属性而非文件本身；<br>

<br>-f：为强制(force)的意思，若目标文件已经存在且无法开启，则移除后再尝试一次；<br>

<br>-i：若目标档(destination)已经存在时，在覆盖时会先询问动作的进行(常用)<br>

<br>-l：进行硬式链接(hard link)的链接档创建，而非复制文件本身；<br>

<br>-p：连同文件的属性一起复制过去，而非使用默认属性(备份常用)；<br>

<br>-r：递归持续复制，用於目录的复制行为；(常用)<br>

<br>-s：复制成为符号链接档 (symbolic link)，亦即『捷径』文件；<br>

<br>-u：若 destination 比 source 旧才升级 destination ！<br>

<br>用 root 身份，将 root 目录下的 .bashrc 复制到 /tmp 下，并命名为 bashrc<br>[root@www ~]# cp ~/.bashrc /tmp/bashrc
[root@www ~]# cp -i ~/.bashrc /tmp/bashrc
cp: overwrite `/tmp/bashrc'? n  &lt;==n不覆盖，y为覆盖
复制<br><br>语法：<br> rm [-fir] 文件或目录<br>选项与参数：<br>
<br>-f ：就是 force 的意思，忽略不存在的文件，不会出现警告信息；
<br>-i ：互动模式，在删除前会询问使用者是否动作
<br>-r ：递归删除啊！最常用在目录的删除了！这是非常危险的选项！！！
<br>将刚刚在 cp 的实例中创建的 bashrc 删除掉！<br>[root@www tmp]# rm -i bashrc
rm: remove regular file `bashrc'? y

# 删除非空目录要用- i 参数
(base) liuyunhui@HX:~$ rm -r Yangting_PCA

复制<br>如果加上 -i 的选项就会主动询问喔，避免你删除到错误的档名！<br>删除非空目录要用- r 参数<br>
(base) liuyunhui@HX:~$ rm -r Yangting_PCA<br><br>语法：<br>[root@www ~]# mv [-fiu] source destination
[root@www ~]# mv [options] source1 source2 source3 .... directory
复制<br>选项与参数：<br>
<br>-f ：force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；
<br>-i ：若目标文件 (destination) 已经存在时，就会询问是否覆盖！
<br>-u ：若目标文件已经存在，且 source 比较新，才会升级 (update)
<br>复制一文件，创建一目录，将文件移动到目录中<br>[root@www ~]# cd /tmp
[root@www tmp]# cp ~/.bashrc bashrc
[root@www tmp]# mkdir mvtest
[root@www tmp]# mv bashrc mvtest
复制<br>将某个文件移动到某个目录去，就是这样做！<br>将刚刚的目录名称更名为 mvtest2<br>
[root@www tmp]# mv mvtest mvtest2<br><br>Linux系统中使用以下命令来查看文件的内容：<br>
<br>cat&nbsp; 由第一行开始显示文件内容
<br>tac&nbsp; 从最后一行开始显示，可以看出 tac 是 cat 的倒着写！
<br>nl &nbsp;&nbsp;显示的时候，顺道输出行号！
<br>more 一页一页的显示文件内容
<br>less 与 more 类似，但是比 more 更好的是，他可以往前翻页！
<br>head 只看头几行
<br>tail 只看尾巴几行
<br>你可以使用&nbsp;man [命令]来查看各个命令的使用文档，如 ：man cp。<br><br>由第一行开始显示文件内容<br>语法：<br>cat [-AbEnTv]<br>选项与参数：<br>
<br>-A ：相当於 -vET 的整合选项，可列出一些特殊字符而不是空白而已；
<br>-b ：列出行号，仅针对非空白行做行号显示，空白行不标行号！
<br>-E ：将结尾的断行字节 $ 显示出来；
<br>-n ：列印出行号，连同空白行也会有行号，与 -b 的选项不同；
<br>-T ：将 [tab] 按键以 ^I 显示出来；
<br>-v ：列出一些看不出来的特殊字符
<br>检看 /etc/issue 这个文件的内容：<br>[root@www ~]# cat /etc/issue
CentOS release 6.4 (Final)
Kernel \r on an \m
复制<br><br>tac与cat命令刚好相反，文件内容从最后一行开始显示，可以看出 tac 是 cat 的倒着写！如：<br>[root@www ~]# tac /etc/issue

Kernel \r on an \m
CentOS release 6.4 (Final)
复制<br><br>显示行号<br>语法：<br>nl [-bnw] 文件<br>选项与参数：<br>
<br>-b ：指定行号指定的方式，主要有两种：<br>
-b a ：表示不论是否为空行，也同样列出行号(类似 cat -n)；<br>
-b t ：如果有空行，空的那一行不要列出行号(默认值)；
<br>-n ：列出行号表示的方法，主要有三种：<br>
-n ln ：行号在荧幕的最左方显示；<br>
-n rn ：行号在自己栏位的最右方显示，且不加 0 ；<br>
-n rz ：行号在自己栏位的最右方显示，且加 0 ；
<br>-w ：行号栏位的占用的位数。
<br>实例一：用 nl 列出 /etc/issue 的内容<br>[root@www ~]# nl /etc/issue
     1  CentOS release 6.4 (Final)
     2  Kernel \r on an \m
复制<br><br>一页一页翻动<br>[root@www ~]# more /etc/man_db.config 
#
# Generated automatically from man.conf.in by the
# configure script.
#
# man.conf from man-1.6d
....(中间省略)....
--More--(28%)  &lt;== 重点在这一行喔！你的光标也会在这里等待你的命令
复制<br>在 more 这个程序的运行过程中，你有几个按键可以按的：<br>
<br>空白键 (space)：代表向下翻一页；
<br>Enter&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ：代表向下翻『一行』；
<br>/字串&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ：代表在这个显示的内容当中，向下搜寻『字串』这个关键字；
<br>:f&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ：立刻显示出档名以及目前显示的行数；
<br>q&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ：代表立刻离开 more ，不再显示该文件内容。
<br>b 或 [ctrl]-b ：代表往回翻页，不过这动作只对文件有用，对管线无用。
<br><br>一页一页翻动，以下实例输出/etc/man.config文件的内容：<br>[root@www ~]# less /etc/man.config
#
# Generated automatically from man.conf.in by the
# configure script.
#
# man.conf from man-1.6d
....(中间省略)....
:   &lt;== 这里可以等待你输入命令！
复制<br>less运行时可以输入的命令有：<br>
<br>空白键&nbsp;&nbsp;&nbsp;&nbsp;：向下翻动一页；
<br>[pagedown]：向下翻动一页；
<br>[pageup]&nbsp;&nbsp;：向上翻动一页；
<br>/字串&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;：向下搜寻『字串』的功能；
<br>?字串&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;：向上搜寻『字串』的功能；
<br>n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ：重复前一个搜寻 (与 / 或 ? 有关！)
<br>N&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ：反向的重复前一个搜寻 (与 / 或 ? 有关！)
<br>q&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ：离开 less 这个程序；
<br><br>取出文件前面几行<br>语法：<br>head [-n number] 文件 <br>选项与参数：<br>
<br>-n ：后面接数字，代表显示几行的意思
<br>[root@www ~]# head /etc/man.config

默认的情况中，显示前面 10 行！若要显示前 20 行，就得要这样：

[root@www ~]# head -n 20 /etc/man.config
复制<br><br>取出文件后面几行<br>语法：<br>`tail [-n number] 文件 <br>选项与参数：<br>
<br>-n ：后面接数字，代表显示几行的意思
<br>-f ：表示持续侦测后面所接的档名，要等到按下[ctrl]-c才会结束tail的侦测
<br>[root@www ~]# tail /etc/man.config
# 默认的情况中，显示最后的十行！若要显示最后的 20 行，就得要这样：
[root@www ~]# tail -n 20 /etc/man.config
复制]]></description><link>软件操作\分析原理\linux常用命令.html</link><guid isPermaLink="false">软件操作/分析原理/Linux常用命令.md</guid><pubDate>Tue, 05 Mar 2024 09:12:51 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202401251004682.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202401251004682.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Linux环境变量配置竟有这么多学问，你真的会了吗？]]></title><description><![CDATA[ 
 <br><br>在自定义安装软件的时候，经常需要配置环境变量，下面列举出各种对环境变量的配置方法。<br>
<br>系统：Ubuntu 14.0<br>

<br>用户名：uusama]<br>

<br>需要配置MySQL环境变量路径：/home/uusama/mysql/bin<br>

<br><br>读取环境变量的方法：<br>
<br>export命令显示当前系统定义的所有环境变量<br>

<br>echo $PATH命令输出当前的PATH环境变量的值<br>

<br>这两个命令执行的效果如下<br>uusama@ubuntu:~export
declare&nbsp;-x&nbsp;HOME="/home/uusama"declare&nbsp;-x&nbsp;LANG="en_US.UTF-8"
declare&nbsp;-x&nbsp;LANGUAGE="en_US:"
declare&nbsp;-x&nbsp;LESSCLOSE="/usr/bin/lesspipe&nbsp;%s&nbsp;%s"
declare&nbsp;-x&nbsp;LESSOPEN="|&nbsp;/usr/bin/lesspipe&nbsp;%s"
declare&nbsp;-x&nbsp;LOGNAME="uusama"
declare&nbsp;-x&nbsp;MAIL="/var/mail/uusama"
declare&nbsp;x&nbsp;PATH="/home/uusama/bin:/home/uusama/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
declare&nbsp;-x&nbsp;SSH_TTY="/dev/pts/0"
declare&nbsp;-x&nbsp;TERM="xterm"
declare&nbsp;x&nbsp;USER="uusama"

uusama@ubuntu:~&nbsp;echo&nbsp;$PATH
/home/uusama/bin:/home/uusama/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
复制<br>其中PATH变量定义了运行命令的查找路径，以冒号:分割不同的路径，使用export定义的时候可加双引号也可不加。<br><br>使用export命令直接修改PATH的值，配置MySQL进入环境变量的方法:<br>export&nbsp;PATH=/home/uusama/mysql/bin:PATH

#&nbsp;或者把PATH放在前面
export&nbsp;PATH=PATH:/home/uusama/mysql/bin
复制<br>注意事项：<br>
<br>生效时间：立即生效<br>

<br>生效期限：当前终端有效，窗口关闭后无效<br>

<br>生效范围：仅对当前用户有效<br>

<br>配置的环境变量中不要忘了加上原来的配置，即$PATH部分，避免覆盖原来配置<br>

<br><br>通过修改用户目录下的~/.bashrc文件进行配置：<br>vim&nbsp;~/.bashrc

#&nbsp;在最后一行加上
export&nbsp;PATH=$PATH:/home/uusama/mysql/bin
复制<br>注意事项：<br>
<br>生效时间：使用相同的用户打开新的终端时生效，或者手动source ~/.bashrc生效<br>

<br>生效期限：永久有效<br>

<br>生效范围：仅对当前用户有效<br>

<br>如果有后续的环境变量加载文件覆盖了PATH定义，则可能不生效<br>

<br><br>和修改~/.bashrc文件类似，也是要在文件最后加上新的路径即可：<br>vim&nbsp;~/.bash_profile

#&nbsp;在最后一行加上
export&nbsp;PATH=$PATH:/home/uusama/mysql/bin
复制<br>注意事项：<br>
<br>生效时间：使用相同的用户打开新的终端时生效，或者手动source ~/.bash_profile生效<br>

<br>生效期限：永久有效<br>

<br>生效范围：仅对当前用户有效<br>

<br>如果没有~/.bash_profile文件，则可以编辑~/.profile文件或者新建一个<br>

<br><br>该方法是修改系统配置，需要管理员权限（如root）或者对该文件的写入权限：<br>#&nbsp;如果/etc/bashrc文件不可编辑，需要修改为可编辑chmod&nbsp;-v&nbsp;u+w&nbsp;/etc/bashrcvim&nbsp;/etc/bashrc#&nbsp;在最后一行加上export&nbsp;PATH=$PATH:/home/uusama/mysql/bin
复制<br>注意事项：<br>
<br>生效时间：新开终端生效，或者手动source /etc/bashrc生效<br>

<br>生效期限：永久有效<br>

<br>生效范围：对所有用户有效<br>

<br><br>该方法修改系统配置，需要管理员权限或者对该文件的写入权限，和vim /etc/bashrc类似：<br>#&nbsp;如果/etc/profile文件不可编辑，需要修改为可编辑chmod&nbsp;-v&nbsp;u+w&nbsp;/etc/profilevim&nbsp;/etc/profile#&nbsp;在最后一行加上export&nbsp;PATH=$PATH:/home/uusama/mysql/bin
复制<br>注意事项：<br>
<br>生效时间：新开终端生效，或者手动source /etc/profile生效<br>

<br>生效期限：永久有效<br>

<br>生效范围：对所有用户有效<br>

<br><br>该方法是修改系统环境配置文件，需要管理员权限或者对该文件的写入权限：<br>#&nbsp;如果/etc/bashrc文件不可编辑，需要修改为可编辑chmod&nbsp;-v&nbsp;u+w&nbsp;/etc/environmentvim&nbsp;/etc/profile#&nbsp;在最后一行加上export&nbsp;PATH=$PATH:/home/uusama/mysql/bin
复制<br>注意事项：<br>
<br>生效时间：新开终端生效，或者手动source /etc/environment生效<br>

<br>生效期限：永久有效<br>

<br>生效范围：对所有用户有效<br>

<br><br>上面列出了环境变量的各种配置方法，那么Linux是如何加载这些配置的呢？是以什么样的顺序加载的呢？<br>特定的加载顺序会导致相同名称的环境变量定义被覆盖或者不生效。<br><br>环境变量可以简单的分成用户自定义的环境变量以及系统级别的环境变量。<br>
<br>用户级别环境变量定义文件：~/.bashrc、~/.profile（部分系统为：~/.bash_profile）<br>

<br>系统级别环境变量定义文件：/etc/bashrc、/etc/profile(部分系统为：/etc/bash_profile）、/etc/environment<br>

<br>另外在用户环境变量中，系统会首先读取~/.bash_profile（或者~/.profile）文件，如果没有该文件则读取~/.bash_login，根据这些文件中内容再去读取~/.bashrc。<br><br>为了测试各个不同文件的环境变量加载顺序，我们在每个环境变量定义文件中的第一行都定义相同的环境变量UU_ORDER，该变量的值为本身的值连接上当前文件名称。<br>需要修改的文件如下：<br>
<br>/etc/environment<br>

<br>/etc/profile]<br>

<br>/etc/profile.d/test.sh，新建文件，没有文件夹可略过]
<br>
<br>/etc/bashrc，或者/etc/bash.bashrc]<br>

<br>~/.bash_profile，或者~/.profile]<br>

<br>~/.bashrc]<br>

<br>在每个文件中的第一行都加上下面这句代码，并相应的把冒号后的内容修改为当前文件的绝对文件名。<br>export&nbsp;UU_ORDER="$UU_ORDER:~/.bash_profile"
复制<br>修改完之后保存，新开一个窗口，然后echo $UU_ORDER观察变量的值：  <br>uusama@ubuntu:~echoUU_ORDER
$UU_ORDER:/etc/environment:/etc/profile:/etc/bash.bashrc:/etc/profile.d/test.sh:~/.profile:~/.bashrc
复制<br>可以推测出Linux加载环境变量的顺序如下：<br>
<br>/etc/environment
<br>/etc/profile
<br>/etc/bash.bashrc
<br>/etc/profile.d/test.sh
<br>~/.profile
<br>~/.bashrc
<br><br>由上面的测试可容易得出Linux加载环境变量的顺序如下，：<br>系统环境变量 -&gt; 用户自定义环境变量 /etc/environment -&gt; /etc/profile -&gt; ~/.profile<br>打开/etc/profile文件你会发现，该文件的代码中会加载/etc/bash.bashrc文件，然后检查/etc/profile.d/目录下的.sh文件并加载。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202401281443282.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>#&nbsp;/etc/profile:&nbsp;system-wide&nbsp;.profile&nbsp;file&nbsp;for&nbsp;the&nbsp;Bourne&nbsp;shell&nbsp;(sh(1))
#&nbsp;and&nbsp;Bourne&nbsp;compatible&nbsp;shells&nbsp;(bash(1),&nbsp;ksh(1),&nbsp;ash(1),&nbsp;...).
if&nbsp;[&nbsp;"PS1"&nbsp;];&nbsp;then&nbsp;&nbsp;    if&nbsp;[&nbsp;"BASH"&nbsp;]&nbsp;&amp;&amp;&nbsp;[&nbsp;"BASH"&nbsp;!=&nbsp;"/bin/sh"&nbsp;];&nbsp;then&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;The&nbsp;file&nbsp;bash.bashrc&nbsp;already&nbsp;sets&nbsp;the&nbsp;default&nbsp;PS1.&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;PS1='\h:\w\$&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;[&nbsp;-f&nbsp;/etc/bash.bashrc&nbsp;];&nbsp;then&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.&nbsp;/etc/bash.bashrc&nbsp;&nbsp;&nbsp;&nbsp;fi&nbsp;&nbsp;else&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;[&nbsp;"`id&nbsp;-u`"&nbsp;-eq&nbsp;0&nbsp;];&nbsp;then&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PS1='#&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PS1='&nbsp;'&nbsp;&nbsp;&nbsp;&nbsp;fi&nbsp;&nbsp;fifiif&nbsp;[&nbsp;-d&nbsp;/etc/profile.d&nbsp;];&nbsp;then&nbsp;&nbsp;for&nbsp;i&nbsp;in&nbsp;/etc/profile.d/*.sh;&nbsp;do&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;[&nbsp;-r&nbsp;i&nbsp;];&nbsp;then&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.i&nbsp;&nbsp;&nbsp;&nbsp;fi&nbsp;&nbsp;done&nbsp;&nbsp;unset&nbsp;ifi
复制<br>其次再打开~/.profile文件，会发现该文件中加载了~/.bashrc文件。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202401281444093.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>#&nbsp;if&nbsp;running&nbsp;bashif&nbsp;[&nbsp;-n&nbsp;"BASH_VERSION"&nbsp;];&nbsp;then&nbsp;&nbsp;&nbsp;&nbsp;#&nbsp;include&nbsp;.bashrc&nbsp;if&nbsp;it&nbsp;exists&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;[&nbsp;-f&nbsp;"HOME/.bashrc"&nbsp;];&nbsp;then&nbsp;&nbsp;&nbsp;&nbsp;.&nbsp;"HOME/.bashrc"&nbsp;&nbsp;&nbsp;&nbsp;fifi#&nbsp;set&nbsp;PATH&nbsp;so&nbsp;it&nbsp;includes&nbsp;user's&nbsp;private&nbsp;bin&nbsp;directoriesPATH="HOME/bin:HOME/.local/bin:PATH"
复制<br>从~/.profile文件中代码不难发现，/.profile文件只在用户登录的时候读取一次，而/.bashrc会在每次运行Shell脚本的时候读取一次。<br><br>可以自定义一个环境变量文件，比如在某个项目下定义uusama.profile，在这个文件中使用export定义一系列变量，然后在~/.profile文件后面加上：sourc uusama.profile，这样你每次登陆都可以在Shell脚本中使用自己定义的一系列变量。<br>也可以使用alias命令定义一些命令的别名，比如alias rm="rm -i"（双引号必须），并把这个代码加入到~/.profile中，这样你每次使用rm命令的时候，都相当于使用rm -i命令，非常方便。]]></description><link>软件操作\分析原理\linux环境变量配置竟有这么多学问，你真的会了吗？.html</link><guid isPermaLink="false">软件操作/分析原理/Linux环境变量配置竟有这么多学问，你真的会了吗？.md</guid><pubDate>Sun, 28 Jan 2024 06:44:05 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202401281443282.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202401281443282.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Linux硬、软链接]]></title><description><![CDATA[ 
 <br><br>Linux 链接分两种，一种被称为硬链接（Hard Link），另一种被称为符号链接（Symbolic Link）。默认情况下，ln&nbsp;命令产生硬链接。<br><br>硬连接指通过索引节点来进行连接。在 Linux的文件系统中，保存在磁盘分区中的文件不管是什么类型都给它分配一个编号，称为索引节点号(Inode Index)。在 Linux 中，多个文件名指向同一索引节点是存在的。<br>比如：A 是 B 的硬链接（A 和 B 都是文件名），则 A 的目录项中的 inode 节点号与 B 的目录项中的 inode 节点号相同，即一个 inode 节点对应两个不同的文件名，两个文件名指向同一个文件，A 和 B 对文件系统来说是完全平等的。删除其中任何一个都不会影响另外一个的访问。<br>硬连接的作用是允许一个文件拥有多个有效路径名，这样用户就可以建立硬连接到重要文件，以防止“误删的功能。其原因如上所述，因为对应该目录的索引节点有一个以上的连接。只删除一个连接并不影响索引节点本身和其它的连接，只有当最后一个连接被删除后，文件的数据块及目录的连接才会被释放。也就是说，文件真正删除的条件是与之相关的所有硬连接文件均被删除。<br><br>另外一种连接称之为符号连接（Symbolic Link），也叫软连接。软链接文件有类似于 Windows 的快捷方式。它实际上是一个特殊的文件。在符号连接中，文件实际上是一个文本文件，其中包含的有另一文件的位置信息。<br>比如：A 是 B 的软链接（A 和 B 都是文件名），A 的目录项中的 inode 节点号与 B 的目录项中的 inode 节点号不相同，A 和 B 指向的是两个不同的 inode，继而指向两块不同的数据块。但是 A 的数据块中存放的只是 B 的路径名（可以根据这个找到 B 的目录项）。A 和 B 之间是“主从”关系，如果 B 被删除了，A 仍然存在（因为两个是不同的文件），但指向的是一个无效的链接。<br><br>[oracle@Linux]$ touch f1          #创建一个测试文件f1
[oracle@Linux]$ ln f1 f2          #创建f1的一个硬连接文件f2
[oracle@Linux]$ ln -s f1 f3       #创建f1的一个符号连接文件f3
[oracle@Linux]$ ls -li            # -i参数显示文件的inode节点信息
total 0
9797648 -rw-r--r--  2 oracle oinstall 0 Apr 21 08:11 f1
9797648 -rw-r--r--  2 oracle oinstall 0 Apr 21 08:11 f2
9797649 lrwxrwxrwx  1 oracle oinstall 2 Apr 21 08:11 f3 -&gt; f1
复制<br>从上面的结果中可以看出，硬连接文件 f2 与原文件 f1 的 inode 节点相同，均为 9797648，然而符号连接文件的 inode 节点不同。<br>[oracle@Linux]$ echo "I am f1 file" &gt;&gt;f1
[oracle@Linux]$ cat f1
I am f1 file
[oracle@Linux]$ cat f2
I am f1 file
[oracle@Linux]$ cat f3
I am f1 file
[oracle@Linux]$ rm -f f1
[oracle@Linux]$ cat f2
I am f1 file
[oracle@Linux]$ cat f3
cat: f3: No such file or directory
复制<br>通过上面的测试可以看出：当删除原始文件 f1 后，硬连接 f2 不受影响，但是符号连接 f3 文件无效<br><br>依此您可以做一些相关的测试，可以得到以下全部结论：<br>
<br>&nbsp;1).删除符号连接f3,对f1,f2无影响；
<br>&nbsp;2).删除硬连接f2，对f1,f3也无影响；
<br>&nbsp;3).删除原文件f1，对硬连接f2没有影响，导致符号连接f3失效；
<br>&nbsp;4).同时删除原文件f1,硬连接f2，整个文件会真正的被删除。
]]></description><link>软件操作\分析原理\linux硬、软链接.html</link><guid isPermaLink="false">软件操作/分析原理/Linux硬、软链接.md</guid><pubDate>Thu, 25 Jan 2024 03:17:26 GMT</pubDate></item><item><title><![CDATA[举个例子]]></title><description><![CDATA[ 
 <br>--StatQuest<br><br>
<br>
假如现在有一些细胞，我们肉眼看不出差异，但我们猜测是它们之间是有差异的<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271653289.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
可能是三种不同的cell，但是我们无法从外部观察到这样的信息<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271654877.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
所以我们去测序mRNA，来看不同细胞到底在干什么（是否活化）<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271703509.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
右边是结果，然后左边是PCA的做法。把数据的关联性降到二维空间图中<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271703300.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>如果是高度相关的，样本就会聚类在一起<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271705967.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>
MDS和PCA很像，但是它是通过将样本之间的距离转换为2维，而非样本之间的关联性<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271706106.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
所以为了得到MDS，我们需要分别计算cell1-cell2、cell1-cell3等两两cell之间的距离<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271708555.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271709338.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>那么如何得到二者之间的距离呢？现在以cell1-cell2之间为例<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271710573.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>常见办法是来计算Euclidian distance（欧几里得距离）<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271710604.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>现在只看2个基因<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271711999.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>然后可以画线来代表两个基因的值<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271712138.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271712885.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>那么欧几里得距离等于斜边值<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271714359.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>随着基因越来越多，我们只需要增加平方，来代表更多的差异值<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271717154.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271716296.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>（下一个应该是基因3，视频中多算了一次基因2）<br>
<br>
计算完成后，就会降维得到2维图<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271721480.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
但是如果用欧几里得距离计算distance，MDS的图会和PCA的图一样<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271722454.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>换句话说，其实这最小化线段距离和最小化线段关联性是一样的<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271723248.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>
但还有很多其他方法来计算距离<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271725083.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
另一种方法是使用log值<br>
计算log<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271726309.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>取绝对值<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271727205.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>取绝对值的平均值<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271728496.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>然后就会得到和使用欧几里得距离时不一样的图<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271729809.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>一些科研人员很可能会使用log值，但实际上还有很多其他的方法<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271730466.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271730958.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>根据不同情况来选择distance的计算方法<br><br>
<br>PCA与MDS的差别：前者基于样本相关性，后者基于样本距离。样本之间距离越近，那么就越会聚在一起。
<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271732083.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>所以，关联性和距离就是二者唯一的区别<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271735856.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
]]></description><link>软件操作\分析原理\mds原理.html</link><guid isPermaLink="false">软件操作/分析原理/MDS原理.md</guid><pubDate>Sat, 29 Jun 2024 14:33:09 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271653289.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402271653289.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[MEGA多序列比对及建树（NJ）]]></title><description><![CDATA[ 
 <br>作者：水瓶之翼<br>
链接：<a rel="noopener" class="external-link" href="https://zhuanlan.zhihu.com/p/643415592" target="_blank">https://zhuanlan.zhihu.com/p/643415592</a><br>
来源：知乎<br>
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。  <br><br>依次点击：ALIGN -&gt; Edit/Build Alignment -&gt; Retrieve a sequence from a file -&gt; OK -&gt; 选择我们前面整理好的fasta文件 -&gt; 出现 Alignment Explorer 窗口<br><img src="https://pic2.zhimg.com/v2-d9b0f011dc2aef918cb58db521087cf5_b.jpg" referrerpolicy="no-referrer"><br>​导入序列后如下图所示：（这时如果还想更改某条序列的名称可以在该原名字处右键选中 Edit Sequence Name编辑）<br><img src="https://pic1.zhimg.com/v2-f6716951662a3abced450ccbb1b53068_b.jpg" referrerpolicy="no-referrer"><br>​导入后我们还是可以检查一下序列，这时候如果存在两端有多余碱基的序列，可以很容易检查发现。在MEGA中可以进行序列裁剪、更改、反向互补等操作。如果我们没有进行步骤2.3的检查，导入MEGA后再检查也是一样的，序列的方向是其中最重要的一点，不能与其它序列反向。<br><br>MEGA提供了两种序列比对方法，Clustal W 与 MUSCLE ，有文献报道 MUSCLE 的准确性更高，且速度比Clustal W 更快，因此这里我们直接使用 MUSCLE 进行多序列比对。<br>按Ctrl + A选中所有序列 -&gt; 点击 Alignment -&gt; 选择 Align by MUSCLE -&gt; 参数设置界面直接点击 OK 即可，一般不需要更改参数。（如果用Clustal W 进行核酸序列比对的话一般也不需要修改参数）<br>比对后结果：<br><img src="https://pic1.zhimg.com/v2-4d2a7d1f7513bfc4d48c333d7c85166c_b.jpg" referrerpolicy="no-referrer"><br><br>依次点击 Data -&gt; Export Alignment -&gt; MEGA Format，然后保存为.meg格式的文件即可（保存时会提示输入标题以及是否是编码序列），我这里命名为example.meg。另外我们这里也可以另外保存一份 FASTA格式的文件用于我们最后一步的可视化（我这里命名为example.fas）。<br><img src="https://pic1.zhimg.com/v2-62936c7b694b99e186b7b831782a4c88_b.jpg" referrerpolicy="no-referrer"><br><br>
<br>
首先，我们可以大致看一下有没有异常序列，如果发现比对后存在明显与其它序列不同的序列，可以用MEGA进行相应编辑或者考虑删除后重新比对。  

<br>
其次可以检验比对结果的可靠性。<br>
如果比对结果不可靠，那么构建的进化树也会不可靠。Thompson等人（1999）的一项研究比较了一些比对程序，表明当配对比对中氨基酸一致性(identity)的平均百分比太低时，多重比对的准确性低于它们能够产生可靠的系统发育树的水平。
Thompson的研究表明，当氨基酸平均identity&lt;20%时，则&lt;50%的残基是被正确比对的。在20%-30% identity 之间的“过渡带”中，约80%的残基正确对齐，&gt;30%的identity中，90%的残基正确比对。  
因此我们可以通过计算序列之间的 p距离(p-distance)来检验核酸或氨基酸比对的可靠性。比如在氨基酸比对中， p-distance 值为 0.6，代表氨基酸平均 identity为 1-0.6=40%，如前所述，氨基酸的identity一般需要&gt;30%，才比较可信(即 p-distance&lt;0.7)，因此当 p-distance=0.6时，我们可以认为氨基酸的比对结果是比较可靠的。<br>
对于核酸来说，检验方法类似，假如 p-distance 为 0.33，则 67% 的 identity 就可能不足以 用于准确估计进化关系。p-distance&lt;0.33一般时认为结果比较可靠。  
一般来说，假如核酸序列或者氨基酸序列的 p-distance 较高时，不应将多序列比对的结果用 于构建进化树，而是应该删除其中不可靠的序列重新比对，使得核酸序列或者氨基酸序列的 p-distance 满足 核酸：&lt;0.33/氨基酸：&lt;0.7。  

<br>
<br>在 MEGA 中依次点击：DISTANCE -&gt; Compute Overall Mean Distance -&gt; 选择前面导出的比对完的 .meg 文件：
<br><img src="https://pic4.zhimg.com/v2-6a7f792592f2bd33193938a6abe622e7_b.jpg" referrerpolicy="no-referrer"><br>
<br>然后按照下图进行参数设置：
<br><img src="https://pic2.zhimg.com/v2-22fb0e35700c42198bf480cef7814bdd_b.jpg" referrerpolicy="no-referrer"><br>
<br>点击OK后，可以得到 1 个平均 p-distance，本例中是0.26&lt;0.33，因此我们可以认为本次比对结果比较可靠。
<br><img src="https://pic1.zhimg.com/v2-87b6596c66c4d7143109533cd0f506d8_b.jpg" referrerpolicy="no-referrer"><br>总结：<br>比对方法以及比对可靠性的检验方法有很多种，上面只是介绍了其中一种。比如 MAFFT、PRANK等比对方法就被认为准确性比较高，有文献报道 MAFFT准确性比Clustal W高、速度也更快，PRANK准确性被认为比MAFFT与Clustal W都高，但速度却相对较慢。大家在实际比对时可以尝试多种方法，并在准确性与速度方面进行一定的权衡。<br><br>构建进化树的方法主要可以分为两类：<br>一是基于距离的方法，基于所计算出的序列间遗传距离来构建进化树，快速，会产生单一的树。<br>
<br>邻接法：Neihbor Jioning(NJ)
<br>非加权分组平均法(UPGMA)
<br>二是基于字符的方法，基于描述遗传字符演化的数学模型构建进化树，速度较慢，会产生多棵树，然后根据其最优选择标准来找出最佳进化树。<br>
<br>最大简约法(Maximum Parsimony,MP)
<br>最大似然法(Maximum Likelihood,ML)
<br>贝叶斯马尔科夫链蒙特卡洛法(BMCMC)
<br>根据《phylogenetic trees made easy》作者所述，MEGA是构建NJ树最好的程序，且其强烈反对使用UPGMA法构建系统发育树。<br><br>邻接法：Neihbor Jioning(NJ)是使用得最广泛的一种方法。我们使用MEGA根据前面的比对结果构建NJ树。<br>邻接法基本介绍：<br>邻接法是一种基于最小进化原理的算法，基于距离矩阵构建树，它不检验所有可能的拓扑结构，能同时给出拓扑结构和分支长度。它的优点是重建的树相对准确，假设少，计算速度快，只得到一棵树。<br>NJ树适用于进化距离较小、信息位点较少的短序列，可用于大型数据集（速度很快）。其缺点主要表现在将序列上的所有位点等同对待，所分析序列的进化距离不能太大（对于距离过远的序列会出现长枝吸引现象）。<br><br>假如 Jukes-Cantor(JC)距离 &gt;1.0，则序列不适合构建NJ树，而应采用其它方法。<br>我们采用与 3.4 相同的步骤，在 MEGA 中依次点击：DISTANCE -&gt; Compute Overall Mean Distance -&gt; 选择步骤3.3多序列比对得到的.meg文件，然后在参数设置中将 Model/Method 改为 Jukes-Cantor 即可计算出 JC 距离。<br><img src="https://pic2.zhimg.com/v2-0f7d4eb99e71f743bdad5316fe5ad8f1_b.jpg" referrerpolicy="no-referrer"><br>在本例中计算出的 JC 距离为 0.34，因此适合构建 NJ 树。<br><br>
为什么说是估计，类似于模型构建，因为事实上我们永远无法得到真实的物种演化的系统发育树，我们所谓的构建进化树只是在用各种算法尝试得到最接近真实进化树的一颗树。
<br>我们估计进化树时一般会估计多次。<br>
<br>首先是在没有 Bootstrap 的情况下先估计得到一颗树，初步查看是否有明显异常的序列被分类到某个子树中（关于什么是 Bootstrap 后面会介绍）。
<br>如果有这种情况应对序列进行检查，必要时还需要删除某些序列，然后重新进行多序列比对，再重新估计树。
<br>当我们认为树中没有异常序列时，再设置 Bootstrap 值（一般为1000以上，至少100），估计最终的树。
<br>对于最大似然法，这样估计树可以节约很多时间，因为最大似然法设置 Bootstrap 后速度会非常慢，对于 NJ 法，在序列不多的情况下（只有数百条），可以直接设置 Bootstrap，因为 NJ 法速度很快。<br>在 MEGA中依次点击：PHYLOGENY -&gt; Construct/Test Neighbor Joining Tree -&gt; 设置参数，我们先看一下参数设计界面的各个参数。<br><img src="https://pic4.zhimg.com/v2-75b2e04f62513fc770aeb5fa8980abb3_b.jpg" referrerpolicy="no-referrer"><br><br>估计 NJ 树时各参数的意义与设置：<br>
<br>Test of Phylogeny：进化树的检验设置，我们可以根据前面说的设置为None，表明不检验（速度快），也可以设置为 Bootstrap method，然后在下面的 No.of Bootstrap Replications 设置检验次数，关于 Bootstrap 的介绍可见后面备注3。
<br>Substitutions Type：本文只介绍比对核酸序列构建进化树，因此直接选择默认的 Nucleotide。
<br>Model/Method：选择进化模型。我们这里选择 Maximum Composite Likelihood，算法原理在后面备注1中介绍。
<br>Substitution to include：选择哪些替代类型用于计算，一般不需要改。transition 代表转换，嘌呤之间或者嘧啶之间，如 A&lt;-&gt;G,C&lt;-&gt;T；transversion 颠换，嘌呤与嘧啶之间，如A&lt;-&gt;C/T,G&lt;-&gt;C/T
<br>Rates among Sites ：位点之间的替换率分布。我们这里选择Gamma Distributed (G)，在 Gamma Parmamter中填的参数值可以通过MEGA计算得到。关于 Rates 的介绍可见后面备注2
<br>Patterns among Lineages：默认即可，我们一般比对的都是同源序列。
<br>Gaps/Missing Data Treatment：该参数设置如何处理空格(gaps)。几乎完全由空格组成的位点对估计树中的分支顺序或分支长度的贡献很小，但它们确实增加了计算时间。Complete deletion，代表直接删除所有包含gap的位点。Pairwise deletion代表配对删除，从而使缺少数据的位点仅在需要时被删除而不是总被删除。Partial deletion代表部分删除，当 Site Coverage Cutoff设置为95%时，代表如果有95%的序列在此位点上是空格，则将该位点删除。
<br>Select Condon Positions: 代表选择密码子的哪些位点来构建树，通常全选。除非你有特殊的需求，如只想根据密码子的第三位碱基构建进化树。
<br>Number of threads：代表分析时电脑的线程数设置，根据自己的电脑情况可随意设置。
<br><br>备注1 进化模型<br>在祖先序列进化为子序列的过程中，如果仅仅计算两个核苷酸之间的距离是不够的，比如某个位点由 A 替换成了 T，我们假设计算出的它们之间的距离时是0.5，然而我们无法知道这中间是否发生了其它变化，比如可能先由 A 替换成 G，接着再从 G 替换成 T，这与 A 直接替换成 T 的替换率显然是不同的。又或者某个位点未发生替换，我们计算出的它们的距离0，然而它中间也有可能经过了其它替换，比如A-&gt;G-&gt;A。因此我们需要选择进化模型来试图解释这些替换，以更准确地估计序列进化的过程。<br>一、单参数模型<br>
<br>Jukes-Cantor model(JC)：该模型认为任何核苷酸改变为其它核苷酸的几率是相等的，只需要知道核苷酸替换率即可，因此称为 one-parameter model 或者 Jukes-Cantor model
<br>Felsenstein 81 (F81)模型拓展了 Jukes-Cantor model，允许碱基替换的基础替换率不同。
<br>在单参数模型中，碱基替换率可以通过下图矩阵表示，称之为Q矩阵，只有一种核酸替换率 α。  <br><img src="https://pic4.zhimg.com/v2-5b16f604e254b53f407075fe1778908b_b.jpg" referrerpolicy="no-referrer"><br>二、其它模型  <br>然而每种核苷酸的突变几率往往是不一样的。<br>
<br>Kimura 2-parameter model(K2P) 拓展了Jukes-Cantor model，考虑核苷酸转换和颠换的替换率不一样。K2P模型假设Q矩阵中有两种替换率，转换一种，颠换一种。<br>
因此，K2P的Q矩阵如下，转换的替换率为α，颠换的替换率为b<br>

<br><img src="https://pic1.zhimg.com/v2-a969c184712839e585771be6b7b80548_b.jpg" referrerpolicy="no-referrer"><br>
<br>Tamura 3-parameter model 添加了对成分偏差的修正，如果基础比率与相同频率有很大差异，可能是由于突变偏差，那么就需要考虑这种差异<br>

<br>Tamura-Nei model 延伸了前一个模型，把嘌呤之间的的转换和嘧啶之间的颠换的替换率进行了区分。<br>

<br>Felsenstein 84 (F84) model 和 HKY model也基于类似 Tamura-Nei model的假设<br>

<br>Maximum Composite Likelihood model 是一种基于似然性的 Tamura-Nei model的应用，提高了计算配对距离(pairse distance)的精确度<br>

<br>General Time-Reversible(GTR) model。该模型假设 Q矩阵有6种不同的率，认为碱基不同方向的替换概率相同(即A-&gt;C与C-&gt;A的替换率相同)。<br>

<br>总的来说，Kimura 2-parameter 与 Maximum Composite Likelihood 模型是目前构建NJ树时文献中用得比较多的模型。<br><br>备注2 位点之间的替换率<br>前面的进化模型中所说的碱基替换率指的是某个位点的碱基替换为其它碱基的频率（考察的是单个位点的碱基替换），这些模型假设所有位点的碱基替换率都是一样的，但实际上，不同位点的替换率可能会不同，比如编码序列的起始密码子处，通常为ATG（有时也为GTG），因此我们可以推测起始密码子处2，3位点的碱基替换率是0。<br>因此引入了序列中估计不同位点之间替换率的方法。<br>
<br>Uniform Rates 假设不同位点之间的碱基替换率是相同的。
<br>还有一种假设是不同位点的碱基替换率的分布存在一种普遍的模式，常用的分布是伽马分布(Gamma distribution)，我们可以使用MEGA预测Gamma分布的参数。
<br><br>备注3 进化树的可靠性检验<br>前面也已经提过，事实上我们估计的所有树都是错误的，只是通过模型算法尽量找到一颗最接近真实的树。因此我们需要一种方法来评估通过这些模型构建出来的树的可靠性。其中 Bootstrap 方法是使用得最广泛的一种，NJ、ML等方法都使用 Bootstrap 检验进化树的可靠性，不过 BMCMC 通过进化枝后验概率计算树的可靠性。<br>需要注意的是 Bootstrap 评估的是我们估计树的可重现性，而非树的准确性。<br>下面介绍 bootstrap 的原理与过程。<br>
<br>首先，我们把未经过Bootstrap第一次估计出的树称为原始树，比如以下面的比对结果构建出一颗原始树：
<br><img src="https://pic4.zhimg.com/v2-c5d0e5e27e00b50a737ab9314fa37a9b_b.jpg" referrerpolicy="no-referrer"><br>
<br>上面的比对结果中包括10个碱基位点，5条序列。在第1次 bootstrap 时，会重新构建1个包含10个位点的比对结果，首先从10个位点中随机选取1个位点的序列作为伪比对第1个位点的碱基，接着重新从上面10个位点的序列中选取1个位点的序列作为伪比对第2个位点的碱基，如此直到形成一个新的包含10个位点的伪比对结果。这样得到的伪比对结果与原比对结果的不同在于有些位点可能会重复（有放回抽样），比如说第1次 bootstrap得到下面的伪比对结果，然后基于这个伪比对结果用相同的模型与参数估计一颗新的树：
<br><img src="https://pic1.zhimg.com/v2-70808113aed10860bae1845346029aac_b.jpg" referrerpolicy="no-referrer"><br>
<br>接着按照相同的方式进行第2次、第3次…直到第1000次 bootstrap。最后会得到一颗最终的树，该树的每个节点旁都会记录一个自展值(Bootstrap value)。假如物种A的自展值为90，代表在1000次bootstrap中，有900次物种A在进化树中都被归为某一类(clade)，剩下的100次物种A被归类到别的clade。一般认为自展值&gt;70的估计出来的分支是比较可靠的。
<br><br>一、估计 gamma 参数<br>
按照前面的理论知识，如果我们认为自己的序列在不同位点具有不同的碱基替换率，可以设置gamma分布，所以先用MEGA得到gamma分布的参数：<br>
依次点击：RATES -&gt; Gamma Parameter for Site Rates (ML) -&gt; 选择步骤3.3多序列比对得到的.meg文件，不用更改参数，点击 OK即可  <br><img src="https://pic2.zhimg.com/v2-6cde7e208e5111bb8cb4525831b5224d_b.jpg" referrerpolicy="no-referrer"><br>在结果页面，我们可以得到一个 gamma 分布的参数为 0.499 ：<br><img src="https://pic4.zhimg.com/v2-a207544a5691a0785c77e00dbd79f8cf_b.jpg" referrerpolicy="no-referrer"><br>二、估计 NJ 进化树<br>
在 MEGA中依次点击：PHYLOGENY -&gt; Construct/Test Neighbor Joining Tree -&gt; 选择步骤3.3多序列比对得到的.meg文件 -&gt; 设置参数。根据前面的理论知识，我们按照下图设置参数，接着点击OK即开始估计进化树。  <br><img src="https://pic4.zhimg.com/v2-75b2e04f62513fc770aeb5fa8980abb3_b.jpg" referrerpolicy="no-referrer"><br><br>一、进化树的基本结构<br><img src="https://pic2.zhimg.com/v2-843f1cabff313b5975643f90e9ff75b5_b.jpg" referrerpolicy="no-referrer"><br>
<br>外部节点(绿色圆点)又被称为“叶节点”，表示采样及测序的实际生物体(例如，传染病研究中的病毒)，在进化生物学术语中又被称为“分类单元(taxa)”。
<br>内部节点(蓝色圆点)表示外部节点的假设祖先。
<br>根(红色圆点) 是进化树中所有物种的共同祖先。
<br>水平线条表示树的分支，又表示生物所发生的以时间或遗传分歧衡量的演变(灰色数字)。
<br>底部的线条表示这些分支长度的标尺。
<br>二、MEGA中的进化树查看<br>
<br>本例中 MEGA 得到的进化树如下图1，先看红色框，这块区域显示了树的拓扑结构，与前一个图中稍有不同的是，在内部节点旁边还出现了1个数值（红色箭头所示），这是因为我们因为设置了 Bootstrap，该数值即表示自展值。可以看得现在的进化树是比较拥挤的，因为枝长按照实际计算出的值被画了出来，这样可以显示生物体演变的实际程度，此时树下方会有枝长的标尺。<br>

<br>蓝色框中是 MEGA 中绘制进化树的图形化界面选项，我们可以根据自己的需求定制不同风格的进化树，比如我们只想看一下各个分类单元的分类情况，可以点击蓝色框中 Layout -&gt; Toggle Scaling of the Tree（粉红色箭头），就可以隐藏枝长的实际值（如下方第2张图所示），此时分支的长度不代表实际意义。<br>

<br>又比如我们前面提到自展值过小的得到的分支一般不是很可靠，我们也可以通过蓝色框中的 Compute -&gt; 设置自展值 Cutoff 值为50，则会合并自展值小于50的分支（如下方第3张图所示）。<br>

<br>另外我们还可以在蓝色框中设置是否显示自展值、枝长、显示为环形进化树、设置clade、提取子树等，只需要点击即可实时显示效果。<br>

<br>另外在绿色方框中会有两个树，Bootstrap Consensus Tree可以让我们更好地看清自展值与对应的节点，不过我们后续进化树可视化一般使用Original Tree 即可。<br>

<br><img src="https://pic1.zhimg.com/v2-f56d152978c5ebe4e3504c8cb9d2dadc_b.jpg" referrerpolicy="no-referrer"><br><img src="https://pic1.zhimg.com/v2-837baafab0bc174a39d1b1bfad15189c_b.jpg" referrerpolicy="no-referrer"><br><img src="https://pic3.zhimg.com/v2-5ca8f984f1f783c1c0ba953ec0f46986_b.jpg" referrerpolicy="no-referrer"><br><br>关于无根树与有根树<br>我们构建的树（包括其它方法如ML法、MP法等）基本上得到的都是无根树。<br>
<br>无根树没有方向性可言，能从一个节点追溯其父节点也可以追溯其子节点，如果移除无根树的某个分支，可以拆分到不同的分组，这些不同的分组称为 splits。
<br>有根树有方向性，不能从一个节点追溯其父节点，只能追溯其子节点，因为物种进化是有方向的，如果移除有根树的某个分支，得到的分组称为 clades。
<br>虽然得到的是无根树，但是 MEGA 绘制出来的进化树看起来容易让人认为是有根树。我们在进化分析时往往希望得到的是有根树，因为只有有根树才能分析物种的演化关系。因此有时候通常会通过无根树人为绘制有根树。在一堆同源性较高的序列中去寻找它们的根往往不容易，因此我们往往需要借助额外的信息，常用的方法是借助外群(outgroup)。<br>外群(outgroup)可以被定义为1条或多条序列，这些序列与内群(ingroup)序列的进化距离比内群序列之间的距离都要远。<br><br>在前面的例子中，我选了18条 PRRSV 病毒的 ORF5 基因的序列，要绘制有根树，我需要另外加入1条外群序列，我选择的是与 PRRSV 病毒在同一个科下的另一种病毒的 ORF5 基因序列。在重新进行多序列比对、进化树估计后，得到下方的进化树，红框中的序列为新加入的外群序列，可以发现其与前面的18条序列相比形成了单独的一个分支：<br><img src="https://pic1.zhimg.com/v2-500d32c96dc00a882476e3eec43a18e0_b.jpg" referrerpolicy="no-referrer"><br>接下来绘制有根树，首先在图中鼠标左键点击外群所在的分支，然后鼠标右键选择 Root tree 即可（如下图1所示），接着我们得到了1颗有根树（如下图2所示）。<br>虽然我们绘制的有根树看起来和无根树没什么区别，但实际上已经设置了1个根节点（下方图2中绿色箭头所示），而且仔细观察可以发现两颗树的分支长度发生了变化。<br>
<br>上图无根树的分支看起来有两个分支分成了外群与内群，但实际上只有1个分支，其实际分支长度为这两个长度之和，MEGA中将其绘制成了看起来有两个分支的图形。
<br>下图2的有根树的分支确实存在两个分支，将其分成了内群与外群，因此分支长度也发生了改变。
<br><img src="https://pic1.zhimg.com/v2-22a75561afb6854a302f79089a37754c_b.jpg" referrerpolicy="no-referrer"><br><img src="https://pic3.zhimg.com/v2-124ff5bed50cb7a14a67b5fa9322875a_b.jpg" referrerpolicy="no-referrer"><br><br>接着我们就可以根据这个有根树添加不同的 clade 了。首先点击某个类别所有分类单元所在的共同分支（下图红色箭头），然后依次选择 Subtree -&gt; Draw Options -&gt; Format Subtree，即可进入设置 clade 的界面。（如果要删除设置的某个clade，还是这样选择，会出现一个Clear clade或者Clear All subtree options的选项，代表清楚某个分类或者清楚所有分类设置）<br><img src="https://pic1.zhimg.com/v2-ca119ffe9554feb2b8143072ae2223c4_b.jpg" referrerpolicy="no-referrer"><br>有一系列选项可以进行子树的设置（下图1），大家可以自行探索。<br>我们可以发现 MEGA 自带的绘图功能也很强大，可以达到很美观的效果，设置 clade 后如下图2所示。<br><img src="https://pic1.zhimg.com/v2-929f801f4a22aec2715007086f63a4a4_b.jpg" referrerpolicy="no-referrer"><br><img src="https://pic2.zhimg.com/v2-9ae4271d6fac90e398c29096eede8a59_b.jpg" referrerpolicy="no-referrer"><br><br>
<br>如果不需要对树进行进一步编辑，可以直接导出 MEGA 制作的进化树图片，选择 Image，可以保存为各种格式的图片文件。
<br><img src="https://pic1.zhimg.com/v2-b9ec4b0442443d7d8a970ff76eef74c0_b.jpg" referrerpolicy="no-referrer"><br>
<br>如果想要将进化树数据导出，在其它软件中编辑，我们可以选择 File -&gt; Export Current Tree(Newick)（下图1） -&gt; 勾选两个选项，即同时导出枝长与自举值（下图2），接着会出现.nwk格式文件的编辑窗口（下图3），直接点击保存然后命名为想要的名字即可。我这里保存为example.nwk等待步骤5使用。<br>
Newick格式是计算机可读形式的树文件标准格式，与 NEXUS、Phylip 等均是较为常见的储存系统发育树及其节点和分支相关数据的文件格式。我们通过MEGA得到树文件后，将其导出为 Newick 格式的树文件，然后可以使用 ggtree 等进行可视化。<br>

<br><img src="https://pic1.zhimg.com/v2-8180757ac89d558d4a3841b0f749b428_b.jpg" referrerpolicy="no-referrer"><br><img src="https://pic3.zhimg.com/v2-fb80355a366b16e7cbed25f757247812_b.jpg" referrerpolicy="no-referrer"><br><img src="https://pic2.zhimg.com/v2-b754180b1096cd17bb43dd0e9cac48ed_b.jpg" referrerpolicy="no-referrer"><br>
<br>我们也可以保存一份树文件，等待下一次使用MEGA时继续编辑，只需要点击 File -&gt; Save Current Session -&gt; 然后保存为 .mtsx或者.mts格式的文件即可。
<br><br>最大似然法(Maximum Likelihood,ML)也是使用得比较普遍的一种进化树构建方法。因此我这里也介绍一下如何用MEGA构建MJ树。<br>最大似然法基本介绍：<br>最大似然法是一种基于进化模型和位点信息的树构建方法，其理论基础是基于两条基本假设：不同的性状进化是独立的、物种发生分歧后进化独立。<br>在ML法中，以一个特定的替代模型分析既定的一组序列数据，使所获得的每一个拓扑结构的似然率均为最大，挑出其最大似然率的最大拓扑结构为最终树。其主要优点是如果进化模型选择合理，ML树与真实进化的吻合度最高。然而，ML树的缺点在于计算强度大，非常耗时。<br><br>我们先看一下MEGA中估计ML树的参数，选择 PHYLOGENY -&gt; Construct/Test Maximum Parsimony Tree(s) -&gt; 可以进入参数设置页面，可以看到在 Model/Method 中提供了可以6个模型选项，Rates among sites提供了4个选项。<br><img src="https://pic1.zhimg.com/v2-c80bf3591814b120df0a74b3ec7f07a0_b.jpg" referrerpolicy="no-referrer"><br><img src="https://pic1.zhimg.com/v2-04eff9fdc7c011579a5183cda2f52f38_b.jpg" referrerpolicy="no-referrer"><br>接着我可以们直接使用MEGA软件预测一个适合我们数据的上述两个参数的最佳组合。我们依次点击：MODELS -&gt; Find Best DNA/Protein Models (ML)… -&gt; 选择步骤3.3多序列比对得到的.meg文件 -&gt; 参数设置页面不需要更改（如下图1），点击OK后一段时间会出现一个模型预测结果的窗口（如下图2）。<br><img src="https://pic1.zhimg.com/v2-48fb2ebc9fbd403abc6a1ae42284acc4_b.jpg" referrerpolicy="no-referrer"><br><img src="https://pic1.zhimg.com/v2-78d75a47237a815702ec45eee34d8314_b.jpg" referrerpolicy="no-referrer"><br>上图中红色框区域为MEGA为我们找到的模型结果，绿色框区域有一个对该结果的介绍。我们主要关注前5列（蓝色框所示）。<br>
<br>Model：替换模型与Rates参数简称的组合，从上到下排序为最好到最差。如 K2+G+I，代表 Model/Method 参数选择 Kimura 2-parameter 模型；Rates among Sites参数选择 Gamma Distributed With Invariant Sites(G+I)。
<br>Paramaters：相应模型下必须要估计的参数的数量，在所有条件都相同的情况下，通常认为估计更少的参数会更好。这里的条件指的是用合适的模型来衡量（当然条件通常不相同）
<br>BIC、AICc、InL是三种方法计算出的分数，BIC分数计算采用的是贝叶斯信息准则(Bayesian Information Criterion)，分数越低代表模型越好，MEGA对Model列的排序就是基于BIC进行排序的。AICc分数计算采用的是校正后AIC信息准则(Akaike Information Criterion,correction)，分数越低代表模型越好。InL代表极大似然值(Maximum Likelihood value)，绝对值越低代表模型越好。
<br>在本例中，虽然参数数量第一个模型组合比第二个模型组合大1，但其BIC、AICc、InL分数都是第一种模型组合更好一点，因此我们选择第一个组合（K2+G+I）。有时候第一个模型组合的BIC分数可能小于第二个模型组合，但是如果相差不大，且AIC、InL、参数数量都是第二个模型组合比较好的话，我们也可以考虑选择使用第二个模型组合。<br><br>如下图1，依次点击：PHYLOGENY -&gt; Construct/Test Maximum Likelihood Tree -&gt; 选择步骤3.3多序列比对得到的.meg文件，设置参数如下图2所示。点击OK即可开始比对。<br>关于参数的设置<br>
<br>Bootstrap：注意估计 ML 树设置 Bootstrap 检验会很耗时（电脑不太好的话有时候MEGA程序还会卡住或者闪退）。<br>

<br>Gaps/Missing Data Treatment与NJ树一致，其它参数我们直接选择默认即可，一般不需要修改。<br>

<br><img src="https://pic2.zhimg.com/v2-a0fcb1fe0365f0acc6ecc7860b0ad2d9_b.jpg" referrerpolicy="no-referrer"><br><img src="https://pic3.zhimg.com/v2-22796a588b4eadf33a8419db4f7d4c02_b.jpg" referrerpolicy="no-referrer"><br>最后我们可以得到最大似然法估计出的进化树，如下图所示，左下角红色箭头处会显示该树的log似然值（该值比真实树的似然值肯定会差一些）。其它关于树在MEGA中的可视化与NJ树一致，可见步骤4.1.4-4.1.6<br><img src="https://pic3.zhimg.com/v2-cec0c6f0e6abba48f65ad11f55cc7cce_b.jpg" referrerpolicy="no-referrer"><br><br>前面步骤 4.1.6 我们得到了导出的 Newick 格式的树文件，接着就可以使用R包 treeio 处理以及 ggtree 进行美化了。可视化的部分并没有统一的规范，每个人的需求不同。建议有R语言与ggplot一定基础的同学去看一看Y叔的书《R实战：系统发育树的数据集成操作及可视化》，里面讲得很详细（了解ggplot2语法学起来会很快）。不想用R画图的同学可以借助一些软件如iTOL、Figtree等，或者直接使用前面介绍的MEGA中绘制出来的进化树图片。<br>下面我仅简单介绍一下如何使用treeio以及ggtree进行简单绘图，而不深入探索高级绘图的细节。我们一步一步探索ggtree的绘图过程：<br><br>如果没有安装ggtree，treeio，tidytree，需要先安装：<br>if(!require("ggtree",quietly = T)) BiocManager::install("ggtree")
if(!require("tidytree",quietly = T)) BiocManager::install("tidytree")
if(!require("treeio",quietly = T)) BiocManager::install("treeio")
复制<br><br>加载需要的包<br>library(treeio)
library(ggtree)
library(tidytree)
复制<br>导入Newick格式的进化树<br>tree &lt;- read.tree("example.nwk")
复制<br>我们可以先看一下 read.tree() 函数读入树文件后储存的对象格式，phylo对象是储存系统发育数据常用的一种格式，系统发育分析中用到的大多数R包都依赖于phylo对象。<br>class(tree)

## [1] "phylo"
复制<br>然后就可以使用ggtree画出最简单的树的拓扑结构了<br>ggtree(tree)
复制<br><img src="https://pic1.zhimg.com/v2-9d273a5da83d3a7a235f5ed244a64ef8_b.jpg" referrerpolicy="no-referrer"><br>接着我们使用geom_tiplab()给每个分类单元添加名称，其实ggtree与ggplot函数的语法基本是一致的，如果要掌握ggtree最好先去了解一下ggplot语法。<br>ggtree(tree)+
  geom_tiplab(size=1.5,color="purple") # size与color参数分别设置字体大小与颜色
复制<br><img src="https://pic3.zhimg.com/v2-1300a4c94a747ba0c61dcb38390789a2_b.jpg" referrerpolicy="no-referrer"><br>我们前面画出的树中，其分支长度代表了物种实际的进化程度，因此可以使用geom_treescale()添加标尺，其中标尺x,y参数的设置只需要将整个图想象成第一象限的坐标轴，然后调整标尺的位置即可：<br>ggtree(tree)+
  geom_tiplab(size=1.5,color="purple")+
  geom_treescale(x=2,y=20)
复制<br><img src="https://pic2.zhimg.com/v2-df6ad6d034c30fcd3b088728d5b9f971_b.jpg" referrerpolicy="no-referrer"><br>前面的树不是很整齐，如果我们不需要体现分枝长度，只需要知道各分类单元属于哪个clade，那么可以设置 branch.length="none"参数去除分支长度，使树更加美观，layout参数可以指定树的布局方式。<br>ggtree(tree,branch.length = "none",layout="circular")+
  geom_tiplab(size=1.5,color="purple")
复制<br><img src="https://pic1.zhimg.com/v2-575c696918350dc2245d3c175e16fab0_b.jpg" referrerpolicy="no-referrer"><br>这个phylo树对象在R语言中实际上是一个列表。前面画的矩形树图没有1个明显的根分支，我们可以给列表添加1个元素，即根分支的长度，我这里把长度设置为0.5，然后使用geom_rootedge()添加根分支图层<br>tree$root.edge &lt;- 0.5
ggtree(tree)+
  geom_tiplab(size=1.5,color="purple")+
  geom_rootedge()
复制<br><img src="https://pic2.zhimg.com/v2-16cf427497140fdf90eac53bc2f4789d_b.jpg" referrerpolicy="no-referrer"><br><br>接下来我们探索如何对各个分类单元进行分组，即设置clade。 在这之前我们先了解一下我们的树数据。因为phylo对象不容易直观理解，因此可以通过as_tibble()函数将phylo对象转换为tibble表格，与数据框差不多：<br>tree_tibble &lt;- as_tibble(tree)
复制<br>我们打开 tree_tibble 看一下就可以发现数据其实很简单，只有4列数据，node列保存了分类单元所在的节点编号，parent列保存了其父节点的编号，branch.length列保存了分支长度，label列保存了该节点对应的标签（叶节点的标签即分类单元的名称，内部节点的标签即自展值），关于节点、分支、分类单元等概念忘记的可以去步骤 4.1.4 进行回顾。<br><img src="https://pic3.zhimg.com/v2-5dcf02c2ecb43aa28a25377a8597cefe_b.jpg" referrerpolicy="no-referrer"><br>因为每个节点都有一个编号或者标签，因此我们可以通过该编号定位到某个节点。这样就可以实现对不同 clade 进行分类、标注颜色等操作。比如说下图中红色和蓝色圆圈所在的节点下所有分类单元分别可以被归为clade1与 clade2，我们只要往tree数据中添加基于此的分组信息即可方便地使用ggtree进行分组标记颜色与注释clade。<br><img src="https://pic1.zhimg.com/v2-172dc2ef88f5d2eecfcf743eb459701c_b.jpg" referrerpolicy="no-referrer"><br><br>我们先看一下可以提取节点信息的几个函数，对于tree这个phylo对象的数据，parent()函数返回了第1个节点的父节点的节点编号<br>parent(tree,1)

## [1] 26
复制<br>相应的还有child()函数可以提取某个节点子节点的编号，<br>child(tree,26)

## [1] 1 2
复制<br>ancestor()函数提取某个节点所有父辈节点编号，直到追溯到根节点<br>ancestor(tree,1)

## [1] 26 25 24 23 22 21 20
复制<br>offspring()函数提取某个节点所有子代节点编号<br>offspring(tree,20)

##  [1] 21 31 19 22 11 23 28 24 27 25  4 26  3  1  2  5  6  7 29  8 30  9 10 12 32
## [26] 33 35 34 15 13 14 16 36 17 18
复制<br>sibling()函数返回某个节点的兄弟节点<br>sibling(tree,1)

## [1] 2
复制<br>上述函数也可以针对前面转换的tibble数据进行提取，可以得到更全的信息，比如：<br>child(tree_tibble,26)

## # A tibble: 2 × 4
##   parent  node branch.length label     
##    &lt;int&gt; &lt;int&gt;         &lt;dbl&gt; &lt;chr&gt;     
## 1     26     1       0.0102  MT268280.1
## 2     26     2       0.00610 FJ548853.1
复制<br><br>回到前面讲的，我们的目的是获取红蓝色圈对应的节点编号，以实现分类，因此我们只需要找到根节点编号，然后根据根节点编号获取其两个子节点编号就是我们相要的两个节点编号。<br>
<br>有一种比较简单的方法，先将所有节点编号显示在图中，然后我们从图中找到直接用于后面的输入，使用geom_nodelab()函数映射节点编号即可，可以发现我们想要的编号是21与31：
<br>ggtree(tree,branch.length = "none")+geom_nodelab(aes(label=node))
复制<br><img src="https://pic1.zhimg.com/v2-e4a446eb7ac441dfc49920a5ea3f6c10_b.jpg" referrerpolicy="no-referrer"><br>
<br>还有一种方法是直接提取，我们首先通过ancestor(tree,1)得到任意节点（这里选择了节点1）的所有祖先节点，它返回的编号顺序是一级一级往前推的，因此最后一个编号就是根节点编号，然后通过rev()函数反向，再取其第一个编号就是根节点编号了。
<br>( node_root &lt;- rev(ancestor(tree,1))[1] )

## [1] 20
复制<br>然后我们只需要使用child()函数即可得到想要的节点编号，示例的进化树中根节点分出了3个节点，前两个就是我们想要用于分组的节点。<br>( node &lt;- child(tree,node_root) )

## [1] 21 31 19
复制<br><br>接着通过groupClade函数，我们可以给树添加分组信息，只需要传入我们想要分组的节点编号的向量即可。下面的例子中，groupClade函数把节点21的所有子节点分为一组，把节点31的所有子节点分为另一组，转换为tibble数据查看一下，我们可以明显发现数据中添加了1列group信息，1代表第1组，2代表第2组，如果有别的节点不包含在我们输入的节点的子节点中，该函数会默认将这些节点标记为另外一组0。（需要注意groupClade只能对内部节点进行分组，想要将叶节点进行分组可以使用groupOTU函数）<br>groupClade(tree,c(21,31)) %&gt;% as_tibble()

## # A tibble: 36 × 5
##    parent  node branch.length label       group
##     &lt;int&gt; &lt;int&gt;         &lt;dbl&gt; &lt;chr&gt;       &lt;fct&gt;
##  1     26     1       0.0102  MT268280.1  1    
##  2     26     2       0.00610 FJ548853.1  1    
##  3     25     3       0.00733 OQ883907.1  1    
##  4     24     4       0.00288 OQ357724.1  1    
##  5     27     5       0       NC_038291.1 1    
##  6     27     6       0.00921 AF331831.1  1    
##  7     28     7       0.0821  JN660150.1  1    
##  8     29     8       0.0547  MW803134.1  1    
##  9     30     9       0.0601  MZ416787.1  1    
## 10     30    10       0.0816  JN654459.1  1    
## # ℹ 26 more rows
复制<br>分组以后我们需要将其保存为一个新的tree变量才可以进一步画图，这里保存为tree2。<br>tree2 &lt;- groupClade(tree,c(21,31))
复制<br>接着我们只需要使用ggplot2语法，使用aes函数将group分组信息映射到图中即可<br>p &lt;- ggtree(tree2,aes(color=group))+
  geom_tiplab()
p
复制<br><img src="https://pic2.zhimg.com/v2-2820c9a3ff46db89b357bd6bc80b3b1d_b.jpg" referrerpolicy="no-referrer"><br><br>接下来我们要进一步在分类单元右边添加clade标注。先构建一个数据框，node中还是填入刚才用于分类的编号形成的向量，name中填入对应的clade名称组成的向量，比如我想把节点21所在的分类命名为L1，把节点31所在的分类命名为L2,可以这样设置：<br>dat &lt;- data.frame(node=c(21,31),
                  name=c("L1","L2"))
复制<br>然后使用geom_cladelab函数添加一个图层，将前面制造的dat数据映射上去即可，offset参数代表设置文本到条带之间的距离。<br>p+geom_cladelab(data = dat,
                mapping = aes(node=node,label=name),
                offset=0.5)
复制<br><img src="https://pic3.zhimg.com/v2-2e8b0f9b8ff313dbe1bbb8714bfe810e_b.jpg" referrerpolicy="no-referrer"><br><br>如果我们想要移除某个分类单元怎么办呢？比如我现在不想NC_001639.1出现在图中，只需要使用drop.tip函数传入需要移除的分类单元名称组成的向量即可，然后对新的树tree3绘图。<br>tree3 &lt;- drop.tip(tree2,"NC_001639.1")
ggtree(tree3)+
  geom_tiplab()+
  geom_cladelab(data = dat,
                mapping = aes(node=node,label=name),
                offset=0.5)
复制<br><img src="https://pic1.zhimg.com/v2-9a7dc7ef208fb95742878930f1e33548_b.jpg" referrerpolicy="no-referrer"><br>接下来，如果我们只想给其中几个分类单元标上颜色，只需要映射想要标记颜色的分类单元到颜色参数即可。<br>
<br>可以直接映射分类单元名称
<br>mark &lt;- c("MT268280.1","JN660150.1","OQ803248.1")
ggtree(tree3,aes(color=label %in% mark))+
  geom_tiplab()+
  geom_cladelab(data = dat,
                mapping = aes(node=node,label=name),
                offset=0.5)
复制<br><img src="https://pic4.zhimg.com/v2-1c4a808e4483e209b62753ad83f02cbf_b.jpg" referrerpolicy="no-referrer"><br>
<br>也可以映射分类单元的节点编号：
<br>ggtree(tree)+
  geom_tiplab(size=2,aes(color=node %in% c(1,7,14)))
复制<br><img src="https://pic2.zhimg.com/v2-2f0d8d3ec56ea7c4b979b4c2cd6b8015_b.jpg" referrerpolicy="no-referrer"><br>另外treeio也可以提取某个子树进行画图，比如我现在只想要L1所对应的子树，只需要使用subtree函数对子树进行提取即可。node参数指定要提取的子树的某个叶节点的编号或者标签均可以，levels_back参数指定子集树应该包括多少从选定节点返回的节点（即叶节点往前追溯多少数量的节点）<br>tree4 &lt;- tree_subset(tree,node=1,levels_back = 6)
ggtree(tree4)+
  geom_tiplab(size=2,color="purple")
复制<br><img src="https://pic2.zhimg.com/v2-043c281858e62db505ce0a26ab249409_b.jpg" referrerpolicy="no-referrer"><br><br>一、下面我展示了我自己画出来的一个进化树<br># 载入包
library(treeio)
library(ggtree)
library(tidytree)

#导入树文件
tree &lt;- read.tree("example.nwk")
tree &lt;- drop.tip(tree,"NC_001639.1") # 移除不需要展示的分类单元
#设置根分支长度
tree$root.edge &lt;- 0.3
#获取分类节点编号
tree_tibble &lt;- as_tibble(tree)
node_root &lt;- rev(ancestor(tree,1))[1] #获取根节点编号
node &lt;- child(tree,node_root)[-3] #获取分类节点编号
tree2 &lt;- groupClade(tree,node)

#定义clade名称
dat &lt;- data.frame(node=node,
                  name=c("L1","L2"))
#ggtree可视化
p &lt;- ggtree(tree2,
       aes(color=group), #映射分组信息
       branch.length = "none",
       size=1)+ #分支粗细
     geom_tiplab(size=3,color="purple",offset = 0.2)+ #叶节点字体大小与颜色
     geom_tippoint(size=2)+ #给叶节点添加圆点
     geom_cladelab(data = dat, #添加clade分类数据
                   mapping = aes(node=node,label=name),
                   offset=1, #线条与分类单元文本之间的距离
                   offset.text=0.02, #线条与clade文本之间的距离
                   geom="label", #为clade文本添加背景
                   fill="lightblue", #clade文本背景颜色
                   fontsize=3.5, #clade文本字体大小
                   barsize=0.7, #线条粗细,align参数即是否对齐
                   align=T,
                   barcolor="grey")+#线条颜色
     geom_rootedge()+ #添加根分支图层
     theme_tree("#FEE4E9")+ #设置主题
     theme(legend.position = "none") #去除图例
p

#保存进化树图片
ggsave(p,file="plot1.png",width = 8,height = 12)
复制<br><img src="https://pic1.zhimg.com/v2-945173fc8c08dfdba507a60d9202db10_b.jpg" referrerpolicy="no-referrer"><br><br>在得到上面的树后，如果我们想要调换某个分支的展示顺序，只需要简单地通过rotate函数即可完成，比如我对上图的节点20对应的分支调换展示顺序：<br>rotate(p,20)
复制<br><img src="https://pic3.zhimg.com/v2-616a9c36cbcc2013845e34d1c8a5de66_b.jpg" referrerpolicy="no-referrer"><br>二、我们还可以将进化树结果与多序列比对结果放在同一张图中进行展示，多序列比对结果（example.fas）我们已经从步骤3.3得到<br>#载入需要的包
library(treeio)
library(ggtree)
library(tidytree)

#导入Newick树文件与多序列比对FASTA文件
tree &lt;- read.tree("example.nwk")
msa &lt;- read.fasta("example.fas")

#因为read.fasta函数导入多序列比对结果后_会识别为空格，因此需要先将空格转换为_，否则会导致无法与进化树的分类单元名匹配而绘图失败。
library(stringr)
names(msa) &lt;- str_replace(names(msa)," ","_")

#先绘制进化树
p1 &lt;- ggtree(tree,branch.length = "none")+geom_tiplab(size=2)

#然后用msaplot函数将两个结果绘制在一起
msaplot(p1,msa,
        offset = 3,width = 2) # offset为多序列比对结果与进化树之间的距离
复制<br><img src="https://pic2.zhimg.com/v2-bedad01b14de2bfed5fea90977a308dd_b.jpg" referrerpolicy="no-referrer"><br>最后，进化树的可视化就完成了，上面只展示了一部分比较基础的绘图方法，想要继续绘制更多高级的好看的图形还是需要自己去看书学习。]]></description><link>软件操作\分析原理\mega多序列比对及建树（nj）.html</link><guid isPermaLink="false">软件操作/分析原理/MEGA多序列比对及建树（NJ）.md</guid><pubDate>Fri, 26 Jan 2024 07:45:53 GMT</pubDate><enclosure url="https://pic2.zhimg.com/v2-d9b0f011dc2aef918cb58db521087cf5_b.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src="https://pic2.zhimg.com/v2-d9b0f011dc2aef918cb58db521087cf5_b.jpg"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[PCA原理]]></title><description><![CDATA[ 
 <br>=====================<br>小黑黑讲AI 小黑黑讲AI<br>大家好，今天要讲的内容是，降维算法，PCA主成分分析。<br>PCA主成分分析，全称Principal Component Analysis，是最常用的降维算法。<br><img alt="图片" src="https://image.cubox.pro/cardImg/2024012815534170118/94152.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer"><br>PCA通过投影的方式，将高维的数据映射到低维的空间中。<br>PCA算法可以保证，在所投影的维度上，原数据的信息量最大。<br>因此，通过PCA降维，可以使用较少的数据维度，保留住较多的原始数据特性。<br><br>为了达到降维的目的，PCA可以基于两种思路进行优化，分别是最大可分性和最近重构性。<br>最大可分性是指，样本投影到低维的超平面后，能够尽量的分开。<br><img alt="图片" src="https://image.cubox.pro/cardImg/2024012815534126388/97608.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer"><br>例如，将平面上的数据投影到直线M，明显比投影到直线N，会使样本数据更加分散。<br>最近重构性是指，样本到所投影的低维超平面的距离要尽可能的小。<br><img alt="图片" src="https://image.cubox.pro/cardImg/2024012815534239094/27812.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer"><br>例如，平面上的样本到M的距离是蓝色线段，到N的距离是绿色线段。<br>所有蓝色线段的距离和，小于绿色线段，因此认为M比N好。<br>实际上，基于上述两种思路，最终都可以推导出相同的目标函数：<br><img alt="图片" src="https://image.cubox.pro/cardImg/2024012815534297204/18013.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer"><br>也就是无论使用哪一种思路，都可以实现PCA降维算法。<br>接下来，我们会使用一个具体的例子，来说明PCA算法，是如何找出样本的主成分，实现特征降维的。<br><br>已知平面上有6个样本，每个样本包括x1和x2两个特征：<br><img alt="图片" src="https://image.cubox.pro/cardImg/2024012815534284324/43522.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer"><br>计算这两个特征的平均值，标记为红色叉子。<br>然后根据红色叉子，画出蓝色叉子，代表6个样本的中心位置：<br><img alt="图片" src="https://image.cubox.pro/cardImg/2024012815534279275/72321.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer"><br>我们将6个样本和中心红色叉子，一起向坐标轴的原点移动。<br>在移动时，各个样本的相对位置保持不变，最终使得蓝色叉子与坐标轴原点红色圆圈重合。<br><img alt="图片" src="https://image.cubox.pro/cardImg/2024012815534314282/18397.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer"><br>这种使样本中心与坐标轴原点重合的过程，被称为去中心化。<br>去中心化不会影响样本的分布性质，但会简化后续PCA降维算法的推导过程。<br><br>思考下面这个问题：<br>如果只使用一个维度，如何才能最合理的描述出样本的分布状况呢？<br>一个维度就是一条直线。<br>画出任意一条过原点的直线，我们要通过该直线提取样本的成分：<br><img alt="图片" src="https://image.cubox.pro/cardImg/2024012815534316033/25680.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer"><br>而提取样本成分，就是将样本投影到这条直线上，通过投影点来描述样本中的成分。<br>在投影的过程中，将直线旋转：<br><img alt="图片" src="https://image.cubox.pro/cardImg/2024012815534424856/24362.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer"><br>这时会发现样本到直线的距离与投影点到原点的距离，会随旋转而变化。<br>很明显，如果样本到直线的距离小，或者投影点到原点的距离大，那么直线上的投影点就能更好的描述样本的分布情况。<br>而样本到直线的距离小就对应最近重构性，投影点到原点的距离大对应最大可分性。<br>单独来看某一个样本：<br><img alt="图片" src="https://image.cubox.pro/cardImg/2024012815534557160/17985.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer"><br>设它到原点的距离是a，到直线的距离是b，投影点到原点的距离是c。<br>根据勾股定理，a平方等于b平方加c平方。<br>由于样本到原点的距离不随直线变化，因此b平方加c平方的和是固定的。<br><img alt="图片" src="https://image.cubox.pro/cardImg/2024012815534599326/83643.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer"><br>这里可以发现，b的增大会使c减小，b的减小会使c增大。<br>因此，优化样本到直线的距离最小和优化投影点到原点的距离最大，这两种方式是等价的，而后者（最大可分性）更容易进行数学推导。<br><br>投影点到原点的距离最大，代表了在新的维度下，样本的方差最大。<br><br>设d1到d6为投影点到原点的距离。<br><img alt="图片" src="https://image.cubox.pro/cardImg/2024012815534559350/87705.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer"><br>我们要求出d1平方加d2平方一直加到d6平方，这个距离取最大值时，红色直线的参数。<br>当求出这条直线后，就称这条直线为主成分1，也就是PC1。<br>观察PC1，设PC1的斜率是1/4：<br><img alt="图片" src="https://image.cubox.pro/cardImg/2024012815534518039/46371.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer"><br>它代表样本随着特征x1向外移动4个单位，就会随着特征x2向外移动1个单位。<br>这也说明了x1比x2更影响特征的分布。<br><br>当完成PC1的提取后，可以继续提取PC2，它是描述样本分布的另一个维度：<br><img alt="图片" src="https://image.cubox.pro/cardImg/2024012815534512205/60848.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer"><br>为了使PC2表示出最多的信息，它需要和PC1完全独立。<br>因此，需要再找一条垂直于PC1的直线来描述样本。<br>因为样本只有两维特征，所以在平面上只有一条垂直于PC1的直线，这样就将PC2直接求出来了。<br>我们将样本在PC1和PC2上的投影都标记出来，旋转PC1到水平的位置：<br><img alt="图片" src="https://image.cubox.pro/cardImg/2024012815534672458/52546.jpg?imageMogr2/quality/90/ignore-error/1" referrerpolicy="no-referrer"><br>就完成了PCA主成分分析。<br>我们可以将主成分PC1与PC2，看做是一个新的坐标系。<br>通过新的坐标系，重新表示样本。<br><br>总结来说，N维空间中的样本可以分解出N个主成分。<br>我们通过优先选择方差最大的主成分，从而实现降维这一目标。<br>那么到这里，降维算法，PCA主成分分析就讲完了，感谢大家的观看，我们下节课再会。<br><a data-tooltip-position="top" aria-label="https://cubox.pro/my/card?id=7151186812159918089" rel="noopener" class="external-link" href="https://cubox.pro/my/card?id=7151186812159918089" target="_blank">跳转到 Cubox 查看</a>]]></description><link>软件操作\分析原理\pca原理.html</link><guid isPermaLink="false">软件操作/分析原理/PCA原理.md</guid><pubDate>Sun, 28 Jan 2024 08:54:35 GMT</pubDate><enclosure url="https://image.cubox.pro/cardImg/2024012815534170118/94152.jpg?imageMogr2/quality/90/ignore-error/1" length="0" type="false"/><content:encoded>&lt;figure&gt;&lt;img src="https://image.cubox.pro/cardImg/2024012815534170118/94152.jpg?imageMogr2/quality/90/ignore-error/1"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[科研配色  10色]]></title><description><![CDATA[ 
 <br>作者：地球很高级<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXSZEiciawWsAOcjR1w6hv1tPDlQQfbxcVdJRPwRY8JTegdvXfYKj8Fhkg/640?wx_fmt=png&amp;wxfrom=13" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>0780cf - 765005 - fa6d1d - 0e2c82 - b6b51f - da1f18 - 701866 - f47a75 - 009db2 - 024b51 - 0780cf - 765005<br>系列色——RGB颜色值：<br>（7,128,207）-（118,80,5）-（250,109,29）-（14,44,130）-（182,181,31）-（218,31,24）-（112,24,102）-（244,122,117）-（0,157,178）-（2,75,81）-（7,128,207）-（118,80,5）<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXz2YdmW21aGECEnokE8aoLACdm5CvoHbwQHaqbSmVUgWzScaZWHl1NA/640?wx_fmt=png&amp;wxfrom=13" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>63b2ee - 76da91 - f8cb7f - f89588 - 7cd6cf - 9192ab - 7898e1 - efa666 - eddd86 - 9987ce - 63b2ee - 76da91<br>系列色——RGB颜色值：<br>（99,178,238）-（118,218,145）-（248,203,127）-（248,149,136）-（124,214,207）-（145,146,171）-（120,152,225）-（239,166,102）-（237,221,134）-（153,135,206）-（99,178,238）-（118,218,145）<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXEueWdKvsYS5DwibKK7JxibgJI9DTo9Os5ZT0fXq9SoWicYDhvQt3H4tDw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>71ae46 - 96b744 - c4cc38 - ebe12a - eab026 - e3852b - d85d2a - ce2626 - ac2026 - 71ae46 - 96b744 - c4cc38<br>系列色——RGB颜色值：<br>（113,174,70）-（150,183,68）-（196,204,56）-（235,225,42）-（234,176,38）-（227,133,43）-（216,93,42）-（206,38,38）-（172,32,38）-（113,174,70）-（150,183,68）-（196,204,56）<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXktCtk8yuQsWcPcVULKalK92FRFkL4Dhlc8ozD68RCvnfs8xStk45zQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>00a8e1 - 99cc00 - e30039 - fcd300 - 800080 - 00994e - ff6600 - 808000 - db00c2 - 008080 - 0000ff - c8cc00<br>系列色——RGB颜色值：<br>（0,168,225）-（153,204,0）-（227,0,57）-（252,211,0）-（128,0,128）-（0,153,78）-（255,102,0）-（128,128,0）-（219,0,194）-（0,128,128）-（0,0,255）-（200,204,0）<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXpFkAEPjKfGargmIhx0y3fZyMZUNcKliaGsmgm80sfxicfEyE4qOd4GXg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>3b6291 - 943c39 - 779043 - 624c7c - 388498 - bf7334 - 3f6899 - 9c403d - 7d9847 - 675083 - 3b8ba1 - c97937<br>系列色——RGB颜色值：<br>（59,98,145）-（148,60,57）-（119,144,67）-（98,76,124）-（56,132,152）-（191,115,52）-（63,104,153）-（156,64,61）-（125,152,71）-（103,80,131）-（59,139,161）-（201,121,55）<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhX7qr8zIzkIwSLbzaEGr2iaibYtMtcyeS3LibxZfVZ5F3taJHXpN6CDv57A/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>194f97 - 555555 - bd6b08 - 00686b - c82d31 - 625ba1 - 898989 - 9c9800 - 007f54 - a195c5 - 103667 - f19272<br>系列色——RGB颜色值：<br>（25,79,151）-（85,85,85）-（189,107,8）-（0,104,107）-（200,45,49）-（98,91,161）-（137,137,137）-（156,152,0）-（0,127,84）-（161,149,197）-（16,54,103）-（241,146,114）<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXUJ7NEzIKkJtBZg4WicoHdmeHwvxXCgk0EjpibcZ9LW9buqWbTwf3dMew/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>0e72cc - 6ca30f - f59311 - fa4343 - 16afcc - 85c021 - d12a6a - 0e72cc - 6ca30f - f59311 - fa4343 - 16afcc<br>系列色——RGB颜色值：<br>（14,114,204）-（108,163,15）-（245,147,17）-（250,67,67）-（22,175,204）-（133,192,33）-（209,42,106）-（14,114,204）-（108,163,15）-（245,147,17）-（250,67,67）-（22,175,204）<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXBKh8DzsxVQiaxX4iacic8nbUvQJ76zjIMKR1mkEutqkYtwWiaVOaicYZQVQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>3682be - 45a776 - f05326 - eed777 - 334f65 - b3974e - 38cb7d - ddae33 - 844bb3 - 93c555 - 5f6694 - df3881<br>系列色——RGB颜色值：<br>（54,130,190）-（69,167,118）-（240,83,38）-（238,215,119）-（51,79,101）-（179,151,78）-（56,203,125）-（221,174,51）-（132,75,179）-（147,197,85）-（95,102,148）-（223,56,129）<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXZicZKQJpshVZCDaicUWzgE1yGrtt3oQia2vw04XXERC8uzqafUhM8TK8A/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>5b9bd5 - ed7d31 - 70ad47 - ffc000 - 4472c4 - 91d024 - b235e6 - 02ae75<br>系列色——RGB颜色值：<br>（91,155,213）-（237,125,49）-（112,173,71）-（255,192,0）-（68,114,196）-（145,208,36）-（178,53,230）-（2,174,117）<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhX5VU8IVObic6pBERxuRibkPPZS9DA2LiaZScqvN0ow8A2wfuwcYicwkmeCg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>95a2ff - fa8080 - ffc076 - fae768 - 87e885 - 3cb9fc - 73abf5 - cb9bff - 434348 - 90ed7d - f7a35c - 8085e9<br>系列色——RGB颜色值：<br>（149,162,255）-（250,128,128）-（255,192,118）-（250,231,104）-（135,232,133）-（60,185,252）-（115,171,245）-（203,155,255）-（67,67,72）-（144,237,125）-（247,163,92）-（128,133,233）<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXiaqkAMxteUbVFzJrphMWcoxleOSYtej5P6c4U04jTE5vrTChuquu8TQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>002c53 - ffa510 - 0c84c6 - ffbd66 - f74d4d - 2455a4 - 41b7ac<br>系列色——RGB颜色值：<br>（0,44,83）-（255,165,16）-（12,132,198）-（255,189,102）-（247,77,77）-（36,85,164）-（65,183,172）<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhX7FRwV1jprj8Tia5DQFKPE0ia8Bw878tpZlqTzQTkWia7J2rAug6iaTictlQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>fa2c7b - ff38e0 - ffa235 - 04c5f3 - 0066fe - 8932a5 - c90444 - cb9bff - 434348 - 90ed7d - f7a35c - 8085e9<br>系列色——RGB颜色值：<br>（250,44,123）-（255,56,224）-（255,162,53）-（4,197,243）-（0,102,254）-（137,50,165）-（201,4,68）-（203,155,255）-（67,67,72）-（144,237,125）-（247,163,92）-（128,133,233）<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXgianZ82fJpmjG1O3tR0dnay9AHLVibmDDq9k4tklXJIEMeYweBVsFib1A/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>05f8d6 - 0082fc - fdd845 - 22ed7c - 09b0d3 - 1d27c9 - f9e264 - f47a75 - 009db2 - 024b51- 0780cf - 765005<br>系列色——RGB颜色值：<br>（5,248,214）-（0,130,252）-（253,216,69）-（34,237,124）-（9,176,211）-（29,39,201）-（249,226,100）-（244,122,117）-（0,157,178）-（2,75,81）-（7,128,207）-（118,80,5）<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXx9n4hyTj1kU3VCe4cfVDoyUzxLMNsVw9asMHj2Jyu9iadS3tvBCksMQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>e75840 - a565ef - 628cee - eb9358 - d05c7c - bb60b2 - 433e7c - f47a75 - 009db2 - 024b51- 0780cf - 765005<br>系列色——RGB颜色值：<br>（231,88,64）-（165,101,239）-（98,140,238）-（235,147,88）-（208,92,124）-（187,96,178）-（67,62,124）-（244,122,117）-（0,157,178）-（2,75,81）-（7,128,207）-（118,80,5）<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXfooITAxQmB9Yne45ic51PqyjBdia9qkY1pViaeJkTxP4psCbial19vwzbg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>ef4464 - fad259 - d22e8d - 03dee0 - d05c7c - bb60b2 - 433e7c - f47a75 - 009db2 - 024b51- 0780cf - 765005<br>系列色——RGB颜色值：<br>（239,68,100）-（250,210,89）-（210,46,141）-（3,222,224）-（208,92,124）-（187,96,178）-（67,62,124）-（244,122,117）-（0,157,178）-（2,75,81）-（7,128,207）-（118,80,5）<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhX4Y2K3Djp2VfWTX4qsSfIdR2DUiatrmhiaOMsUuMA6Zomg4yjMq0WaImg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>929fff - 9de0ff - ffa897 - af87fe - 7dc3fe - bb60b2 - 433e7c - f47a75 - 009db2 - 024b51- 0780cf - 765005<br>系列色——RGB颜色值：<br>（146,159,255）-（157,224,255）-（255,168,151）-（175,135,254）-（125,195,254）-（187,96,178）-（67,62,124）-（244,122,117）-（0,157,178）-（2,75,81）-（7,128,207）-（118,80,5）<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhX8F7csWjwbjDPiaX4sbmPcNtKe0ibsaT5D1jaHDjfsMtrTXNj4gc2xtYQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>50c48f - 26ccd8 - 3685fe - 9977ef - f5616f - f7b13f - f9e264 - f47a75 - 009db2 - 024b51- 0780cf - 765005<br>系列色——RGB颜色值：<br>（80,196,143）-（38,204,216）-（54,133,254）-（153,119,239）-（245,97,111）-（247,177,63）-（249,226,100）-（244,122,117）-（0,157,178）-（2,75,81）-（7,128,207）-（118,80,5）<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXMe81Rvc1M4UlhDgwpJBqyrzNq5508I5RWyRnaGcY4R5bVzNsdxvgLA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>bf19ff - 854cff - 5f45ff - 02cdff - 0090ff - 314976 - f9e264 - f47a75 - 009db2 - 024b51- 0780cf - 765005<br>系列色——RGB颜色值：<br>（191,25,255）-（133,76,255）-（95,69,255）-（2,205,255）-（0,144,255）-（49,73,118）-（249,226,100）-（244,122,117）-（0,157,178）-（2,75,81）-（7,128,207）-（118,80,5）<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXFtAog15fa3s00spYWdgcflIDp3sFhHrHDfyQicpNMskoZVt6XBibx2kA/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>45c8dc - 854cff - 5f45ff - 47aee3 - d5d6d8 - 96d7f9 - f9e264 - f47a75 - 009db2 - 024b51- 0780cf - 765005<br>系列色——RGB颜色值：<br>（69,200,220）-（133,76,255）-（95,69,255）-（71,174,227）-（213,214,216）-（150,215,249）-（249,226,100）-（244,122,117）-（0,157,178）-（2,75,81）-（7,128,207）-（118,80,5）<br><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXrMtLzia62jNAvCnPI3icz1cD2tvavp2XiaIpuiaLk5jud6N8sf9AXTsJsQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>系列色——十六进制颜色码：<br>9489fa - f06464 - f7af59 - f0da49 - 71c16f - 2aaaef - 5690dd - bd88f5 - 009db2 - 024b51- 0780cf - 765005<br>系列色——RGB颜色值：<br>（148,137,250）-（240,100,100）-（247,175,89）-（240,218,73）-（113,193,111）-（42,170,239）-（86,144,221）-（189,136,245）-（0,157,178）-（2,75,81）-（7,128,207）-（118,80,5）<br>还有下面的图<br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXKNRShBBE0Dia1n7MASbHowSK1gyrdcpYfsDENTBpOPr91Xhae80OYOw/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhX9wL4WszS8nRLTdO7xEVXibgMGKcT90tmkocXBSEWNk3DKlPzqCt9lRQ/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXR3knl1KLShz3MLRlZbp113RdB8dHSNrS5zClOYxas9KVwgqeSBHxAg/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXT2XsLXo7X85kfibQvfuyxgLQXRC5RHowovNmibP75pAbSVtNedIhfR8Q/640?wx_fmt=png&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>————————————————<br>版权声明：本文为CSDN博主「minopus」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a rel="noopener" class="external-link" href="https://blog.csdn.net/sinat_41299610/article/details/106912048" target="_blank">https://blog.csdn.net/sinat_41299610/article/details/106912048</a><br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/OB7ib81EAicrTZFoSWrWaF36oz8LZ3kZdMy9ZolWhkQgqt7zicS6MgGHYvKf9BicVnNWJxswWZYlj7TibblZL4fTvNQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&amp;tp=wxpic" referrerpolicy="no-referrer"><br>为了不让您最关心的内容被湮没<br>防止我们一不小心失散<br>快把“地球很高级”设置为星标吧★<br>只需三步↓↓<br>文章顶部点击「地球很高级」名称进入公众号主页，点击右上角「三个小点」，点击「设为星标」，地球很高级名称旁边出现一个黄色的五角星，就设置成功啦~<br><img alt="图片" src="https://mmbiz.qpic.cn/mmbiz_png/eAM2voboIPMgiatDaS2mLcIjv8T03zB7u0Z8LFwPNttaw5qbm1m0ic21wibOHA1qqaQQ1S7sla5A1z8THeSD1MjFQ/640?wx_fmt=png&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&amp;tp=wxpic" referrerpolicy="no-referrer"><br>—END—<br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_jpg/gyiaRbyAO2NaE8t77NmBIverWo91iaQw7sy9iayB26OZSABiaOs8iaOWQaFDI2mh0iauyib1VcmYGovxOrwvo3GLndLxw/640?wx_fmt=jpeg&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&amp;tp=webp" referrerpolicy="no-referrer"><br>阅读&nbsp;4437<br>​<br>喜欢此内容的人还喜欢<br>Nature正刊配色，导师赞口不绝<br>地球很高级<br>不喜欢<br>不看的原因<br>确定<br>
<br>内容低质
<br>不看此公众号内容
<br><img src="https://mmbiz.qpic.cn/sz_mmbiz_jpg/gyiaRbyAO2NZn2RpytHJcmcw4y9C4wyFtkKkJtfSuLxX36eT8kyfZcF7xnBQaXVhT0kYXqTricNNvj5arhZtk1SQ/0?wx_fmt=jpeg" referrerpolicy="no-referrer"><br>二本逆袭，一作发Science正刊<br>地球很高级<br>不喜欢<br>不看的原因<br>确定<br>
<br>内容低质
<br>不看此公众号内容
<br><img src="https://mmbiz.qpic.cn/sz_mmbiz_jpg/gyiaRbyAO2Nb952N4CLicibRsYQt85zXgKO1ZAqfxoPoDzda8kpdCXsRicYdacxnOKRqzHia5dzp1Y1jPOrVJ5va5bA/0?wx_fmt=jpeg" referrerpolicy="no-referrer"><br>我国学者在七大期刊top100名单<br>地球很高级<br>不喜欢<br>不看的原因<br>确定<br>
<br>内容低质
<br>不看此公众号内容
<br><img src="https://mmbiz.qpic.cn/sz_mmbiz_jpg/gyiaRbyAO2Nb6um8Z53cmN6zu3CzCkyLZ6iceUbYrPkkolbUseJYn7tLCx49EWHOeSOeasYJhaMRp7IEf5gdH0Cg/0?wx_fmt=jpeg" referrerpolicy="no-referrer"><br><a data-tooltip-position="top" aria-label="javacript:;" rel="noopener" class="external-link" href="javacript:;" target="_blank"></a><br><img src="http://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NaE8t77NmBIverWo91iaQw7sffz9ibGmvCEALLvjrJHhvGLh1hygM3WiasbbGHUNXfTESNDGpMgn5YuA/300?wx_fmt=png&amp;wxfrom=18" referrerpolicy="no-referrer"><br>地球很高级<br>关注<br>138510]]></description><link>软件操作\绘图配色\科研配色-10色.html</link><guid isPermaLink="false">软件操作/绘图配色/科研配色  10色.md</guid><pubDate>Sat, 31 Aug 2024 07:26:52 GMT</pubDate><enclosure url="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXSZEiciawWsAOcjR1w6hv1tPDlQQfbxcVdJRPwRY8JTegdvXfYKj8Fhkg/640?wx_fmt=png&amp;wxfrom=13" length="0" type="false"/><content:encoded>&lt;figure&gt;&lt;img src="https://mmbiz.qpic.cn/sz_mmbiz_png/gyiaRbyAO2NatnRbyib2kJXb4fTl2PDfhXSZEiciawWsAOcjR1w6hv1tPDlQQfbxcVdJRPwRY8JTegdvXfYKj8Fhkg/640?wx_fmt=png&amp;wxfrom=13"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[科研配色｜第13期 2-5色]]></title><description><![CDATA[ 
 <br><a data-tooltip-position="top" aria-label="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247487999&amp;idx=1&amp;sn=484ba1075d3d14ccf8321bb318883ebe&amp;chksm=c28e8310f5f90a066f7fea10ca5643837cbfd38729114a9030b8077bc6dd58d92562ccd5ffa8&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247487999&amp;idx=1&amp;sn=484ba1075d3d14ccf8321bb318883ebe&amp;chksm=c28e8310f5f90a066f7fea10ca5643837cbfd38729114a9030b8077bc6dd58d92562ccd5ffa8&amp;scene=21#wechat_redirect" target="_blank"><strong></strong></a>1）科研配色 | 第1期. 跟着顶刊选就对了！<br><a data-tooltip-position="top" aria-label="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247488081&amp;idx=1&amp;sn=2679ac1bba33339e02bcd5abf00bfbcb&amp;chksm=c28e80bef5f909a8c2e110a64ca9da2a18e427d6792220945ea7094c589e7cdfc355efdbaacc&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247488081&amp;idx=1&amp;sn=2679ac1bba33339e02bcd5abf00bfbcb&amp;chksm=c28e80bef5f909a8c2e110a64ca9da2a18e427d6792220945ea7094c589e7cdfc355efdbaacc&amp;scene=21#wechat_redirect" target="_blank"><strong></strong></a>2）科研配色 | 第2期. 为不同类型图挑选实用配色方案！<br><a data-tooltip-position="top" aria-label="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247488559&amp;idx=2&amp;sn=f3cf5dedf0d9b9ad67f88e574fc569b3&amp;chksm=c28e86c0f5f90fd6f02b64757c91a590bc0d23f8c1a680a5faea1b1cb80906d035c53aac9877&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247488559&amp;idx=2&amp;sn=f3cf5dedf0d9b9ad67f88e574fc569b3&amp;chksm=c28e86c0f5f90fd6f02b64757c91a590bc0d23f8c1a680a5faea1b1cb80906d035c53aac9877&amp;scene=21#wechat_redirect" target="_blank"><strong></strong></a>3）科研配色 | 第3期. 到底什么配色才能俘获审稿人的“芳心”？！<br><a data-tooltip-position="top" aria-label="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247488878&amp;idx=1&amp;sn=8bbdf5c9f66c5435f3cbc6732cd42d47&amp;chksm=c28e8781f5f90e9700df2ca64f32d92ec1a220408dbf6a3e54fb95804bc0adc9d4342de8787f&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247488878&amp;idx=1&amp;sn=8bbdf5c9f66c5435f3cbc6732cd42d47&amp;chksm=c28e8781f5f90e9700df2ca64f32d92ec1a220408dbf6a3e54fb95804bc0adc9d4342de8787f&amp;scene=21#wechat_redirect" target="_blank"><strong></strong></a>4）科研配色 | 第4期. 为SCI增添高级感的实用配色！<br><a data-tooltip-position="top" aria-label="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247488984&amp;idx=1&amp;sn=da835daadfcef282e87cb2ff47c5925f&amp;chksm=c28e8737f5f90e21912a53d58385777079640ec4b119809d464954ec75a7650e6fa830533ddf&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247488984&amp;idx=1&amp;sn=da835daadfcef282e87cb2ff47c5925f&amp;chksm=c28e8737f5f90e21912a53d58385777079640ec4b119809d464954ec75a7650e6fa830533ddf&amp;scene=21#wechat_redirect" target="_blank"><strong></strong></a>5）科研配色｜ 第5期. CNS科研配色闭眼抄！<br><a data-tooltip-position="top" aria-label="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247489308&amp;idx=1&amp;sn=d50503d3f56c2e4d7610f5c8b13ef47b&amp;chksm=c28e85f3f5f90ce51cc35139d3cdc2a212b71bb8dbca99ea8c932732611e1e48ab07d538a783&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247489308&amp;idx=1&amp;sn=d50503d3f56c2e4d7610f5c8b13ef47b&amp;chksm=c28e85f3f5f90ce51cc35139d3cdc2a212b71bb8dbca99ea8c932732611e1e48ab07d538a783&amp;scene=21#wechat_redirect" target="_blank"><strong></strong></a>6）科研配色 | 第6期：Nature文章中的缤纷nature配色！<br><a data-tooltip-position="top" aria-label="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247489398&amp;idx=1&amp;sn=8a38171dc61d2d8fe9578a50a492081d&amp;chksm=c28e8599f5f90c8f92d65d1fcb0e758b06e25bac6af04559adbe557c5ce3265d60286acd6dec&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247489398&amp;idx=1&amp;sn=8a38171dc61d2d8fe9578a50a492081d&amp;chksm=c28e8599f5f90c8f92d65d1fcb0e758b06e25bac6af04559adbe557c5ce3265d60286acd6dec&amp;scene=21#wechat_redirect" target="_blank"><strong></strong></a>7）科研配色 | 第7期：配色丰富多，文章少不了，彩调千万种，文采自然高<br><a data-tooltip-position="top" aria-label="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247489656&amp;idx=1&amp;sn=ac4a68a222ba74696fdb339c5e7884db&amp;chksm=c28e8a97f5f903819367b03595ff44f865a2cf9b635f86e71cfc82bb32320631afeb27cb0e26&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247489656&amp;idx=1&amp;sn=ac4a68a222ba74696fdb339c5e7884db&amp;chksm=c28e8a97f5f903819367b03595ff44f865a2cf9b635f86e71cfc82bb32320631afeb27cb0e26&amp;scene=21#wechat_redirect" target="_blank"><strong></strong></a>8）科研配色｜第8期. 审稿人爱的配色这里都有！<br><a data-tooltip-position="top" aria-label="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247489897&amp;idx=1&amp;sn=2a37065be26a9d1dad7f3fdecbd59a25&amp;chksm=c28e8b86f5f902900679ed2470f9da3f9c56f62816a6945896778f212e5a6f09f385844c6f51&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247489897&amp;idx=1&amp;sn=2a37065be26a9d1dad7f3fdecbd59a25&amp;chksm=c28e8b86f5f902900679ed2470f9da3f9c56f62816a6945896778f212e5a6f09f385844c6f51&amp;scene=21#wechat_redirect" target="_blank"><strong></strong></a>9）科研配色 | 第9期. 如何利用配色让论文脱颖而出？<br><a data-tooltip-position="top" aria-label="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247489999&amp;idx=1&amp;sn=374285208a4e858f599218280b30106c&amp;chksm=c28e8b20f5f90236cf87481f22ce06dc4b3b8303bf3b8d2b69dabc374010996f07795a7054b2&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247489999&amp;idx=1&amp;sn=374285208a4e858f599218280b30106c&amp;chksm=c28e8b20f5f90236cf87481f22ce06dc4b3b8303bf3b8d2b69dabc374010996f07795a7054b2&amp;scene=21#wechat_redirect" target="_blank"><strong></strong></a>10）科研配色 | 第10期. 配色需要提前收藏！<br><a data-tooltip-position="top" aria-label="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247490206&amp;idx=1&amp;sn=a16f7a016c40588d12ddc594c98e8ad7&amp;chksm=c28e8871f5f9016705754a19b57d39927c093278065d8f8d2954112a62596b820d7c3c15028f&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247490206&amp;idx=1&amp;sn=a16f7a016c40588d12ddc594c98e8ad7&amp;chksm=c28e8871f5f9016705754a19b57d39927c093278065d8f8d2954112a62596b820d7c3c15028f&amp;scene=21#wechat_redirect" target="_blank"><strong></strong></a>11）科研配色 | 第11期. 可以称之为神的配色大全这里找！<br><a data-tooltip-position="top" aria-label="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247490330&amp;idx=1&amp;sn=60e6e43d6c28ac4b50295eb7aadd4834&amp;chksm=c28e89f5f5f900e364c2a72aed96fb4939e596f2731f2700d801e27d6a5e574b4698d03cf4b4&amp;scene=21#wechat_redirect" rel="noopener" class="external-link" href="http://mp.weixin.qq.com/s?__biz=MzkzNzQxMjQ4MA==&amp;mid=2247490330&amp;idx=1&amp;sn=60e6e43d6c28ac4b50295eb7aadd4834&amp;chksm=c28e89f5f5f900e364c2a72aed96fb4939e596f2731f2700d801e27d6a5e574b4698d03cf4b4&amp;scene=21#wechat_redirect" target="_blank"><strong></strong></a>12）科研配色 | 第12期 科研绘图达人必看：揭秘顶刊的高级配色！<br>01<br>双色配色<br>Scientific Research<br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_jpg/WSCtkibJfFo2xPzDm89uVR18eZpVJgYdMgeuoib3fEYnqfHYQcO4K8GzVQcichRkr5hpWI5ffU8JkxgNbRDqW9n3A/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>02<br>三色配色<br>Scientific Research<br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/WSCtkibJfFo2xPzDm89uVR18eZpVJgYdMquibztPWZts01IJ8oR1Y9w9R1psVHoZd1tvhXLOmJXHsiaJibeSG3HJKQ/640?wx_fmt=png&amp;from=appmsg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_jpg/WSCtkibJfFo2xPzDm89uVR18eZpVJgYdMvK1CzlbkdxCdfDo2mQ1vibJq1bR5bhE1T7YpGicQjuGKcKDFsTuTGjjw/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>03<br>四色配色<br>Scientific Research<br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/WSCtkibJfFo2xPzDm89uVR18eZpVJgYdM7Mm8xdam7seVVs7OUiatwZAhf8kJiby0Z3YiaL7CROqXTHhibebUPDapHQ/640?wx_fmt=png&amp;from=appmsg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/WSCtkibJfFo2xPzDm89uVR18eZpVJgYdMIZhlvLcXuuHljdQ91VT2ZBHhFMO45vMWhar4S5AXkOA88zkepRfWPQ/640?wx_fmt=png&amp;from=appmsg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>04<br>多色配色<br>Scientific Research<br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_png/WSCtkibJfFo2xPzDm89uVR18eZpVJgYdMwkyrbqIVGbRqhhnWxv2bDKdrJdn7ic3MwuXibQJjhjqZTcyru3l0gjnw/640?wx_fmt=png&amp;from=appmsg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br><img alt="图片" src="https://mmbiz.qpic.cn/sz_mmbiz_jpg/WSCtkibJfFo2xPzDm89uVR18eZpVJgYdMUe9fqgzKLpicAFZadpc913T6VpVBAXa5zhQZY8TK7Bbjxr2b3yktW1Q/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" referrerpolicy="no-referrer"><br>参考文献：<br>
<br>Reynaud, K., McGeachy, A.M., Noble, D.et al.&nbsp;Surveying the global landscape of post-transcriptional regulators.&nbsp;Nat Struct Mol Biol&nbsp;30, 740–752 (2023).
<br>2.Diaz-Cuadros, M., Miettinen, T.P., Skinner, O.S.&nbsp;et al.&nbsp;Metabolic regulation of species-specific developmental rates.&nbsp;Nature&nbsp;613, 550–557 (2023).<br>
<br>
Zheng, L., Wu, Z., Yang, Y.et al.&nbsp;Emergent charge order in pressurized kagome superconductor CsV3Sb5.&nbsp;Nature&nbsp;611, 682–687 (2022).&nbsp;

<br>
Heinrich, V.H.A., Vancutsem, C., Dalagnol, R.et al.&nbsp;The carbon sink of secondary and degraded humid tropical forests.&nbsp;Nature&nbsp;615, 436–442 (2023).

]]></description><link>软件操作\绘图配色\科研配色｜第13期-2-5色.html</link><guid isPermaLink="false">软件操作/绘图配色/科研配色｜第13期 2-5色.md</guid><pubDate>Sat, 31 Aug 2024 07:18:14 GMT</pubDate><enclosure url="https://mmbiz.qpic.cn/sz_mmbiz_jpg/WSCtkibJfFo2xPzDm89uVR18eZpVJgYdMgeuoib3fEYnqfHYQcO4K8GzVQcichRkr5hpWI5ffU8JkxgNbRDqW9n3A/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" length="0" type="false"/><content:encoded>&lt;figure&gt;&lt;img src="https://mmbiz.qpic.cn/sz_mmbiz_jpg/WSCtkibJfFo2xPzDm89uVR18eZpVJgYdMgeuoib3fEYnqfHYQcO4K8GzVQcichRkr5hpWI5ffU8JkxgNbRDqW9n3A/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[大cohort文章list]]></title><description><![CDATA[ 
 <br>H3aFRICA：<a rel="noopener" class="external-link" href="https://h3africa.org/index.php/resource/publication-2/" target="_blank">https://h3africa.org/index.php/resource/publication-2/</a><br>荷兰GoNL：<a rel="noopener" class="external-link" href="https://www.nlgenome.nl/menu/main/app-go-nl/publications" target="_blank">https://www.nlgenome.nl/menu/main/app-go-nl/publications</a><br>UK10K：<a rel="noopener" class="external-link" href="https://www.uk10k.org/publications.html" target="_blank">https://www.uk10k.org/publications.html</a><br>UKB：<a rel="noopener" class="external-link" href="https://www.ukbiobank.ac.uk/enable-your-research/publications" target="_blank">https://www.ukbiobank.ac.uk/enable-your-research/publications</a><br>日本&nbsp;NBDC human database：<a rel="noopener" class="external-link" href="https://humandbs.dbcls.jp/en/publications" target="_blank">https://humandbs.dbcls.jp/en/publications</a><br>gnomAD：<a rel="noopener" class="external-link" href="https://gnomad.broadinstitute.org/publications" target="_blank">https://gnomad.broadinstitute.org/publications</a><br>Biobank Japan：<a rel="noopener" class="external-link" href="https://biobankjp.org/publication" target="_blank">https://biobankjp.org/publication</a><br>台湾biobank：<a rel="noopener" class="external-link" href="https://www.twbiobank.org.tw/dtrls.php" target="_blank">https://www.twbiobank.org.tw/dtrls.php</a><br>global biobank，这里面有所有的summary，大家谁有时间可以帮忙整理下：<a rel="noopener" class="external-link" href="https://www.globalbiobankmeta.org/" target="_blank">https://www.globalbiobankmeta.org/</a>]]></description><link>软件操作\数据库\大cohort文章list.html</link><guid isPermaLink="false">软件操作/数据库/大cohort文章list.md</guid><pubDate>Tue, 16 Apr 2024 12:09:10 GMT</pubDate></item><item><title><![CDATA[Ensemble查找chrY]]></title><description><![CDATA[ 
 <br>
<br>按以下要求查找Y，单击Y 
<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402220940919.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>可以获得以下界面，注意是h38版本<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402220942754.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
]]></description><link>软件操作\数据库\ensemble查找chry.html</link><guid isPermaLink="false">软件操作/数据库/Ensemble查找chrY.md</guid><pubDate>Thu, 22 Feb 2024 01:43:36 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402220940919.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402220940919.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[超算常用命令]]></title><description><![CDATA[ 
 <br># 查看任务
squeue

# 查看特定任务
squeue | grep "tree"

# kill掉
scancel id
复制]]></description><link>软件操作\linux命令行\超算常用命令.html</link><guid isPermaLink="false">软件操作/Linux命令行/超算常用命令.md</guid><pubDate>Wed, 14 Aug 2024 07:06:59 GMT</pubDate></item><item><title><![CDATA[处理bam转vcf]]></title><description><![CDATA[ 
 ]]></description><link>软件操作\linux命令行\处理bam转vcf.html</link><guid isPermaLink="false">软件操作/Linux命令行/处理bam转vcf.md</guid><pubDate>Fri, 23 Aug 2024 14:38:51 GMT</pubDate></item><item><title><![CDATA[服务器内存]]></title><description><![CDATA[ 
 <br>
<br>查看服务器内存使用情况
<br>df -h
复制<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409011624008.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>查看自己占用的内存大小
<br>du -sh /home/liuyunhui
复制<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409011625418.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>查看自己目录下所有文件夹的占用内存
<br>du -sh /home/liuyunhui/*
复制<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409011641208.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>软件操作\linux命令行\服务器内存.html</link><guid isPermaLink="false">软件操作/Linux命令行/服务器内存.md</guid><pubDate>Sun, 01 Sep 2024 08:41:15 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409011624008.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409011624008.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[监控和kill掉进程]]></title><description><![CDATA[ 
 <br># 寻找该脚本
ps aux | grep "bash -c"


# 看某个PID的进程
ps -p &lt;PID&gt;
ps -f -p 1760414

# kill
kill 3576734

# 检验是否kill掉
ps -p 3576734

复制]]></description><link>软件操作\linux命令行\监控和kill掉进程.html</link><guid isPermaLink="false">软件操作/Linux命令行/监控和kill掉进程.md</guid><pubDate>Wed, 11 Sep 2024 09:02:11 GMT</pubDate></item><item><title><![CDATA[列出所有文件并计数]]></title><description><![CDATA[ 
 <br>ls *bam |wc -l
复制<br>find . -type f -name "*.bam" | wc -l
复制]]></description><link>软件操作\linux命令行\列出所有文件并计数.html</link><guid isPermaLink="false">软件操作/Linux命令行/列出所有文件并计数.md</guid><pubDate>Tue, 16 Jul 2024 13:57:44 GMT</pubDate></item><item><title><![CDATA[清屏]]></title><description><![CDATA[ 
 <br>ctrl+L]]></description><link>软件操作\linux命令行\清屏.html</link><guid isPermaLink="false">软件操作/Linux命令行/清屏.md</guid><pubDate>Mon, 15 Jul 2024 12:23:13 GMT</pubDate></item><item><title><![CDATA[三种引号：反、单和双]]></title><description><![CDATA[ 
 <br><br>反引号  ( 通常位于键盘的 Esc 键下方) 在 Bash 和其他 Unix-like shell 中主要用于命令替换。这意味着你可以使用反引号来执行一个命令，并将它的输出嵌入到另一个命令或字符串中。<br><br>
<br>命令替换：反引号内的命令会被执行，其输出会替换原来的位置。例如：
<br>echo `date`
复制<br>这个命令会输出当前日期和时间，因为 date 命令在反引号中被执行，其输出替代了原来的 `date`。<br>
<br>嵌入命令：反引号让你可以在较大的命令或文本中嵌入小的命令。例如，创建一个以当前日期命名的文件夹：
<br>mkdir `date +%Y-%m-%d` 
复制<br>这将创建一个以当前日期（如 2024-07-15）为名称的文件夹。<br><br>虽然反引号广泛用于早期的 shell 脚本中，但现代脚本推荐使用 $() 来进行命令替换，原因包括：<br>
<br>可读性：$() 比反引号更易于阅读，尤其是在脚本中或当命令很长时。<br>

<br>易于嵌套：$() 可以更容易地嵌套。例如，获取某个命令的输出并对该输出再次运行命令：
<br>echo $(date -d "$(date +%Y-%m-01) +1 month -1 day")
复制<br>这个命令输出当前月份的最后一天。使用反引号来实现相同的功能会更复杂且难以阅读。<br>
<br>逃避问题：反引号可能导致逃避字符和引号处理上的困难，而 $() 在这方面处理得更好。<br>

<br>总结来说，反引号在 Bash 脚本中仍然有效，但现代做法倾向于使用 $()，因为它提供了更好的可读性和灵活性<br><br>单引号用于创建一个精确的字符串，shell 不会对其中的任何内容进行特殊处理。这意味着：<br>
<br>变量扩展：在单引号内的变量不会被扩展。例如，echo '$PATH' 会字面输出字符串 $PATH，而不是环境变量 PATH 的值。
<br>命令替换：在单引号中的命令不会被执行。例如，echo 'date' 会输出字符串 date，而不是当前日期。
<br>转义字符：除单引号本身外，所有的特殊字符（如 \n 或 \t）都不会被特殊解释，它们都将按字面意义输出。
<br><br>双引号允许部分处理字符串内的数据，具体包括：<br>
<br>变量扩展：在双引号内的变量会被扩展成对应的值。例如，echo "$PATH" 会输出环境变量 PATH 的实际值。
<br>命令替换：可以在双引号内执行命令替换。例如，echo "$(date)" 会输出当前日期。
<br>转义字符：特殊字符（如 \n 代表换行，\t 代表制表符）会被解释和处理。但是，普通字符前的反斜杠（\）会被解释为字面的反斜杠。
<br><br>
<br>单引号的使用场景：当你需要确保字符串被精确地按照字面意义处理时，使用单引号。这对于处理包含特殊字符的字符串（可能被 shell 解释为命令或变量）特别有用。<br>

<br>双引号的使用场景：当你需要在字符串中包含变量，或者需要处理其中的特殊字符时，使用双引号。这使得字符串可以动态构建，并保留了空格和特殊字符的格式。
]]></description><link>软件操作\linux命令行\三种引号：反、单和双.html</link><guid isPermaLink="false">软件操作/Linux命令行/三种引号：反、单和双.md</guid><pubDate>Mon, 15 Jul 2024 12:34:13 GMT</pubDate></item><item><title><![CDATA[下载安装beagle]]></title><description><![CDATA[ 
 <br>
<br>
在官网下载 tar.gz安装包 <a data-tooltip-position="top" aria-label="https://github.com/beagle-dev/beagle-lib/releases/tag/v4.0.1" rel="noopener" class="external-link" href="https://github.com/beagle-dev/beagle-lib/releases/tag/v4.0.1" target="_blank">Release BEAGLE v4.0.1 · beagle-dev/beagle-lib · GitHub</a>，拖入服务器中

<br>
解压

<br>tar -xzvf beagle-lib-4.0.1.tar.gz
复制<br>
<br>后面步骤参照，从编译到傻逼服务器部分<a rel="noopener" class="external-link" href="http://www.llt.asia/%E8%BD%AF%E4%BB%B6/beast/beast%EF%BC%9A%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%86%85%E8%BF%90%E8%A1%8C.html?mark=BEAST%EF%BC%9A%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%86%85%E8%BF%90%E8%A1%8C" target="_blank">http://www.llt.asia/%E8%BD%AF%E4%BB%B6/beast/beast%EF%BC%9A%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%86%85%E8%BF%90%E8%A1%8C.html?mark=BEAST%EF%BC%9A%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%86%85%E8%BF%90%E8%A1%8C</a>
<br><br>sudo apt-get update
sudo apt-get install cmake build-essential autoconf automake libtool git pkg-config openjdk-11-jdk
复制<br><br>git clone --depth=1 https://github.com/beagle-dev/beagle-lib.git
cd beagle-lib
mkdir build
cd build
复制<br><br><br>不安装在 cuda 中<br>cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME ..
make install
复制<br><br>安装在 cuda 中<br>首先需要安装英伟达驱动：<a data-tooltip-position="top" aria-label="https://developer.nvidia.com/cuda-downloads" rel="noopener" class="external-link" href="https://developer.nvidia.com/cuda-downloads" target="_blank">链接</a><br>
如果安装成功，可以通过&nbsp;nvidia-smi&nbsp;和&nbsp;nvcc --version&nbsp;命令查看。<br>cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME -DBUILD_CUDA=ON -DBUILD_OPENCL=OFF ..
make install
复制<br><br>export LD_LIBRARY_PATH=$HOME/lib:$LD_LIBRARY_PATH
export PKG_CONFIG_PATH=$HOME/lib/pkgconfig:$PKG_CONFIG_PATH
echo 'export LD_LIBRARY_PATH=$HOME/lib:$LD_LIBRARY_PATH' &gt;&gt; ~/.bashrc
echo 'export PKG_CONFIG_PATH=$HOME/lib/pkgconfig:$PKG_CONFIG_PATH' &gt;&gt; ~/.bashrc
source ~/.bashrc
复制<br>如果你使用的是 WSL，那么需要修改一下beagle-lib/CMakeLists.txt：<br>修改前：<br>link_directories(
    ${PROJECT_SOURCE_DIR}/libhmsbeagle
    ${PROJECT_SOURCE_DIR}/libhmsbeagle/CPU
    ${PROJECT_SOURCE_DIR}/libhmsbeagle/GPU
    ${PROJECT_SOURCE_DIR}/libhmsbeagle/JNI
)
复制<br>修改后：<br>link_directories(
    ${PROJECT_SOURCE_DIR}/libhmsbeagle
    ${PROJECT_SOURCE_DIR}/libhmsbeagle/CPU
    ${PROJECT_SOURCE_DIR}/libhmsbeagle/GPU
    ${PROJECT_SOURCE_DIR}/libhmsbeagle/JNI
    /usr/lib/wsl/lib
    /usr/local/cuda/lib64
)
复制<br><br>export LD_LIBRARY_PATH=$HOME/lib:$LD_LIBRARY_PATH
复制<br><br>#!/bin/bash
export PATH=/home/luolintao/SRA_download/sratoolkit.3.1.0-ubuntu64/bin:/home/zhiyongwang/.aspera/cli/bin:/home/bin:/home/guanglinhe/biosoftware/AdmixTools/bin:/home/anaconda3/include:/usr/include:/usr/share/R/include:/home/biosoftware/OpenBLAS:/home/anaconda3/bin:/home/bin:/root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
export LD_LIBRARY_PATH=$HOME/lib:$LD_LIBRARY_PATH
export PERL5LIB="/home/luolintao/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"
export PERL_LOCAL_LIB_ROOT="/home/luolintao/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"
export PERL_MB_OPT="--install_base \"/home/luolintao/perl5\""
export PERL_MM_OPT="INSTALL_BASE=/home/luolintao/perl5"

# 启动 beast
/home/luolintao/BEASTv1.10.4/BEASTv1.10.4/bin/beast -beagle_cpu -beagle_order 1 /home/luolintao/BEASTv1.10.4/BEASTv1.10.4/INPUT/Han_N.xml

复制<br><br>
<br>-beagle_off: 不使用BEAGLE库进行计算。
<br>-beagle: 如果可用，使用BEAGLE库（默认开启）。
<br>-beagle_info: 显示可用的BEAGLE资源信息。
<br>-beagle_order: 设置资源使用顺序。例如，-beagle_order 1意味着使用资源1。
<br>-beagle_instances: 在多个实例之间划分站点模式。
<br>-beagle_CPU: 使用CPU实例进行计算。
<br>-beagle_GPU: 如果可用，使用GPU实例进行计算。
<br>-beagle_SSE: 如果可用，使用SSE扩展进行计算。
<br>-beagle_SSE_off: 禁用SSE扩展。
<br>-beagle_cuda: 如果可用，使用CUDA并行化进行计算。
<br>-beagle_opencl: 如果可用，使用OpenCL并行化进行计算。
<br>-beagle_single: 如果可用，使用单精度计算。
<br>-beagle_double: 如果可用，使用双精度计算。
<br>-beagle_async: 如果可用，使用异步内核。
<br>-beagle_scaling: 指定使用的缩放方案。
<br>-beagle_rescale: 动态缩放时指定重新缩放的频率。
<br><br>beast -beagle_cuda -beagle_order 1 data.xml
复制<br>/to/your/path/beast/bin/beast -beagle_GPU -beagle_SSE /to/your/path/输入文件.xml
复制<br><br>输入命令 /to/your/path/beast/bin/beast -h 可以查看完整的命令行参数，需要注意的几点有<a data-href="1" href="1" class="internal-link" target="_self" rel="noopener">1</a>(<a data-tooltip-position="top" aria-label="http://www.llt.asia/#fn-1-19d4dedccb857110)%EF%BC%9A" rel="noopener" class="external-link" href="http://www.llt.asia/#fn-1-19d4dedccb857110)%EF%BC%9A" target="_blank">http://www.llt.asia/#fn-1-19d4dedccb857110)：</a><br>
<br>
beast 会根据机器的计算资源，来自动的配置线程数，通常情况下，这个线程数会是你的机器能开启的最大线程，所以，除非你十分了解你的机器或希望约束beast 所调用的资源，那么就你不应该设置一个 --threads 参数来约束 beast 所开启的线程数目。

<br>
beast_instances 的作用是给输入文件划分子分区，注意，这是子分区而不是分区，分区是输入文件中定义的，beast 计算程序不会给输入文件划分分区，根据，如果划分了子分区，一般都会导致计算性能的下降。

<br>
beast_order 用来指定各个分区或子分区依次使用哪些计算资源，如果不指定该参数，那么程序将只会调用起一块计算资源。参数就是1,2,3,4这样的自然数，分别对应机器上的第一块CPU（GPU），第二块CPU（GPU）。

<br>
如果输入文件没有分区，那么即使指定了 beagle_order 选项，也无法调用起多块计算资源，这时可以通过beagle_instances划分子分区来强行调用多块资源来进行计算，但是计算效率未必尽如人意。

<br>
如果输入文件有 4 个分区，那么只有指定了 beagle_order 选项，才会调用起多块资源来并行计算。
线粒体 DNA 分区为2，可使用 beagle_order 2

<br>
执行 /to/your/path/beast/bin/beast -beagle_info 可以查看 beast 识别到的机器上的计算资源。

<br>
每次beast开始计算时，都会在执行命令的目录下产生程序的日志输出文件，如果不删除该日志文件来重新计算同一个输入文件，那么会报错说日志文件已存在，这时可以手动删除该文件或添加 -overwrite 参数来强行覆盖原来的日志输出文件。

<br>
查看英伟达显卡显存和利用效率的命令为：nvidia-smi

<br><br><br>Linux 平台 BEAST 安装及调试指南【附安装脚本】 (qiql.net)](<a data-tooltip-position="top" aria-label="https://blog.qiql.net/archives/beast)%EF%B8%8E%5D" rel="noopener" class="external-link" href="https://blog.qiql.net/archives/beast)%EF%B8%8E%5D" target="_blank">https://blog.qiql.net/archives/beast)︎]</a>]]></description><link>软件操作\linux命令行\下载安装beagle.html</link><guid isPermaLink="false">软件操作/Linux命令行/下载安装beagle.md</guid><pubDate>Fri, 23 Aug 2024 01:39:05 GMT</pubDate></item><item><title><![CDATA[aspera下载bam]]></title><description><![CDATA[ 
 <br>
<br>放在后台
<br>nohup /home/zhiyongwang/.aspera/connect/bin/ascp -P33001 -i /home/zhiyongwang/software/aspera01.openssh -QT -l100m -k1 -d aspera01@download.cncb.ac.cn:gsa-human/HRA006574 ./ &gt; aspera_download.log 2&gt;&amp;1 &amp;
复制]]></description><link>软件操作\linux命令行\aspera下载bam.html</link><guid isPermaLink="false">软件操作/Linux命令行/aspera下载bam.md</guid><pubDate>Tue, 16 Jul 2024 06:56:24 GMT</pubDate></item><item><title><![CDATA[awk提取第3列]]></title><description><![CDATA[ 
 <br>awk '{print $3}' NA18507.depth &gt; third_column.txt
复制]]></description><link>软件操作\linux命令行\awk提取第3列.html</link><guid isPermaLink="false">软件操作/Linux命令行/awk提取第3列.md</guid><pubDate>Wed, 31 Jul 2024 08:19:38 GMT</pubDate></item><item><title><![CDATA[Beast服务器安装]]></title><description><![CDATA[ 
 <br><a rel="noopener" class="external-link" href="http://www.llt.asia/%E8%BD%AF%E4%BB%B6/beast/beast%EF%BC%9A%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%86%85%E8%BF%90%E8%A1%8C.html?mark=BEAST%EF%BC%9A%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%86%85%E8%BF%90%E8%A1%8C" target="_blank">http://www.llt.asia/%E8%BD%AF%E4%BB%B6/beast/beast%EF%BC%9A%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%86%85%E8%BF%90%E8%A1%8C.html?mark=BEAST%EF%BC%9A%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%86%85%E8%BF%90%E8%A1%8C</a>]]></description><link>软件操作\linux命令行\beast服务器安装.html</link><guid isPermaLink="false">软件操作/Linux命令行/Beast服务器安装.md</guid><pubDate>Wed, 28 Aug 2024 01:25:21 GMT</pubDate></item><item><title><![CDATA[Cut文本处理工具]]></title><description><![CDATA[ 
 <br>cut [选项]... [文件]...
复制<br><br>
<br>-d：指定字段分隔符，默认为制表符。例如，使用逗号作为分隔符可以设置 -d,。
<br>-f：指定要提取的字段号，字段号从 1 开始。例如，-f1,3 表示提取第一和第三个字段。
<br>-c：按字符位置提取数据。例如，-c1-5 提取每行的第 1 到第 5 个字符。
<br>--complement：提取未被 -c 或 -f 选项指定的部分。
]]></description><link>软件操作\linux命令行\cut文本处理工具.html</link><guid isPermaLink="false">软件操作/Linux命令行/Cut文本处理工具.md</guid><pubDate>Mon, 15 Jul 2024 12:22:32 GMT</pubDate></item><item><title><![CDATA[haplogrouper分单倍群报错]]></title><description><![CDATA[ 
 <br>
<br>
haplogrouper 分单倍群报错<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408141439132.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
原因：原始代码的结构在 shell 中不支持<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408141439998.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
解决：加上 bash<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408141440156.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

]]></description><link>软件操作\linux命令行\haplogrouper分单倍群报错.html</link><guid isPermaLink="false">软件操作/Linux命令行/haplogrouper分单倍群报错.md</guid><pubDate>Wed, 14 Aug 2024 06:40:40 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408141439132.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408141439132.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[linux下载软件Aspera]]></title><description><![CDATA[ 
 <br>
<br>下载
<br>wget https://d3gcli72yxqn2z.cloudfront.net/downloads/connect/latest/bin/ibm-aspera-connect_4.2.12.780_linux_x86_64.tar.gz
复制<br>这条命令使用 wget 工具从指定的URL下载Aspera Connect的安装包。wget 是一个常用的命令行工具，用于从网络下载文件。这里指定的URL是Aspera Connect 3.11.1版本的Linux安装包。<br>
<br>解压
<br>tar -zxvf ibm-aspera-connect_4.2.12.780_linux_x86_64.tar.gz
复制<br>这条命令使用 tar 工具来解压下载的 .tar.gz 文件。选项中的 -z 表示解压gzip压缩的文件，-x 表示解压，-v 表示在解压的过程中显示文件（verbose模式），-f 指定了接下来的文件名。这条命令解压缩文件后，通常会创建一个安装脚本和一些配置文件。<br>
<br>安装
<br>bash ibm-aspera-connect_4.2.12.780_linux_x86_64.sh
复制<br>这条命令使用bash来运行解压后得到的安装脚本。脚本文件名通常包含了Aspera Connect的版本号和适用的Linux版本。执行这个脚本会开始Aspera Connect的安装过程，安装过程可能会包括复制文件到系统目录、创建配置文件等操作。]]></description><link>软件操作\linux命令行\linux下载软件aspera.html</link><guid isPermaLink="false">软件操作/Linux命令行/linux下载软件Aspera.md</guid><pubDate>Tue, 16 Jul 2024 02:28:49 GMT</pubDate></item><item><title><![CDATA[nohup 某个脚本]]></title><description><![CDATA[ 
 <br>
<br>授权
<br>chmod +x HRA005990_donwload.sh
复制<br>
<br>运行
<br>nohup ./HRA005990_donwload.sh &gt; output.log 2&gt;&amp;1 &amp;
复制<br>
<br>查看当前项目
<br>jobs
ps aux | grep 'HRA005990_donwload.sh'
复制<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407161431373.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>kill 掉脚本
<br>kill 212473
复制]]></description><link>软件操作\linux命令行\nohup-某个脚本.html</link><guid isPermaLink="false">软件操作/Linux命令行/nohup 某个脚本.md</guid><pubDate>Wed, 14 Aug 2024 01:18:26 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407161431373.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407161431373.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[sed编辑器]]></title><description><![CDATA[ 
 <br>命令 sed "s/chr//g" 使用了 sed 编辑器，这是一个非常强大的流编辑器，用于对文本进行处理和转换<br><br>
<br>sed：这是调用 sed 程序的命令，代表 stream editor（流编辑器）。<br>

<br>"s/chr//g"：这是传递给 sed 的指令，使用了 sed 的替换功能。

<br>s：表示 substitution（替换），它是 sed 中用来进行文本替换的命令。<br>

<br>chr：这是要被替换的模式。此处，它指的是文本中所有的 "chr" 字符串。<br>

<br>//：这是替换部分，这里它是空的，意味着所有的 "chr" 将被替换为空字符串，即删除。<br>

<br>g：这是一个标志，代表 global，意味着替换将在整个行中进行，而不仅仅是第一次出现的地方。


]]></description><link>软件操作\linux命令行\sed编辑器.html</link><guid isPermaLink="false">软件操作/Linux命令行/sed编辑器.md</guid><pubDate>Mon, 15 Jul 2024 12:36:46 GMT</pubDate></item><item><title><![CDATA[QUAL 值]]></title><description><![CDATA[ 
 <br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407262122826.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>Phred 标准下的质量值，表示在该位点存在突变的可能性;该值越高，则突变的可能性越大;计算方法：Phred 值 = -10 * lg (1-p) ，p 为突变存在的概率。所以（1-p）就是错误率。<br>QC值等于30：这一数值意味着该变异位点有很高的置信度。这通常对应于一个Phred质量分数，表示变异被错误调用的概率为  或0.1%。换句话说，正确调用该变异的概率为99.9%。<br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407262251798.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>GT (Genotype): 0 表示该样本在这个位点的基因型是参考等位基因。基因型编码的可能值通常是：

<br>0 表示参考基因
<br>1 表示变异基因


<br>DP (Depth of Coverage): 3 表示在这个位点测序的覆盖深度为3。这意味着有3个测序读取覆盖了这个位点。<br>

<br>RGQ (Reference Genotype Quality): 99 表示参考基因型的质量分数。这个值越高，表明对参考基因型的信任度越高。质量分数通常是Phred分数，值为99表示在这个位置上被错误调用为变异的概率极低（约为1%）。
<br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407262250348.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>GT (Genotype):

<br>值: 0
<br>含义: 该样本在这个位点的基因型是参考等位基因（即没有变异）。


<br>AD (Allelic Depth):

<br>值: 3,0
<br>含义:

<br>3 表示参考等位基因（REF）的测序深度。
<br>0 表示变异等位基因（ALT）的测序深度。


<br>在这个例子中，参考等位基因有3个测序读取覆盖，而变异等位基因没有任何覆盖。


<br>DP (Depth of Coverage):

<br>值: 3
<br>含义: 该位点的总测序覆盖深度为3。意味着总共有3个测序读取覆盖了这个位点。


<br>GQ (Genotype Quality):

<br>值: 99
<br>含义: 基因型质量分数为99。这个值表示对基因型的置信度非常高，通常使用Phred质量分数表示。99表示该基因型被错误调用的概率极低。


<br>PL (Phred-scaled Likelihoods):

<br>值: 0,106
<br>含义: 不同基因型的Phred-scaled似然值。值越低表示该基因型越可能。

<br>0 表示最可能的基因型是参考等位基因（GT=0）。
<br>106 表示其他基因型（如1）的Phred-scaled似然值。


<br>这个值提供了对不同基因型可能性的评估。0表示最可能的基因型是参考基因型，106表示变异基因型的可能性远低于参考基因型。


<br><br>
<br>AC：（Allele Count）：Alt Allele 的数目（即当前位点等位基因数量）。
<br>
<br>表示变异位点中Alt Allele（非参考等位基因）的总数。
<br>例如，如果一个变异位点在一个样本群体中有3个Alt Allele，AC值为3。
<br>
<br>AN：（Allele Number）：表示 Allele 的总数目。
<br>
<br>表示变异位点中所有样本的等位基因总数，包括参考等位基因和 Alt Allele。
<br>例如，如果在一个双倍体生物的群体中有10个样本，那么该位点的 AN 值为10（样本数）* 2 （每个样本有两个等位基因）= 20。
<br>
<br>AF：（Allele Frequency）：表示 alt Allele 的频率，AF 值=AC 值/AN 值。
]]></description><link>软件操作\linux命令行\vcf基本信息.html</link><guid isPermaLink="false">软件操作/Linux命令行/vcf基本信息.md</guid><pubDate>Wed, 14 Aug 2024 12:30:09 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407262122826.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202407262122826.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[第一部分 将bam文件转化为vcf]]></title><description><![CDATA[ 
 <br><br><br># 移动前缀为list1的bam文件到相应文件夹
while IFS= read -r filename; do
    mkdir -p "$filename"
    mv "${filename}.chrY.bam" "$filename/"
done &lt; list1
复制<br>代码含义：<br>
<br>
while IFS= read -r filename; do

<br>这行代码启动一个 while 循环，读取文件 list1 的每一行。IFS= 设定了内部字段分隔符为空，这样可以防止读取行时对空格进行分割。-r 选项保证读取的内容不会对反斜杠进行特殊处理。读取到的每一行被存储在 filename 变量中。


<br>
mkdir -p "$filename"

<br>这行代码使用 mkdir 命令创建一个目录，目录名由变量 filename 指定。-p 选项确保即使目录已经存在，也不会报错。


<br>
mv "${filename}.chrY.bam" "$filename/"

<br>这行代码使用 mv 命令将文件移动到新创建的目录中。"${filename}.chrY.bam" 表示要移动的文件名，该文件名是由 filename 变量加上后缀 .chrY.bam 组成的。"$filename/" 表示目标目录。


<br>
done &lt; list1

<br>这行代码指定 list1 文件作为 while 循环的输入来源。


<br>总结一下，这段代码的作用是：<br>
<br>从 list1 文件中读取每一行。
<br>创建一个以每行内容命名的目录。
<br>将对应的 .chrY.bam 文件移动到新创建的目录中。
<br><br># 将bam文件中的chrY修改为Y,并得到后缀为Y.bam的文件
for i in $(cat list1); do
    (cd "$i"; samtools view -@ 30 -h "$i.chrY.bam" | sed "s/chr//g" | samtools view -@ 30 -b - &gt; "$i.Y.bam"; cd ..)
done
复制<br>代码含义：<br>
<br>
for i in $(cat list1); do

<br>这行代码启动一个 for 循环，循环读取 list1 文件中的每一行内容。$(cat list1) 读取 list1 文件的内容，并将每一行内容作为循环变量 i。


<br>
(cd "$i";

<br>这部分代码将当前工作目录切换到 i 变量指定的目录。括号 ( ) 表示在一个子 Shell 中执行这些命令，不会影响父 Shell 的当前工作目录。


<br>
samtools view -@ 30 -h "$i.chrY.bam" | sed "s/chr//g" | samtools view -@ 30 -b - &gt; "$i.Y.bam";

<br>这行代码使用 samtools 和 sed 命令对 BAM 文件进行处理：

<br>samtools view -@ 30 -h "$i.chrY.bam" 使用 samtools 工具查看 BAM 文件，-@ 30 指定使用 30 个线程，-h 选项保留头信息。
<br>| sed "s/chr//g" 使用 sed 工具对 BAM 文件中的数据进行处理，去掉所有 chr 字符串。
<br>| samtools view -@ 30 -b - &gt; "$i.Y.bam" 使用 samtools 工具将处理后的数据重新生成 BAM 文件，并输出到新的文件 "$i.Y.bam" 中，-b 选项表示输出 BAM 格式，- 表示从标准输入读取数据。




<br>
cd ..)

<br>这行代码将当前工作目录切换回到上一级目录，与之前的 cd "$i" 配对使用。


<br>
done

<br>这行代码结束 for 循环。


<br>总结一下，这段代码的作用是：<br>
<br>从 list1 文件中读取每个项目名称。
<br>进入每个项目名称对应的目录。
<br>使用 samtools 和 sed 工具处理 BAM 文件，去掉所有 chr 字符串，并生成一个新的 BAM 文件。
<br>处理完成后，返回到上一级目录。
<br><br># 在当前路径下以及其子目录中的所有文件（包括子目录中的文件）中查找以 .Y.bam 为后缀的 BAM 文件，并为它们建立索引
find . -type f -name "*.Y.bam" -execdir samtools index -@ 10 {} \;
复制<br>代码解释：<br>
<br>
find . -type f -name "*.Y.bam"

<br>这部分代码使用 find 命令在当前目录（.）及其子目录中查找所有类型为文件（-type f）且名称匹配模式 *.Y.bam 的文件。也就是说，它会查找所有扩展名为 .Y.bam 的文件。


<br>
-execdir samtools index -@ 10 {} \;

<br>这部分代码使用 -execdir 选项执行命令。-execdir 与 -exec 类似，不同之处在于 -execdir 在每个匹配文件所在的目录中执行命令，而不是在执行 find 命令的当前目录中执行。
<br>samtools index -@ 10 {} 是要执行的命令，samtools index 是用来为 BAM 文件创建索引的工具，-@ 10 指定使用 10 个线程，{} 是 find 命令中表示当前匹配到的文件的占位符。
<br>\; 表示命令的结束。


<br>总结一下，这段代码的作用是：<br>
<br>在当前目录及其子目录中查找所有扩展名为 .Y.bam 的文件。
<br>对每个找到的 .Y.bam 文件，在其所在的目录中使用 samtools index 命令创建索引，使用 10 个线程来加快处理速度。
<br><br># call出gvcf的脚本，命名为wgs.1.sh
rdir=/home/reference
ref=human_g1k_v37.fasta
gatk  --java-options "-Xmx10G -XX:+UseParallelGC"   HaplotypeCaller --emit-ref-confidence GVCF -R  $rdir/$ref -I ${PWD##*/}.Y.bam -pairHMM AVX_LOGLESS_CACHING -L Y -ploidy 1 --native-pair-hmm-threads 1 -O hc.haplo.${PWD##*/}.gvcf.gz -stand-call-conf 10
tabix -p vcf hc.haplo.${PWD##*/}.gvcf.gz
复制<br>第一步代码解释：<br>
<br>
rdir=/home/reference

<br>这行代码定义了一个变量 rdir，指定参考基因组文件所在的目录。


<br>
ref=human_g1k_v37.fasta

<br>这行代码定义了一个变量 ref，指定参考基因组文件的名称。


<br>
gatk --java-options "-Xmx10G -XX:+UseParallelGC" HaplotypeCaller --emit-ref-confidence GVCF -R $rdir/$ref -I ${PWD##*/}.Y.bam -pairHMM AVX_LOGLESS_CACHING -L Y -ploidy 1 --native-pair-hmm-threads 1 -O hc.haplo.${PWD##*/}.gvcf.gz -stand-call-conf 10

<br>这行代码使用 GATK 工具的 HaplotypeCaller 模块对 BAM 文件进行变异检测，并生成 GVCF 文件。

<br>gatk 调用 GATK 工具。
<br>--java-options "-Xmx10G -XX:+UseParallelGC" 设置 Java 虚拟机的选项，-Xmx10G 指定最大堆内存为 10GB，-XX:+UseParallelGC 启用并行垃圾回收。
<br>HaplotypeCaller 指定使用 GATK 的 HaplotypeCaller 模块。
<br>--emit-ref-confidence GVCF 指定输出 GVCF 格式的文件。
<br>-R $rdir/$ref 指定参考基因组文件，路径为 /home/reference/human_g1k_v37.fasta。
<br>-I ${PWD##*/}.Y.bam 指定输入的 BAM 文件，文件名为当前工作目录名加上 .Y.bam（例如，如果当前工作目录是 sample1，则输入文件为 sample1.Y.bam）。
<br>-pairHMM AVX_LOGLESS_CACHING 使用优化的 PairHMM 算法。
<br>-L Y 指定只处理 Y 染色体。
<br>-ploidy 1 指定单倍体。
<br>--native-pair-hmm-threads 1 指定使用 1 个线程进行 PairHMM 计算。
<br>-O hc.haplo.${PWD##*/}.gvcf.gz 指定输出文件的名称，文件名为 hc.haplo. 加上当前工作目录名，加上 .gvcf.gz 后缀（例如，hc.haplo.sample1.gvcf.gz）。
<br>-stand-call-conf 10 设置变异调用的置信度阈值为 10。




<br>
tabix -p vcf hc.haplo.${PWD##*/}.gvcf.gz

<br>这行代码使用 tabix 工具对生成的 GVCF 文件进行索引。

<br>tabix 调用 tabix 工具。
<br>-p vcf 指定输入文件的格式为 VCF。
<br>hc.haplo.${PWD##*/}.gvcf.gz 指定要索引的 GVCF 文件，文件名为之前生成的 GVCF 文件（例如，hc.haplo.sample1.gvcf.gz）。




<br>总结一下，这段脚本的作用是：<br>
<br>使用 GATK 的 HaplotypeCaller 模块对当前工作目录下的 BAM 文件进行变异检测，生成 GVCF 文件。
<br>使用 tabix 工具对生成的 GVCF 文件进行索引。
<br># 对list1中包含的每个目录进行wgs.1.sh操作
cat list1 | xargs -I {} -P 10 bash -c '(cd {} &amp;&amp; bash ../wgs.1.sh &gt; e.haplo.log)'
复制<br>第二步代码解释：<br>
<br>
cat list1

<br>这部分代码使用 cat 命令读取 list1 文件的内容，逐行输出每个目录名称。


<br>
| xargs -I {} -P 10 bash -c '(cd {} &amp;&amp; bash ../wgs.1.sh &gt; e.haplo.log)'

<br>这部分代码将 cat list1 输出的每一行作为输入，传递给 xargs 命令来并行执行任务。

<br>-I {} 指定 xargs 使用 {} 作为占位符，代表从 list1 中读取的每一行。
<br>-P 10 指定 xargs 并行执行任务的数量上限为 10，即最多同时运行 10 个任务。
<br>bash -c '(cd {} &amp;&amp; bash ../wgs.1.sh &gt; e.haplo.log)' 指定要执行的命令：

<br>bash -c 启动一个新的 Bash 子进程执行命令。
<br>(cd {} &amp;&amp; bash ../wgs.1.sh &gt; e.haplo.log) 是实际执行的命令。

<br>cd {} 切换到 list1 文件中指定的目录 {}。
<br>bash ../wgs.1.sh 执行上一级目录中的 wgs.1.sh 脚本。
<br>&gt; e.haplo.log 将脚本的标准输出重定向到 e.haplo.log 文件中。








<br>总结一下，这段代码的作用是：<br>
<br>从 list1 文件中读取每个目录名称。
<br>并行切换到每个目录，并在该目录中执行上一级目录的 wgs.1.sh 脚本。
<br>将脚本的输出保存到相应目录下的 e.haplo.log 文件中。
<br>最多同时运行 10 个任务以提高效率。
<br># 操作完后说索引需要更新，所以用一下代码查找所有.gvcf.gz后缀的文件并更新索引
find . -type f -name "*.gvcf.gz" -exec bash -c 'tabix -f -p vcf "$1" &amp;&amp; echo "索引已更新: $1"' _ {} \;
复制<br>第三步代码解释：<br>
<br>
find . -type f -name "*.gvcf.gz"

<br>这部分代码使用 find 命令在当前目录（.）及其子目录中查找所有类型为文件（-type f）且名称匹配模式 *.gvcf.gz 的文件。也就是说，它会查找所有扩展名为 .gvcf.gz 的文件。


<br>
-exec bash -c 'tabix -f -p vcf "$1" &amp;&amp; echo "索引已更新: $1"' _ {} \;

<br>这部分代码使用 -exec 选项执行命令。
<br>bash -c 'tabix -f -p vcf "$1" &amp;&amp; echo "索引已更新: $1"' 指定要执行的命令是一个 Bash 脚本，内容如下：

<br>tabix -f -p vcf "$1" 使用 tabix 工具为 GVCF 文件创建或更新索引：

<br>-f 强制重新生成索引，即使索引文件已经存在。
<br>-p vcf 指定文件类型为 VCF。
<br>"$1" 是传递给脚本的第一个参数，即当前找到的文件名。


<br>&amp;&amp; 表示如果前一个命令成功，则执行下一个命令。
<br>echo "索引已更新: $1" 输出一条消息，表示索引已更新，并显示文件名。


<br>_ {} 将当前找到的文件名 {} 作为第一个参数传递给 Bash 脚本。


<br>总结一下，这段代码的作用是：<br>
<br>在当前目录及其子目录中查找所有扩展名为 .gvcf.gz 的文件。
<br>对每个找到的 .gvcf.gz 文件，使用 tabix 工具强制创建或更新索引。
<br>创建或更新索引后，输出一条消息表示索引已更新，并显示文件名。
<br><br>rdir=/home/reference
ref=chrY_hs37d5.fa
for i in {00..08}; do
    nohup sh -c "
        gatk --java-options \"-Xmx120G -XX:+UseParallelGC\" CombineGVCFs -R $rdir/$ref \$(ls gvcf_MOVE0425/*vcf.gz | awk '{print \" --variant \" \$1}') -L x${i}.bed -O haplo.mult.hc.g.${i}.vcf.gz &amp;&amp; 
        gatk --java-options \"-Xmx120G -XX:+UseParallelGC\" GenotypeGVCFs -R $rdir/$ref -V haplo.mult.hc.g.${i}.vcf.gz -O haplo.mult.genotype.${i}.vcf.gz
    " &gt; nohup_${i}.out 2&gt;&amp;1 &amp;
done
复制<br>
<br>
rdir=/home/reference

<br>这行代码定义了一个变量 rdir，指定参考基因组文件所在的目录。


<br>
ref=chrY_hs37d5.fa

<br>这行代码定义了一个变量 ref，指定参考基因组文件的名称。


<br>
for i in {00..08}; do

<br>这行代码启动一个 for 循环，循环变量 i 的值从 00 到 08，即包含这 9 个值。


<br>
nohup sh -c " ... " &gt; nohup_${i}.out 2&gt;&amp;1 &amp;

<br>这部分代码使用 nohup 命令在后台执行一个新的 Shell 命令，并将输出重定向到 nohup_${i}.out 文件中。

<br>nohup 命令确保即使终端关闭，命令也会继续运行。
<br>sh -c " ... " 在一个新的 Shell 中执行包含在双引号中的命令。
<br>&gt; nohup_${i}.out 2&gt;&amp;1 将标准输出和标准错误重定向到 nohup_${i}.out 文件中。
<br>&amp; 表示在后台运行该命令。




<br>
gatk --java-options \"-Xmx120G -XX:+UseParallelGC\" CombineGVCFs -R $rdir/$ref \$(ls gvcf_MOVE0425/*vcf.gz | awk '{print \" --variant \" \$1}') -L x${i}.bed -O haplo.mult.hc.g.${i}.vcf.gz

<br>这部分代码使用 GATK 工具的 CombineGVCFs 模块将多个 GVCF 文件合并为一个 VCF 文件。

<br>gatk --java-options \"-Xmx120G -XX:+UseParallelGC\" 调用 GATK 工具，并设置 Java 虚拟机的选项，-Xmx120G 指定最大堆内存为 120GB，-XX:+UseParallelGC 启用并行垃圾回收。
<br>CombineGVCFs 指定使用 GATK 的 CombineGVCFs 模块。
<br>-R $rdir/$ref 指定参考基因组文件，路径为 /home/reference/chrY_hs37d5.fa。
<br>\$(ls gvcf_MOVE0425/*vcf.gz | awk '{print \" --variant \" \$1}') 使用 ls 命令列出目录 gvcf_MOVE0425 中的所有 .vcf.gz 文件，并使用 awk 命令将它们转换为 --variant file 格式的参数列表。
<br>-L x${i}.bed 指定感兴趣的区域文件，文件名为 x${i}.bed。
<br>-O haplo.mult.hc.g.${i}.vcf.gz 指定输出文件的名称，文件名为 haplo.mult.hc.g.${i}.vcf.gz。




<br>
gatk --java-options \"-Xmx120G -XX:+UseParallelGC\" GenotypeGVCFs -R $rdir/$ref -V haplo.mult.hc.g.${i}.vcf.gz -O haplo.mult.genotype.${i}.vcf.gz

<br>这部分代码使用 GATK 工具的 GenotypeGVCFs 模块对合并后的 VCF 文件进行基因型调用。

<br>gatk --java-options \"-Xmx120G -XX:+UseParallelGC\" 调用 GATK 工具，并设置 Java 虚拟机的选项。
<br>GenotypeGVCFs 指定使用 GATK 的 GenotypeGVCFs 模块。
<br>-R $rdir/$ref 指定参考基因组文件。
<br>-V haplo.mult.hc.g.${i}.vcf.gz 指定输入文件为合并后的 VCF 文件。
<br>-O haplo.mult.genotype.${i}.vcf.gz 指定输出文件的名称，文件名为 haplo.mult.genotype.${i}.vcf.gz。




<br>总结一下，这段代码的作用是：<br>
<br>定义参考基因组文件所在的目录和文件名。
<br>使用 for 循环并行处理 9 个任务（编号从 00 到 08）。
<br>每个任务中，首先使用 CombineGVCFs 模块将多个 GVCF 文件合并为一个 VCF 文件，然后使用 GenotypeGVCFs 模块对合并后的 VCF 文件进行基因型调用。
<br>所有任务在后台运行，并将输出日志重定向到相应的文件中。
<br><br><br># 包含未变异位点的分型。将目标文件分成若干个区域，不然速度会很慢，
#写入一个脚本Include_nonvaviants.sh
#!/bin/bash
rdir=/home/reference
ref=human_g1k_v37.fasta
for i in {00..08}; do
    gatk --java-options "-Xmx20G -XX:+UseParallelGC" GenotypeGVCFs -include-non-variant-sites -R $rdir/$ref -L x${i}.bed -V haplo.mult.hc.g.${i}.vcf.gz -O haplo.mult.hc.gall.${i}.vcf.gz &gt; x${i}.log 2&gt;&amp;1
done
#授权
chmod +x Include_nonvaviants.sh
#后台运行
nohup ./Include_nonvaviants.sh &gt; Include_nonvariants.log 2&gt;&amp;1 &amp;
复制<br>代码解释：<br>
<br>
#!/bin/bash

<br>指定使用 Bash 解释器执行脚本。这行必须放在脚本的第一行，告诉操作系统在运行这个脚本时应使用 /bin/bash 解释器。


<br>
rdir=/home/reference

<br>定义一个变量 rdir，指定参考基因组文件所在的目录。


<br>
ref=human_g1k_v37.fasta

<br>定义一个变量 ref，指定参考基因组文件的名称。


<br>
for i in {00..08}; do

<br>启动一个 for 循环，循环变量 i 的值从 00 到 08，即包含这 9 个值。


<br>
gatk --java-options "-Xmx20G -XX:+UseParallelGC" GenotypeGVCFs -include-non-variant-sites -R $rdir/$ref -L x${i}.bed -V haplo.mult.hc.g.${i}.vcf.gz -O haplo.mult.hc.gall.${i}.vcf.gz &gt; x${i}.log 2&gt;&amp;1

<br>使用 GATK 工具的 GenotypeGVCFs 模块进行基因型调用，并包含非变异位点的信息。

<br>gatk --java-options "-Xmx20G -XX:+UseParallelGC" 调用 GATK 工具，并设置 Java 虚拟机的选项。
<br>GenotypeGVCFs 指定使用 GATK 的 GenotypeGVCFs 模块。
<br>-include-non-variant-sites 指定包含非变异位点的信息。
<br>-R $rdir/$ref 指定参考基因组文件，路径为 /home/reference/human_g1k_v37.fasta。
<br>-L x${i}.bed 指定感兴趣的区域文件，文件名为 x${i}.bed。
<br>-V haplo.mult.hc.g.${i}.vcf.gz 指定输入文件为合并后的 VCF 文件。
<br>-O haplo.mult.hc.gall.${i}.vcf.gz 指定输出文件的名称，文件名为 haplo.mult.hc.gall.${i}.vcf.gz。
<br>&gt; x${i}.log 2&gt;&amp;1 将标准输出和标准错误重定向到 x${i}.log 文件中。




<br>
done

<br>结束 for 循环。


<br>
chmod +x Include_nonvaviants.sh

<br>授予脚本 Include_nonvaviants.sh 可执行权限。


<br>
nohup ./Include_nonvaviants.sh &gt; Include_nonvariants.log 2&gt;&amp;1 &amp;

<br>使用 nohup 命令在后台运行脚本 Include_nonvaviants.sh，并将输出重定向到 Include_nonvariants.log 文件中。

<br>nohup 命令确保即使终端关闭，脚本也会继续运行。
<br>./Include_nonvaviants.sh 执行脚本。
<br>&gt; Include_nonvariants.log 2&gt;&amp;1 将标准输出和标准错误重定向到 Include_nonvariants.log 文件中。
<br>&amp; 表示在后台运行该脚本。




<br>总结：<br>
<br>定义参考基因组文件所在的目录和文件名。
<br>使用 for 循环并行处理 9 个任务（编号从 00 到 08）。
<br>每个任务中，使用 GATK 工具的 GenotypeGVCFs 模块对 VCF 文件进行基因型调用，并包含非变异位点的信息。
<br>将每个任务的输出日志重定向到相应的文件中。
<br>授予脚本执行权限，并在后台运行脚本。
<br><br># 去除indel和mnp
for i in {00..08};do nohup  bcftools view --threads 5 -V mnps haplo.mult.hc.gall.$i.vcf.gz  |bcftools view --threads 5 -V indels -o haplo.mult.hc.gall.$i.snps.noindels.vcf &amp;done
复制<br>
<br>
for i in {00..08}; do

<br>启动一个 for 循环，循环变量 i 的值从 00 到 08，即包含这 9 个值。


<br>
nohup bcftools view --threads 5 -V mnps haplo.mult.hc.gall.$i.vcf.gz | bcftools view --threads 5 -V indels -o haplo.mult.hc.gall.$i.snps.noindels.vcf &amp;

<br>使用 nohup 命令在后台运行一系列 bcftools 命令，并将输出重定向。

<br>nohup 确保即使终端关闭，命令也会继续运行。
<br>bcftools view --threads 5 -V mnps haplo.mult.hc.gall.$i.vcf.gz 使用 bcftools view 命令查看 VCF 文件，--threads 5 指定使用 5 个线程，-V mnps 排除多核苷酸多态性（MNPs）。
<br>| 将前一个命令的输出传递给下一个命令作为输入。
<br>bcftools view --threads 5 -V indels -o haplo.mult.hc.gall.$i.snps.noindels.vcf 使用 bcftools view 命令查看过滤后的 VCF 文件，--threads 5 指定使用 5 个线程，-V indels 排除插入和缺失变异（Indels），-o haplo.mult.hc.gall.$i.snps.noindels.vcf 指定输出文件的名称。
<br>&amp; 表示在后台运行该命令。




<br>
done

<br>结束 for 循环。


<br> 总结：<br>
<br>使用 for 循环并行处理 9 个任务（编号从 00 到 08）。
<br>每个任务中，首先使用 bcftools view 命令查看并过滤 VCF 文件，排除多核苷酸多态性（MNPs），然后再次使用 bcftools view 命令查看并过滤插入和缺失变异（Indels），最终将输出结果保存到新的 VCF 文件中。
<br>使用 nohup 确保命令在后台运行，即使终端关闭也不会中断。
<br><br># 去除模糊位点，带* 会影响异质性的过滤
for i in {00..08}; do nohup awk -F'\t' '$5 !~ /\*/ { print }' haplo.mult.hc.gall.$i.snps.noindels.vcf &gt; haplo.mult.hc.gall.$i.snps.noindels.awk.vcf &amp; done
复制<br>
<br>
for i in {00..08}; do

<br>启动一个 for 循环，循环变量 i 的值从 00 到 08，即包含这 9 个值。


<br>
nohup awk -F'\t' '$5 !~ /\*/ { print }' haplo.mult.hc.gall.$i.snps.noindels.vcf &gt; haplo.mult.hc.gall.$i.snps.noindels.awk.vcf &amp;

<br>使用 nohup 命令在后台运行 awk 命令，并将输出重定向。

<br>nohup 确保即使终端关闭，命令也会继续运行。
<br>awk -F'\t' '$5 !~ /\*/ { print }' haplo.mult.hc.gall.$i.snps.noindels.vcf 使用 awk 命令处理 VCF 文件，-F'\t' 指定制表符（Tab）为字段分隔符。

<br>$5 !~ /\*/ 检查第五个字段（通常是 ALT 列）是否不包含 * 字符。
<br>{ print } 对于满足条件的行，打印整行。


<br>&gt; haplo.mult.hc.gall.$i.snps.noindels.awk.vcf 将 awk 命令的输出重定向到新的文件 haplo.mult.hc.gall.$i.snps.noindels.awk.vcf 中。
<br>&amp; 表示在后台运行该命令。




<br>
done

<br>结束 for 循环。


<br>总结：<br>
<br>使用 for 循环并行处理 9 个任务（编号从 00 到 08）。
<br>每个任务中，使用 awk 命令过滤 VCF 文件 haplo.mult.hc.gall.$i.snps.noindels.vcf，排除第五列包含 * 的行。
<br>将过滤后的输出重定向到新的 VCF 文件 haplo.mult.hc.gall.$i.snps.noindels.awk.vcf 中。
<br>使用 nohup 确保命令在后台运行，即使终端关闭也不会中断。
<br><br># 删除多等位基因，否则无法进行下一步去除异质性位点
for i in {00..08}; do nohup awk '$1 ~ /^#/ || $5 !~ /,/' haplo.mult.hc.gall.$i.snps.noindels.awk.vcf &gt; haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.vcf
复制<br>
<br>
for i in {00..08}; do

<br>启动一个 for 循环，循环变量 i 的值从 00 到 08，即包含这 9 个值。


<br>
nohup awk '$1 ~ /^#/ || $5 !~ /,/' haplo.mult.hc.gall.$i.snps.noindels.awk.vcf &gt; haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.vcf

<br>使用 nohup 命令在后台运行 awk 命令，并将输出重定向。

<br>nohup 确保即使终端关闭，命令也会继续运行。
<br>awk '$1 ~ /^#/ || $5 !~ /,/' haplo.mult.hc.gall.$i.snps.noindels.awk.vcf 使用 awk 命令处理 VCF 文件。

<br>$1 ~ /^#/ 检查第一列是否以 # 开头，表示保留 VCF 文件中的注释行。
<br>|| 表示逻辑或。
<br>$5 !~ /,/' 检查第五列（通常是 ALT 列）是否不包含逗号 ,，表示过滤掉多等位基因的记录。


<br>&gt; haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.vcf 将 awk 命令的输出重定向到新的文件 haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.vcf 中。




<br>
done

<br>结束 for 循环。


<br> 总结：<br>
<br>使用 for 循环并行处理 9 个任务（编号从 00 到 08）。
<br>每个任务中，使用 awk 命令处理 VCF 文件 haplo.mult.hc.gall.$i.snps.noindels.awk.vcf，保留注释行和第五列不包含逗号（即非多等位基因）的记录。
<br>将过滤后的输出重定向到新的 VCF 文件 haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.vcf 中。
<br>使用 nohup 确保命令在后台运行，即使终端关闭也不会中断。
<br><br># 去除异质性0.15的位点
for i in {00..08}; do nohup perl /home/zhiyongwang/perl/het.pl haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.vcf haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.vcf $i.output_changed_lines $i.multi_changed_lines $i.multi_out 0.15 &gt;$i.log &amp; done
复制<br>
<br>
for i in {00..08}; do

<br>启动一个 for 循环，循环变量 i 的值从 00 到 08，即包含这 9 个值。


<br>
nohup perl /home/zhiyongwang/perl/het.pl haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.vcf haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.vcf $i.output_changed_lines $i.multi_changed_lines $i.multi_out 0.15 &gt;$i.log &amp;

<br>使用 nohup 命令在后台运行一个 Perl 脚本，并将输出重定向。

<br>nohup 确保即使终端关闭，命令也会继续运行。
<br>perl /home/zhiyongwang/perl/het.pl haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.vcf haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.vcf $i.output_changed_lines $i.multi_changed_lines $i.multi_out 0.15 使用 Perl 解释器运行脚本 het.pl，并传递多个参数。

<br>/home/zhiyongwang/perl/het.pl 指定 Perl 脚本的路径。
<br>haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.vcf 指定输入文件。
<br>haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.vcf 指定输出文件。
<br>$i.output_changed_lines 指定输出更改的行的文件。
<br>$i.multi_changed_lines 指定多变异更改行的文件。
<br>$i.multi_out 指定多变异输出文件。
<br>0.15 指定一个阈值参数，可能用于过滤或判定。


<br>&gt;$i.log 将标准输出重定向到日志文件 $i.log 中。
<br>&amp; 表示在后台运行该命令。




<br>
done

<br>结束 for 循环。


<br>总结：<br>
<br>使用 for 循环并行处理 9 个任务（编号从 00 到 08）。
<br>每个任务中，使用 nohup 在后台运行一个 Perl 脚本 het.pl，处理输入文件 haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.vcf 并生成多个输出文件。

<br>指定输入和输出文件路径，包括更改行的文件、多变异更改行的文件、多变异输出文件和一个阈值参数 0.15。


<br>将命令的输出重定向到日志文件 $i.log 中。
<br>使用 nohup 确保命令在后台运行，即使终端关闭也不会中断。
<br><br># 去除GQ小于30的位点
for i in {00..08}; do nohup awk -F'\t' '$7 !~ /LowQual/ { print }' haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.vcf &gt; haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.GQ30.vcf &amp; done
复制<br>
<br>
for i in {00..08}; do

<br>启动一个 for 循环，循环变量 i 的值从 00 到 08，即包含这 9 个值。


<br>
nohup awk -F'\t' '$7 !~ /LowQual/ { print }' haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.vcf &gt; haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.GQ30.vcf &amp;

<br>使用 nohup 命令在后台运行 awk 命令，并将输出重定向。

<br>nohup 确保即使终端关闭，命令也会继续运行。
<br>awk -F'\t' '$7 !~ /LowQual/ { print }' haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.vcf 使用 awk 命令处理 VCF 文件。

<br>-F'\t' 指定 awk 以制表符（Tab）作为字段分隔符。
<br>$7 !~ /LowQual/ { print } 表示过滤掉第七列包含 LowQual 的行。

<br>$7 表示 VCF 文件的第七列（FILTER列）。
<br>!~ 表示不匹配。
<br>/LowQual/ 表示匹配 LowQual 字符串。
<br>{ print } 表示输出过滤后的行。




<br>&gt; haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.GQ30.vcf 将 awk 命令的输出重定向到新的文件 haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.GQ30.vcf 中。
<br>&amp; 表示在后台运行该命令。




<br>
done

<br>结束 for 循环。


<br> 总结：<br>
<br>使用 for 循环并行处理 9 个任务（编号从 00 到 08）。
<br>每个任务中，使用 nohup 在后台运行 awk 命令，处理 VCF 文件 haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.vcf。

<br>过滤掉第七列（FILTER列）包含 LowQual 的行。
<br>输出过滤后的结果到新的 VCF 文件 haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.GQ30.vcf 中。


<br>使用 nohup 确保命令在后台运行，即使终端关闭也不会中断。
<br><br># 将少于2个read支持的位点转换为缺失,这个脚本是按照上面的het.pl修改过来的，可以看$i.output_changed_line中的内容，就是转换的位点
for i in {00..08}; do nohup perl /home/zhiyongwang/perl/AD2_filter.pl haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.GQ30.vcf haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.GQ30.AD2.vcf $i.output_changed_lines $i.multi_changed_lines $i.multi_out 0.15 &gt;$i.log &amp; done
复制<br>与去除异质性位点 0.15 类似<br><br># 压缩文件
for i in {00..08}; do
    bgzip -c haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.GQ30.AD2.vcf &gt; haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.GQ30.AD2.vcf.gz
done
# 去除东南亚样本,因为东南亚样本位点太少
for file in haplo.mult.hc.gall.*.snps.noindels.nomultiallele.awk.het0.15.GQ30.AD2.vcf.gz
do
  output_file="${file%.vcf.gz}.noSEA.vcf.gz"
  bcftools view -S ^remove.list "$file" -o "$output_file" --threads 50
done
复制<br>因为 bcftools 处理压缩文件，所以先压缩成vcf.gz 文件<br>
东南亚样本位点只有 2 百万个，影响整体过滤，所以去除<br>
<img alt="bb9721a9872d1ff14b41d7b6e2a563f.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405241059254.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br># 按照0.05进行过滤
nohup bash -c '
for i in {00..08}; do
    bcftools view -i "F_MISSING &lt; 0.05" haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.GQ30.AD2.noSEA.vcf.gz -Oz --threads 20 -o haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.GQ30.AD2.noSEA.missing0.05.vcf.gz
done
' &gt; bcftools_0.05.log 2&gt;&amp;1 &amp;
复制<br>
<br>
nohup bash -c ' ... ' &gt; bcftools_0.05.log 2&gt;&amp;1 &amp;

<br>使用 nohup 命令在后台运行一个 bash 脚本，并将输出重定向。

<br>nohup 确保即使终端关闭，命令也会继续运行。
<br>bash -c ' ... ' 启动一个新的 bash 子进程，执行包含在单引号中的脚本。
<br>&gt; bcftools_0.05.log 2&gt;&amp;1 将标准输出和标准错误重定向到 bcftools_0.05.log 文件中。
<br>&amp; 表示在后台运行该命令。




<br>
for i in {00..08}; do

<br>启动一个 for 循环，循环变量 i 的值从 00 到 08，即包含这 9 个值。


<br>
bcftools view -i "F_MISSING &lt; 0.05" haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.GQ30.AD2.noSEA.vcf.gz -Oz --threads 20 -o haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.GQ30.AD2.noSEA.missing0.05.vcf.gz

<br>使用 bcftools 命令对 VCF 文件进行过滤和压缩。

<br>bcftools view -i "F_MISSING &lt; 0.05" 使用 bcftools view 命令过滤 VCF 文件，-i "F_MISSING &lt; 0.05" 表示仅保留缺失率低于 5% 的变异位点。
<br>haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.GQ30.AD2.noSEA.vcf.gz 指定输入的 VCF 文件。
<br>-Oz 指定输出格式为压缩的 VCF 格式（VCF.GZ）。
<br>--threads 20 使用 20 个线程进行处理，以提高处理速度。
<br>-o haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.GQ30.AD2.noSEA.missing0.05.vcf.gz 指定输出文件的名称。




<br>
done

<br>结束 for 循环。


<br>总结<br>
<br>使用 nohup 确保脚本在后台运行，即使终端关闭也不会中断。
<br>启动一个 bash 子进程，执行包含的 for 循环脚本。
<br>使用 for 循环并行处理 9 个任务（编号从 00 到 08）。
<br>每个任务中，使用 bcftools 过滤 VCF 文件 haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.GQ30.AD2.noSEA.vcf.gz，保留缺失率低于 5% 的变异位点。
<br>将过滤后的结果保存为压缩的 VCF 文件 haplo.mult.hc.gall.$i.snps.noindels.nomultiallele.awk.het0.15.GQ30.AD2.noSEA.missing0.05.vcf.gz。
<br>将标准输出和标准错误重定向到日志文件 bcftools_0.05.log 中。
<br><br># 将分开的区域进行合并
#在此之前需要先建立索引
for file in *AD2.noSEA.missing0.05.vcf.gz; do
    bcftools index $file
done
#合并
nohup sh -c 'ls *AD2.noSEA.missing0.05.vcf.gz | xargs bcftools concat -a -d all -Oz -o haplo.mult.hc.gall.all.snps.noindels.nomultiallele.awk.het0.15.GQ30.AD2.noSEA.missing0.05.vcf.gz' &gt; bcftools_all0_8.log 2&gt;&amp;1 &amp;
复制<br>因为 bcftools 进行文件合并（bcftools concat）时，需要快速定位和读取数据，这些操作依赖于索引文件，所以建立索引。<br>
<br>
nohup sh -c '...' &gt; bcftools_all0_8.log 2&gt;&amp;1 &amp;

<br>nohup：确保命令在后台运行，即使终端关闭也不会中断。
<br>sh -c '...'：启动一个新的 shell 执行包含在单引号中的命令。
<br>&gt; bcftools_all0_8.log 2&gt;&amp;1：将标准输出和标准错误重定向到 bcftools_all0_8.log 文件中。
<br>&amp;：在后台运行该命令。


<br>
ls *AD2.noSEA.missing0.05.vcf.gz

<br>列出当前目录中所有匹配 *AD2.noSEA.missing0.05.vcf.gz 模式的文件。


<br>
| xargs bcftools concat -a -d all -Oz -o haplo.mult.hc.gall.all.snps.noindels.nomultiallele.awk.het0.15.GQ30.AD2.noSEA.missing0.05.vcf.gz

<br>|：将 ls 命令的输出传递给 xargs 作为输入。
<br>xargs bcftools concat -a -d all -Oz -o haplo.mult.hc.gall.all.snps.noindels.nomultiallele.awk.het0.15.GQ30.AD2.noSEA.missing0.05.vcf.gz：

<br>xargs：将前一个命令的输出作为参数传递给 bcftools concat 命令。
<br>bcftools concat：使用 bcftools 工具将多个 VCF 文件合并为一个。

<br>-a：合并所有文件中的相同位置的变异。
<br>-d all：在输出文件中保留所有记录。
<br>-Oz：输出压缩的 VCF 文件（.vcf.gz）。
<br>-o haplo.mult.hc.gall.all.snps.noindels.nomultiallele.awk.het0.15.GQ30.AD2.noSEA.missing0.05.vcf.gz：指定输出文件的名称。






<br> 总结<br>这段代码的作用是：<br>
<br>使用 ls 命令列出所有符合模式 *AD2.noSEA.missing0.05.vcf.gz 的文件。
<br>使用 xargs 命令将这些文件作为参数传递给 bcftools concat 命令进行合并。
<br>使用 bcftools concat 命令将这些 VCF 文件合并成一个压缩的 VCF 文件，输出文件名为 haplo.mult.hc.gall.all.snps.noindels.nomultiallele.awk.het0.15.GQ30.AD2.noSEA.missing0.05.vcf.gz。
<br>使用 nohup 和 &amp; 确保该操作在后台运行，并将所有输出和错误日志记录到 bcftools_all0_8.log 文件中。
<br><br># 统计变异和未变异位点数量,在终端中显示
bcftools +counts haplo.mult.hc.gall.all.snps.noindels.nomultiallele.awk.het0.15.GQ30.AD2.noSEA.missing0.05.vcf.gz
复制<br>结果显示如图（7.4 G，8 M 的位点大概统计了 1 h）<br><img alt="0177bd60a01a783b821db9f6414f1bb.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405241650103.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>软件操作\linux命令行\vcf上游处理全流程.html</link><guid isPermaLink="false">软件操作/Linux命令行/Vcf上游处理全流程.md</guid><pubDate>Fri, 24 May 2024 08:50:13 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405241059254.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202405241059254.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[1 非变异位点]]></title><description><![CDATA[ 
 <br><br>
<br>
检查是否为非变异位点：

<br>如果第五列的值为 .，表示该位点是非变异位点，进入处理逻辑。


<br>
处理每个单元格：

<br>遍历每个单元格 @cells。


<br>
处理基因型字段：

<br>如果单元格以数字和冒号开头，表示它是一个基因型字段。


<br>
进一步处理基因型字段：

<br>将基因型字段按冒号分割成 @FORMAT_array。


<br>
检查 FORMAT/DP 字段：

<br>如果 FORMAT/DP 字段为 .，直接加入输出数组。
<br>如果 FORMAT/DP 字段为数字并且大于 1，直接加入输出数组。
<br>如果 FORMAT/DP 字段为 1，将基因型设为缺失（.），并增加计数，记录变化。


<br>
其他情况：

<br>如果单元格不是基因型字段，直接加入输出数组。


<br><br>
<br>检查是否为多等位基因位点：

<br>如果当前行的第五列包含逗号，表示该位点是多等位基因位点，进入处理逻辑。
<br>增加多等位基因位点计数，并将当前行写入多等位基因位点文件。


<br>处理每个单元格：

<br>遍历当前行中的每个单元格。
<br>如果单元格不是基因型字段（不以数字和冒号开头），直接加入输出数组。


<br>处理基因型为 0 的字段：<br>
<br>如果单元格是基因型为 0 的字段，分割基因型字段。
<br>检查 FORMAT/DP 字段是否存在且不包含逗号。如果不存在或不包含逗号，直接加入输出数组。
<br>如果 FORMAT/DP 字段为 .，直接加入输出数组。
<br>处理 AD 字段，如果存在三个用逗号分隔的数字：

<br>获取 AD 值并计算其他等位基因的支持和。
<br>如果其他等位基因没有支持，直接加入输出数组。
<br>如果参考等位基因没有支持，将基因型设为缺失，并记录变化。
<br>计算 AD 比率并判断阈值，如果比率在阈值内，直接加入输出数组，否则将基因型设为缺失，并记录变化。


<br>处理基因型为 1 的字段：<br>
<br>如果单元格是基因型为 1 的字段，分割基因型字段。
<br>检查 FORMAT/DP 字段是否存在且不包含逗号。如果不存在或不包含逗号，直接加入输出数组。
<br>如果 FORMAT/DP 字段为 .，直接加入输出数组。
<br>处理 AD 字段，如果存在三个用逗号分隔的数字：

<br>获取 AD 值并计算其他等位基因的支持和。
<br>如果其他等位基因没有支持，直接加入输出数组。
<br>计算 AD 比率并判断阈值，如果比率在阈值内，直接加入输出数组，否则将基因型设为缺失，并记录变化。


<br>处理基因型为 2 的字段：<br>
<br>如果单元格是基因型为 2 的字段，分割基因型字段。
<br>检查 FORMAT/DP 字段是否存在且不包含逗号。如果不存在或不包含逗号，直接加入输出数组。
<br>如果 FORMAT/DP 字段为 .，直接加入输出数组。
<br>处理 AD 字段，如果存在三个用逗号分隔的数字：

<br>获取 AD 值并计算其他等位基因的支持和。
<br>如果其他等位基因没有支持，直接加入输出数组。
<br>计算 AD 比率并判断阈值，如果比率在阈值内，直接加入输出数组，否则将基因型设为缺失，并记录变化。


<br>]]></description><link>软件操作\linux命令行\vcf上游perl脚本的过滤原理.html</link><guid isPermaLink="false">软件操作/Linux命令行/vcf上游perl脚本的过滤原理.md</guid><pubDate>Sat, 27 Jul 2024 09:30:59 GMT</pubDate></item><item><title><![CDATA[谷歌API的启用]]></title><description><![CDATA[ 
 <br>
<br>
网址，登录谷歌邮箱<br>
<a data-tooltip-position="top" aria-label="https://cloud.google.com/" rel="noopener" class="external-link" href="https://cloud.google.com/" target="_blank">云计算服务 | Google Cloud</a>

<br>
点击控制台<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406121440408.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
点击左上角三道杠，依次点击

<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406121444128.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>搜索Geocoding API<br>
. <img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406121445500.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406121445037.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>启用 API<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406121449306.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>管理使用的 API<br>
选择几个或者都打开其实也行，注意安全性，不要泄露<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406121449811.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406121448027.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>软件操作\谷歌api的启用.html</link><guid isPermaLink="false">软件操作/谷歌API的启用.md</guid><pubDate>Wed, 12 Jun 2024 06:49:48 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406121440408.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406121440408.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[通配符]]></title><description><![CDATA[ 
 <br>\D[0-9]+.Y.bam<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408280955476.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>其中 \D 代表的是大写<br>
然后[0-9]代表所有数字<br>
+.Y.bam 则是后缀]]></description><link>软件操作\通配符.html</link><guid isPermaLink="false">软件操作/通配符.md</guid><pubDate>Wed, 28 Aug 2024 01:57:13 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408280955476.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408280955476.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[用API查询经纬度]]></title><description><![CDATA[ 
 <br>
<br>
输入文件：包含省和市的 txt，tab 键分割，无表头，会精确查询到第二列<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406121510139.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
准备好 API ，填入脚本运行即可

<br>import googlemaps
import csv

# 替换为你的Google Maps API密钥
api_key = ''
gmaps = googlemaps.Client(key=api_key)

# 从文件中读取省份和市区列表
file_path = 'C:/Users/LuzHu/Desktop/地区.txt'
with open(file_path, 'r', encoding='utf-8') as file:
    # 分割每一行来获取市区名称
    regions = [line.strip().split('\t')[1] for line in file if '\t' in line]

# 查询市区的经纬度并实时写入CSV
output_file = 'C:/Users/LuzHu/Desktop/result.csv'
with open(output_file, 'a', newline='', encoding='utf-8') as csvfile:
    writer = csv.writer(csvfile)
    # 写入标题行
    writer.writerow(['Region', 'Latitude', 'Longitude'])
    
    for region in regions:
        geocode_result = gmaps.geocode(region)
        if geocode_result:
            location = geocode_result[0]['geometry']['location']
            writer.writerow([region, location['lat'], location['lng']])
            print(f"Processed {region},{location}")
        else:
            writer.writerow([region, None, None])
            print(f"Processed {region}, no location found")
        csvfile.flush()

print("Data has been saved to CSV.")
复制]]></description><link>软件操作\用api查询经纬度.html</link><guid isPermaLink="false">软件操作/用API查询经纬度.md</guid><pubDate>Wed, 12 Jun 2024 07:12:07 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406121510139.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406121510139.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[AI中批量替换颜色]]></title><description><![CDATA[ 
 <br>
<br>
用选择工具选中要更改颜色的形状<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409061431192.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
选择相同外观的所有形状（根据情况可能是选择相同描边、填充颜色等）<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409061433146.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409061434373.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>
双击左下角填充颜色，可以在拾色器内输入颜色编码（红色框内），也可以直接在色谱上选择<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409061435452.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
例如我直接选择这个绿色，点击确定<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409061437955.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>效果<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409061437301.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>或者输入颜色编码，可以在这个网站上搜索搭配，或者微信公众号也有很多配色帖子<br>
<a data-tooltip-position="top" aria-label="https://aicolors.co/" rel="noopener" class="external-link" href="https://aicolors.co/" target="_blank">AI Color is a Palette Generator - Browse, Edit, Visualize and Generate Unique Color Palettes (aicolors.co)</a><br>
例如，直接点击选中的颜色就可以复制<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409061439150.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">
<br>输入到刚刚的框中<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409061441815.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>完成替换颜色<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409061441931.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>软件操作\ai中批量替换颜色.html</link><guid isPermaLink="false">软件操作/AI中批量替换颜色.md</guid><pubDate>Fri, 06 Sep 2024 06:43:31 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409061431192.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409061431192.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Beast-bModelTest下载]]></title><description><![CDATA[ 
 <br>
<br>
直接在 BEAUti 2里面下载，如图点击<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409030942748.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
选择模型，点击 install（这里已经安装了）<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409030943674.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
如果显示连接超时，可以在官网中下载，点击链接就可以跳转<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409030945412.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
在这个界面点击 code<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409030946212.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
点击 release<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409030946931.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>点击下载<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409030947682.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>
下载后，解压<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409030939792.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
手动解压后，放在文件目录下<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409030947230.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
放进去就可以<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409030948166.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
重启 BEAUti 就可以了

]]></description><link>软件操作\beast-bmodeltest下载.html</link><guid isPermaLink="false">软件操作/Beast-bModelTest下载.md</guid><pubDate>Tue, 03 Sep 2024 01:48:56 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409030942748.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409030942748.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[1 obsidian]]></title><description><![CDATA[ 
 <br><br>
<br>
写好笔记后点击左侧的文件夹标记<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408301604078.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
选择上传的内容后点击 export<br>
<img alt="a4534c76cec0a0c841ba4e1ae62cb07.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408301603914.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>显示正在上传，完成后就不用管了<br>
<img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408301605629.png" referrerpolicy="no-referrer"><br><br>
<br>
点击左下角的 summary，随便输出一个内容，例如1，然后点击 commit to main<br>
<img alt="5da3d324bfa23cdf3735128aea6068e.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408301606747.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
点击右侧 push，等待完成就可以了<br>
<img alt="840a147705fed1dd8fecacaea29fbc6.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408301607856.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br><br>建立 homepage 就可以直接去看主页，没有的话只能暂时用链接的形式。需要登录到我的 github 中 <a data-tooltip-position="top" aria-label="https://github.com/Gianthuihui/ObsidianNotebook" rel="noopener" class="external-link" href="https://github.com/Gianthuihui/ObsidianNotebook" target="_blank">Gianthuihui/ObsidianNotebook (github.com)</a>。<br>看不同的文件时，修改 https://gianthuihui.github.io/ObsidianNotebook/ 之后的内容，即加上所属文件夹和相关文件 html<br>
例如：<br>
<a data-tooltip-position="top" aria-label="https://gianthuihui.github.io/ObsidianNotebook/%E8%BD%AF%E4%BB%B6%E6%93%8D%E4%BD%9C/%E5%88%86%E6%9E%90%E8%BD%AF%E4%BB%B6/%E4%BB%8Evcf%E8%8E%B7%E5%BE%97%E5%B8%A6%E5%8D%95%E5%80%8D%E7%BE%A4%E4%BF%A1%E6%81%AF%E7%9A%84fasta.html" rel="noopener" class="external-link" href="https://gianthuihui.github.io/ObsidianNotebook/%E8%BD%AF%E4%BB%B6%E6%93%8D%E4%BD%9C/%E5%88%86%E6%9E%90%E8%BD%AF%E4%BB%B6/%E4%BB%8Evcf%E8%8E%B7%E5%BE%97%E5%B8%A6%E5%8D%95%E5%80%8D%E7%BE%A4%E4%BF%A1%E6%81%AF%E7%9A%84fasta.html" target="_blank">https://gianthuihui.github.io/ObsidianNotebook/软件操作/分析软件/从vcf获得带单倍群信息的fasta.html</a><br>
复制链接到浏览器就可以看到了<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408301603167.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>林的 github<br>
<a rel="noopener" class="external-link" href="https://github.com/Victory-Hugo/obsidian-notebook/tree/main" target="_blank">https://github.com/Victory-Hugo/obsidian-notebook/tree/main</a>]]></description><link>软件操作\github笔记上传操作.html</link><guid isPermaLink="false">软件操作/Github笔记上传操作.md</guid><pubDate>Fri, 30 Aug 2024 08:09:59 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408301604078.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408301604078.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Python]]></title><description><![CDATA[ 
 <br><br>
<br>在 vsc 桌面进入的工作区执行 python 操作时，在终端中安装，使用的是 python，例如
<br>pip install matplotlib
复制<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406032151802.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>在vsc的wsl中执行 python 操作时，在终端中安装，使用的是 python 3
<br><br>
<br>安装包，可以在代码行中进行安装，注意引号是英文的
<br>install.packages("ggpubr")
复制<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406041050295.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>软件操作\python、r安装包的方法.html</link><guid isPermaLink="false">软件操作/python、R安装包的方法.md</guid><pubDate>Thu, 13 Jun 2024 14:27:18 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406032151802.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202406032151802.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[windows端下载软件iqtree2]]></title><description><![CDATA[ 
 <br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408022112778.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408022112568.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>不需要点击安装，只需要解压并知道路径就可以了<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408022112370.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408022112763.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408022113087.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>大坑啊!!!注意软件的名字，如果是 iqtree2，就不要用 iqtree，否则是不能运行的！<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408022113307.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>软件操作\windows端下载软件iqtree2.html</link><guid isPermaLink="false">软件操作/windows端下载软件iqtree2.md</guid><pubDate>Fri, 02 Aug 2024 13:13:54 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408022112778.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202408022112778.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[数据准备]]></title><description><![CDATA[ 
 <br><br><br>需要美化的原始树文件，为 nwk 格式。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409011757591.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>自己整理的样本信息文件，被称为元数据metadata，格式为 txt。<br>
注意，表头都不能改，只能是 ID，Label，Strip，Branch，Range，Symbol 等，否则 R 包无法识别。ID 列是树文件中的原始 ID，一定要和一一对应，Label 是需要替换的 ID，其他的几列请按照自己的分组需求进行安排<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409131508450.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>文本示例<br>ID	Label	Strip	Branch	Range	Symbol
X111.1694.3181_C1a1a1a1Korean_Heilongjiang1_C1a1a1a1KoreanlinepublishedHeilongjiang
X111.1255.8082_C1b1a1a2aXibe_Liaoning2_C1b1a1a2aTungusiclinepublishedLiaoning
X111.1653.9674_C1b1a1b2Uyghur_Xinjiang3_C1b1a1b2TurkiclinepublishedXinjiang
X111.1781.6958_C1b1a2bZhuang_Guangxi4_C1b1a2bTai_KadailinepublishedGuangxi
HGDP01310_C1b1a2bDai_Myanmar5_C1b1a2bTai_KadailinepublishedMyanmar
X111.1280.1843_C2a1Manchu_Liaoning6_C2a1TungusiclinepublishedLiaoning
X990.0002.7094_C2a1bManchu_Liaoning7_C2a1bTungusiclinepublishedLiaoning
X990.0002.6929_C2a1bManchu_Liaoning8_C2a1bTungusiclinepublishedLiaoning
X111.1805.2478_C2a1bManchu_Liaoning9_C2a1bTungusiclinepublishedLiaoning
X111.1824.6204_C2a1bManchu_Shandong10_C2a1bTungusiclinepublishedShandong
Y2384_C2a1aManchu_Liaoning11_C2a1aTungusiclinepublishedLiaoning
X111.1731.2382_C2a1a1b1a4Kazakh_Xinjiang12_C2a1a1b1a4TurkiclinepublishedXinjiang
X111.1655.7340_C2a1a1b1a4Kazakh_Xinjiang13_C2a1a1b1a4TurkiclinepublishedXinjiang
X111.1855.5092_C2a1a1b1a4Kazakh_Xinjiang14_C2a1a1b1a4TurkiclinepublishedXinjiang
X111.1739.6931_C2a1a1b1a4Kazakh_Xinjiang15_C2a1a1b1a4TurkiclinepublishedXinjiang
X111.1669.3598_C2a1a1b1a2a1Manchu_Beijing16_C2a1a1b1a2a1TungusiclinepublishedBeijing
X111.1261.2081_C2a1a1b1a2a1Manchu_Hebei17_C2a1a1b1a2a1TungusiclinepublishedHebei
复制<br><br>txt 格式文件，这个文件手动准备就行。<br>
有时候会遇到树文件中有些样本需要删除的情况，这个文件的目的就是只保留现有树文件中感兴趣的样本，在本文件中出现的 ID 是保留在树上的样本，未出现的样本则被删除。红框中的两个表头不能更改，直接把需要保留的样本 ID 粘贴到第3行之后就可以。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409011806604.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>PRUNE
DATA
X111.1694.3181_C1a1a1a1
X111.1255.8082_C1b1a1a2a
X111.1653.9674_C1b1a1b2
X111.1781.6958_C1b1a2b
HGDP01310_C1b1a2b
X111.1280.1843_C2a1
X990.0002.7094_C2a1b
X990.0002.6929_C2a1b
X111.1805.2478_C2a1b
X111.1824.6204_C2a1b
Y2384_C2a1a
复制<br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409031023145.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>这部分代码必须要运行，注意修改这三个路径。然后根据自己的需要选择接下来运行的代码，将生成的注释文件拖入 itol 网站的界面就可以了。<br>注意，应该检查下注释文件中样本的数目是否和树文件中的样本数目一致，如果准备的 metadata 文件中 ID 和树文件内的 ID 不一致，会导致无法将 ID 全部替换过来。比如本来有300个样本，生成的注释文件中只有290个样本，可能就是有10个样本的 ID 在树文件和 metadata 中不一样。<br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409031019018.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>这部分代码生成用于替换 label 的注释文件<br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409031024926.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>效果图<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409031055525.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409031047228.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>这部分代码生成用于样本 ID背景的注释文件<br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409031049532.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>效果图<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409031051578.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409031056442.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>这个 strip要先把这一行 branch 给注释掉，才不会改变branch 的颜色<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409061424515.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409031058575.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409031100137.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409031108878.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>其中 nomal 代表实线。如果想要把某些枝变成虚线，可以把在 excel 中将部分 normal 改成 dashed。1和2代表线的粗细，也可以在 itol 中进行调节<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409031112001.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>效果图<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409031113644.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409131449232.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
如果 metadata 里面有些样本不需要添加 symbol，该部分 ID 的 Symbol 列无内容就可以，不会影响代码运行，例如<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409131505893.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409131459908.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>每一个数据的数字有相应的含义，例如 X12001809291229_O1a1a1a1a1b,2,2,#4daf4a,1,1<br>
依次对应的是 ，形状，形状大小，颜色，是否填充，位置。在代码里面不好修改，推荐还是在生成的注释文件里进行相应的设置：<br>
<br>
ID：ID，不用改，就是树文件中的原始 ID

<br>
形状：1 矩形，2 圆形，3星形，4右边尖的三角形，5左边尖的三角形，6勾<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409131425496.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
大小：可以设置成任意值，在 R代码的 size = 2 可以设置，2 为所有样本的形状大小；如果需要强调某些样本，推荐在注释文件中进行设置，如强调的样本设置为最大值，如 10，然后在表头的设置 MAXIMUM_SIZE,10，其他的 ID 对应的大小的值就会成比例的更小些，比如其他 ID 设置成 5，那么形状就会是2倍大小，如图绿色的圈。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409131437013.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409131437250.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
<br>颜色：自己找喜欢的颜色，替换颜色值即可
<br>是否填充：0为仅有轮廓，1为填充形状
<br>位置：大小为0-1，0在枝的根部，1在枝的末端，中间值就在中间位置
<br><br>现在生成的结果文件拖入 itol 里面没有 legend，只能手动添加形状对应的 label<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409131455260.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>填入对应的  label 后，点击 Update dataset legend<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409131455270.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>效果图<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409131513064.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br># 加载必要的R包
library(dplyr)  # 加载dplyr包，用于数据处理和管道操作
library(itol.toolkit)  # 加载itol.toolkit包，用于制作和管理iTOL树图的数据单元
library(data.table)  # 加载data.table包，提供高效的数据读取和操作功能

# 设置工作目录
setwd("C:/Users/LuzHu/Desktop/")  # 将当前R会话的工作目录设置为指定路径

# 读取和处理数据
tree_1 &lt;- "Hui_192_aDNA.nwk"  # 指定新克文件的路径，这个文件包含树的信息
hub_1 &lt;- create_hub(tree_1)  # 创建一个以此树为中心的hub，用于添加不同的数据单元
data_file_1 &lt;- "all_Hui_aDNA_metadata.txt"  # 指定元数据文件的路径
data_1 &lt;- data.table::fread(data_file_1)  # 使用data.table的fread函数读取元数据文件

############################功能1################################################
# 为树的节点添加标签按Label分类
unit_1 &lt;- create_unit(data = data_1 %&gt;% select(ID, Label),  # 从data_1中选取ID和Label列
                      key = "itol_labels",  # 为这个单元设置一个键名
                      type = "LABELS",  # 设置数据单元的类型为标签
                      tree = tree_1)  # 指定这个单元关联的树文件
write_unit(unit_1, paste0(getwd(), "/itol_labels.txt"))  # 将单元写入文件

#############################功能2################################################
# 为树的节点添加颜色，按Range分类
unit_2 &lt;- create_unit(data = data_1 %&gt;% select(ID, Range),
                      key = "itol_range",
                      type = "TREE_COLORS",  # 设置类型为树颜色
                      subtype = "range",  # 子类型为范围，表示颜色将根据指定的范围变化
                      tree = tree_1)
write_unit(unit_2, paste0(getwd(), "/itol_range.txt"))

#############################功能3################################################
# 为树添加颜色条带，按Strip分类
set.seed(123)  # 设置随机数种子，确保颜色选择的可重复性
unit_3 &lt;- create_unit(data = data_1 %&gt;% select(ID, Strip),
                      key = "itol_strip",
                      type = "DATASET_COLORSTRIP",  # 设置类型为颜色条带
                      color = "wesanderson",  # 使用Wes Anderson调色板
                      tree = tree_1)
unit_3@common_themes$basic_theme$margin &lt;- 50  # 设置条带的边缘空白
write_unit(unit_3, paste0(getwd(), "/itol_strip.txt"))

#############################功能9################################################
# 为树添加枝上的形状，按Symbol分类
unit_9 &lt;- create_unit(data = data_1 %&gt;%  select(ID, Symbol),
                      key = "Sample_Symbols", 
                      type = "DATASET_SYMBOL",
                      position = 1,
                      size = 2,
                      subtype = "Symbol",
                      tree = tree_1,
                      fill = 1)
write_unit(unit_9,paste0(getwd(),"/itol_Symbol.txt"))


#############################功能8################################################
# 为树的分支添加颜色和形状，按Branch分类
# 生成每个唯一Branch的随机颜色
Branch_unique &lt;- unique(data_1$Branch)  # 提取所有唯一的Branch值
set.seed(123)  # 设置随机种子以保证颜色可以复现
colors &lt;- sample(colors(), length(Branch_unique), replace = FALSE)  # 为每个Branch随机分配颜色
Branch_colors &lt;- setNames(colors, Branch_unique)  # 创建一个以Branch为名称、颜色为值的向量
data_1$Color &lt;- Branch_colors[data_1$Branch]  # 将颜色值分配给相应的Branch
unit_colors &lt;- create_unit(data = select(data_1, ID, Color),
                           key = "itol_random_Branch_colors",
                           type = "TREE_COLORS",
                           subtype = "branch",  # 指定subtype为branch，可以改为range或clade
                           tree = tree_1)  # 请替换为您的树文件名称
write_unit(unit_colors, paste0(getwd(), "/itol_Branch.txt"))




#############################功能4################################################
# 添加柱状图，表示某个数值特征
# unit_4 &lt;- create_unit(data = data_1 %&gt;% select(ID, NS),
#                       key = "itol_3al_4_simplebar",
#                       type = "DATASET_SIMPLEBAR",  # 类型为简单柱状图
#                       tree = tree_1)
# unit_4@specific_themes$basic_plot$size_max &lt;- 100  # 设置柱状图的最大宽度
# write_unit(unit_4, paste0(getwd(), "/itol_3al_4_simplebar.txt"))

#############################功能5################################################
# 添加多数据柱状图，同时表示多个数值特征
# unit_5 &lt;- create_unit(data = data_1 %&gt;% select(ID, NS, OS),
#                       key = "itol_3al_5_multibar",
#                       type = "DATASET_MULTIBAR",  # 类型为多数据柱状图
#                       tree = tree_1)
# unit_5@specific_themes$basic_plot$size_max &lt;- 100  # 设置柱状图的最大宽度
# write_unit(unit_5, paste0(getwd(), "/itol_3al_5_multibar.txt"))

#############################功能6################################################
# 添加梯度色柱状图，用于展示数据的变化
# unit_6 &lt;- create_unit(data = data_1 %&gt;% select(ID, Dissimilarity),
#                       key = "itol_3al_6_gradient",
#                       type = "DATASET_GRADIENT",  # 类型为渐变数据集
#                       tree = tree_1)
# unit_6@specific_themes$heatmap$color$min &lt;- "#0000ff"  # 设置渐变的最小颜色
# unit_6@specific_themes$heatmap$color$max &lt;- "#ff0000"  # 设置渐变的最大颜色
# write_unit(unit_6, paste0(getwd(), "/itol_3al_6_gradient.txt"))

#############################功能7################################################
# 绘制热图，用于展示多个变量的组合数据
# unit_7 &lt;- create_unit(data = data_1 %&gt;% select(ID, NS, OS),
#                       key = "itol_7_heatmap",
#                       type = "DATASET_HEATMAP",  # 类型为热图
#                       tree = tree_1)
# write_unit(unit_7, paste0(getwd(), "/itol_7_heatmap.txt"))
复制]]></description><link>软件操作\分析软件\r语言\r包：itol注释文件的使用.html</link><guid isPermaLink="false">软件操作/分析软件/R语言/R包：itol注释文件的使用.md</guid><pubDate>Fri, 13 Sep 2024 07:14:39 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409011757591.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/obsidian/202409011757591.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[从简单词Good开始]]></title><description><![CDATA[ 
 <br>就像送一个八音盒给家人，加或者不加包装，差别很大，同时也让你的礼物本身有了让人更喜欢/没那么吸引人的区别。<br>语言也是如此，表达同一个意思，但说法不同，效果大有不同。<br><br>首先，请列出和good相近含义的一些词<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402290923450.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>揭晓答案<br>
good的近义词，1-5很常见，但如果用上了6-7，就会变得更加独特<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402290921956.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>你可能觉得改变一个词没什么大不了，但实际上通过替换常见词（common word），可以让我们的语言变得更多样化（varied），同时显得更流畅（fluent）。<br><br>现在我们来看同义替换是否真的会有所不同。<br>假如只用good，效果会是这样<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402290928957.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>但假如用刚刚提到的词去替换good<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402290930230.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>你会发现，这样更加流程了，而你只换了一个词而已！<br>所以，请牢记这个问题：How you say it is just as important as what you say.<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402290931848.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>假如别人邀请你吃饭并评价这顿饭，而你只会说good，那你可能再也不会被邀请了~<br>实际上可以这样<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402290934583.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>可能这略显复杂，那么刚开始需要做的其实就是替换掉你想说的常见词<br>
假如你本来想说：I think the dinner was good，替换掉常见词<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402290936691.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>你就会得到这句话：In my opinion, the dinner was fantastic.<br><br>要学会再说话时自如的替换常用词汇<br>
It is important to be comfortable about changing thing around when we speak.<br>换句话说，就是要creative<br>尝试不同的东西，实验自己的语言<br>
Try different things, experiment with your language]]></description><link>小鹿绅士\1-文体学概述：开始创造性地使用语言.html</link><guid isPermaLink="false">小鹿绅士/1 文体学概述：开始创造性地使用语言.md</guid><pubDate>Thu, 29 Feb 2024 01:41:43 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402290923450.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202402290923450.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[1 以猫为例]]></title><description><![CDATA[ 
 <br>假如你家有一只漂亮的猫，现在要你不看照片，用英语描述她的漂亮，你会发现这很困难<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403010927622.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>能否恰当的描述事物，是英语能力的重要一环<br>
Describing things properly makes a huge a difference in your English level<br><br>那么如何描述一个事物呢？回到这只猫上<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403010930132.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>首先，我需要做的事陈述这个事物的存在<br>
Well, first and foremost I need to state that the object exists<br>也就是说<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403010930593.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>陈述事实是描述任何事物的基础<br>
Stating the subject is the foundation on which we build any type of description<br>当有了事实过后，就只需要添加一些细节，就能让整个内容变得丰满。<br><br>那么如何变得丰满呢？<br>首先是形容词<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403010933194.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>事实上，用两个形容词一起来形容某个事物是很常见的，比如，在这里可以再加上一个形容颜色的adj<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403010935300.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>现在用上述方式练习一下<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403010936670.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>但是注意，如果用3个及以上形容词，句子就会显得很奇怪了。<br>所以需要用到一些little helpful words来把句子分开，例如 with，现在整个句子的细节又增加了，并且不至于显得奇怪<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403010940840.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>现在请练习一下<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403010941130.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>现在看起来已经丰满多了，但是还可以继续添加，另一个little helpful words也很好用，那就是that<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403010944451.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>再举一个例子，你可以发现，这样句子就变得复杂一些了<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403010946247.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>在把技巧用上，来造就你的final beautiful sentence<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403010947979.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>现在揭晓一种答案<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403010948882.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403010949152.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>你瞧，无论描述人或者物，添加细节是核心<br>
So as you can see adding details is the key to successfully describing anyone or anything<br>所以可能会问：什么样的细节才足够多呢？<br>事实上，永远不够。但对于基本的描述事物，已经足够了。<br>不要忘记，你不需要用特别复杂的词汇<br>
And always remember, you don't need to use any elaborate complex words<br>只需要把你已知的词汇用有创造力的方式使用出来就可以了！<br><br>如何在使用语言时更加有创造性呢？<br>这次再次以猫为例，但关注一下她的缺点。<br>两个形容词<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403010956777.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>加上with<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403010957017.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>加上that<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403010958830.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>现在你可能完全不再喜欢这只猫了。所以你发现了吗？不同的描述侧重点将带来完全不同的感受。<br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403011002311.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>揭晓答案<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403011003537.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403011005211.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>要有创造性，那么你就要学会看到事物的正反面，要记得使用little helpful words，如with、that等<br>顺便回顾一下上次课程提到的同义替换（rephrasing/paraphrasing），这非常重要，总会有更好的词来使句子变得更美<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403011008224.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>再回到今天的课程中，有些词可以换一下<br>关于cute<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403011010261.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>关于big<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403011010444.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>关于sleep<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403011011108.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>关于fat<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403011011251.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>关于lazy<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403011011069.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>关于smelly<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403011012270.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>关于like<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403011013294.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>小鹿绅士\2-句子扩展：让语句更加具体且形象.html</link><guid isPermaLink="false">小鹿绅士/2 句子扩展：让语句更加具体且形象.md</guid><pubDate>Fri, 01 Mar 2024 02:13:12 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403010927622.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403010927622.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[3 同义表达：使用有自己特色的语言]]></title><description><![CDATA[ 
 <br>前文已经提到了rephrasing，即替换，它的含义是：<br>改变表达方式但不改变表达意思<br>
changing the form of your words without changing the meaning<br>今天，将要集中讨论一种替换，即同义词替换，使用synonym，那么什么是synonym呢？<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403041445245.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>为什么要使用synonym？<br>
因为如果一直重复某个词，对话会显得很呆板。同义词就可以避免这个问题。<br><br>例句为：<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403041448116.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
go是个非常广泛的词，可以包含很多含义<br>现在开始替换<br>
travel，更明确<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403041449436.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>fly，指明go的方式<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403041451133.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>take train，去的方式<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403041517454.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>visit，目的要去干嘛<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403041518478.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>relocat，重新安置到某地，比如是因为公司搬迁之类的，也是表目的<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403041520962.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>move，搬去<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403041522567.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>顺便提到3个表示离开的词<br>immigrate，移民<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403041522310.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>run，犯罪了跑路<br>
我要逃到英国躲起来<br>
I will run to London to hide.<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403041525246.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>tour，感觉和travel很像，但更多表示是跟旅游团<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403041526923.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>就算是简单词go，都有这么多的近义词<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403041527362.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>这些词可以被替换，取决于我具体在做什么，所以通过使用同义词，可以更精确地描述我如何去伦敦，以及去的原因。<br>因为只简单的说去的话，你可能表达的意思很多<br>
Because by simply saying go, you could mean anything<br>不要忘记我总是说的:要有创造力<br>
ust always remember the advice l constantly give you, which is be creative.<br>但是不要逼着自己去找意思完全相同的同义词！<br>
比如good和great<br>当你在利用同义词替换时，应该更加灵活一些！<br>
例如我刚才给你的例子:逃跑和搬家<br>
他们是完全不同意思的词，相互之间并不是同义词<br>
但对于go来说，他们又都是同义词<br><br>例句为做作业<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403041535141.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>现在试著找几个同义词<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403041536821.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>现在揭晓几个同义词<br>搞定我的作业<br>
I am taking care of my homework.<br>写作业而不是读作业<br>
I am writing my homework.<br>数学不行，可能在抄作业<br>
I am copying my homework.<br>可能性不高哈哈<br>
I am eating my homework.<br>再次重申！！！要有创造力<br>
不要限制自己说话的方式<br>
Do not restrain yourself in the ways you speak.<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403041540912.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>首先，替换形容词和动词，因为这些是最容易找到替换的词。<br>当然也可以替换名词，如shoes和footwear，但这对词汇量的要求更高。<br>为了能够替换得更好，需要不断地去实验/尝试。寻找身边的物品，去描述它们，然后再将描述内容做替换。<br>
再次以猫为例：替换掉cute和fat<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403050915148.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>只有当你不断去使用替换时，才能训练大脑不停地寻找、使用同义词，久而久之就会有一个备选的同义词库<br>比如这些东西，都可以尝试去替换<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403050926687.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>现在马上练习一下，来描述一下小鹿绅士，尝试替换一下handsome和smart<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403050930341.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>同时可以结合所学，把之前讲的更全面的描述运用起来<br>step1：添加第2个形容词<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403050932908.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>step2：加上小词with<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403050933090.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>step3：用who构成从句，或使用and来增加一个特征<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403050934500.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>step4：rephrase形容词<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403050935325.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>最后，选择一个句子来进行扩写和替换<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403050937644.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>小鹿绅士\3-同义表达：使用有自己特色的语言.html</link><guid isPermaLink="false">小鹿绅士/3 同义表达：使用有自己特色的语言.md</guid><pubDate>Sat, 23 Mar 2024 07:41:43 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403041445245.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403041445245.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[4 连接词：让独立的句子变成更加流畅的段落]]></title><description><![CDATA[ 
 <br>在说英语时，经常遇到的问题是不知道如何将话题继续进行下去<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403081417734.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>即使开始了一个话题，也不知道该如何继续下去，结果只说了一句话，当然就显得不够流畅<br>举个例子，描述朋友买了一条新裙子<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403081418949.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>然后大多数人就停下来了，不知道说啥。那么如何去扩展句子呢？<br>
其实就是在之前所说的主题（她穿裙子）之下，找一些关联的话题<br><br>假如继续使用之前学过的技巧，加一些细节。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403081423469.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403081425603.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>连接词可以让句子自然地连接在一起。<br>继续刚刚的话题，现在找到和主题相关的句子。这两句可以告诉我们更多关于Mary穿着的细节信息。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403081426490.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>如果我直接这样把三句话说出来的话，会显得很笨拙<br>
If l was to put the sentences just the way they are. lt will sound a little clumsy when l say it.<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403081430255.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>所以需要用连接词把他们组合在一起。<br>现在自己想三句话，第一句是主题，其他两句是补充信息<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403081434170.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>连接词可以分成3种<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403081435423.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>addition=and，代表连续性，接下来的内容同意之前所表达的，即给出与前一句子一致的更多信息<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403081437413.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>然后可以用其他词来替代and<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403081438972.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br> 现在是练习时间，在屏幕上的句子后面加一句话。<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141422480.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>contrdiction=but，对立或者对立词用来给出与之前句子不一致的信息<br>同样以前句为例，一个是肯定，一个是否定，所以连接词应该用对立词<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141425203.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>随便举一个例子<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141426630.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>同义词有哪些呢？<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141427807.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>练习时间到啦！<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141427904.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>result=so，结果类连接词，前后两句应当给出因果<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141428974.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>再回到刚才的例子<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141429403.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>同义词来袭！<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141429848.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>练习啦！<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141430147.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>得体的语言不会是平铺直叙的<br>
Proper speech is never on the same line.<br>不会永远是统一的或者对立的，语言应该灵活<br>
You don't only say positives or negatives. Your speech is alive.<br>例如，用上这些连接词后，语言就自然流畅多了！<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141431302.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>现在我们来试试用上所学的各种连接词，并且学会分析哪些是添加，哪些是对立，哪些是因果<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141433006.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>记住，这些词不仅仅是词汇而已，更是一种帮助你说得更多的方式<br>
它们可以帮助你多说一些，多想一些<br>
They are the helpful words that will allow you speak more, to think more,<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141436371.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>小鹿绅士\4-连接词：让独立的句子变成更加流畅的段落.html</link><guid isPermaLink="false">小鹿绅士/4 连接词：让独立的句子变成更加流畅的段落.md</guid><pubDate>Thu, 14 Mar 2024 06:36:24 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403081417734.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403081417734.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[5 细节词汇：增加句子的信息量，更加生动的描述]]></title><description><![CDATA[ 
 <br>今天，我们将介绍另一类有相似连接作用的词汇，并且可以用来扩展的句子的词——detailing words 细节词<br>这些词是用来给一句话加入更多的细节信息，同时不会将一句话拆分开<br>举个例子，当我们不使用细节词时，之前形容猫的1个句子会变成2个句子<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141440678.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>但假如我们用上了细节词，如that，就不会中断这个句子<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141441572.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>这些词汇的作用是，它们让我们继续我们的句子，不会中断它们<br>
Now that is what these words do, they simply allow us to continue our sentence without breaking it.<br>细节词list如下<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141442366.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>who当然是用来谈论人的<br>
“who'’ is of course the word we use to talk about people.<br>不用细节词，2个句子<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141443664.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>用上了细节词，1个句子<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141444570.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>练习时间！<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141445627.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>whom和who很像，但他们的用法略有不同，如果第一个人对第二个人发起了任何动作就应该用whom<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141506290.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>例如，使用who来描述他人时，二者是没有相互作用的<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141502409.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>但是用whom时，应该是二者有什么联系，产生了动作met，如下<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141505769.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>这时候产生了一个动作，就用whom<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141505369.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br> 例如<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141507500.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>练习时间到<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141510511.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>可以描述绝大多数的物品，给出更多的信息<br>例如<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231528297.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231528077.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>练习时间<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231528657.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>这个词很特别，因为几个原因<br>第一个原因，它的读音和witch一模一样，女巫<br>
第二个原因，它用于描述一件被很多同类物品包围的东西<br>
to point out a detail about an object that has other objects around it.<br>举个例子来理解它：假如给你一颗糖，你可以用that来说<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231531204.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>但假如有很多糖，就会用which这样问，因为有很多，代表可以选择<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231532032.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>所以，我们在多个物品可能被谈及的时候用它<br>
We use it when there is more than one object that could be referred to<br>例如<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231533974.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231534802.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>练习时间<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231534851.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>where用来描述地点<br>例如<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231535861.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231535977.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>练习时间<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231536749.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>when用来添加时间方面的细节<br>例如<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231537845.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231537185.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>练习时间<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231537572.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>现在有三个句子，我们使用所学变成连贯的句子<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231539333.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>用连接词和细节词连在一起<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231540675.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>练习时间<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231540394.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">]]></description><link>小鹿绅士\5-细节词汇：增加句子的信息量，更加生动的描述.html</link><guid isPermaLink="false">小鹿绅士/5 细节词汇：增加句子的信息量，更加生动的描述.md</guid><pubDate>Sat, 23 Mar 2024 07:40:36 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141440678.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403141440678.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[6 风格：不同场景下的不同表达风格]]></title><description><![CDATA[ 
 <br>就像每天干的事情不同，穿的衣服也不同一样，语言也有不同语境之下的风格<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231545961.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>我们一般把语言分成两类，正式和非正式<br>
Generally we tend to simply divide them into two groups: formal and informal speech<br>但之下也有很多亚群，也就是types of sentences，即不同的风格<br><br>用来传递直截了当的事实，例如<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231549508.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>大部分都是基本句型，现在想一个简单句，如My cat is sleeping<br><br>用来描述具体细节，如讲故事，我们之前扩展句子的很多技巧都属于它。例如<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231552040.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>描述句会比简单的信息句长得多，因为它的存在本来就是要尽可能的给出细节信息<br><br>用来给出重要问题：这都是为什么？ 旨在分析信息句中对事实的描述，并试图解释它。<br>
一般都会有一些关键词，例如<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231556743.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>分析句不会描述也不会给出细节，而是回答why，例如<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231558741.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>再给两个句子来帮助理解分析句<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231559290.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>一般在写作中才会用到，是一种非常有艺术感的句子，所以有时候很难写出来，因为需要准确表达感情<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403242210623.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>例如，回到猫上面<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403242211322.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>然后我们可以分析下句子的成分，会发现前面是信息句，而后面则是叙述（使用了比喻）<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403242212774.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>或者另外一个句子，描述了看到该场景过后我的感受<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403242214977.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>因为叙述句是文艺的，所以创作空间很大，规则比较少。不过仍然有一些短语可以帮助我们使用叙述句<br>
<br>
feel like<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403242220823.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
make sb / was xx

<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403242221789.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>现在尝试把一个informative sentence 变成narrative sentence<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403242223628.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><br>就是缩短词语<br>例如<br>
thank you=tx/thx<br>
Laughing out loud =L0L<br>
sleeping=zzz<br>这种方式一般见面不会使用，但是短信啥的比较常见]]></description><link>小鹿绅士\6-风格：不同场景下的不同表达风格.html</link><guid isPermaLink="false">小鹿绅士/6 风格：不同场景下的不同表达风格.md</guid><pubDate>Sun, 24 Mar 2024 14:26:53 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231545961.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403231545961.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[7 比喻：通过明喻或暗喻描述物品及人物]]></title><description><![CDATA[ 
 <br>今天是一个炎热的夏天，我感觉像茶壶一样<br>
Today is a hot summer day, so l feel like a tea kettle<br>这句话听起来可能会很奇怪，但实际上这是一个analogy，比喻<br>
比喻在英文中有很重要的位置，让你的语言从简单的叙述，变成真正美丽的文字<br>首先我们要知道，实际上有两种比喻：明喻和暗喻，前者有like/as这样的词，后者没有<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403270949542.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>
明喻：<br>
I feel like a tea kettle.<br>
暗喻：<br>
I am a tea kettle today.]]></description><link>小鹿绅士\7-比喻：通过明喻或暗喻描述物品及人物.html</link><guid isPermaLink="false">小鹿绅士/7 比喻：通过明喻或暗喻描述物品及人物.md</guid><pubDate>Wed, 27 Mar 2024 01:50:54 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403270949542.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403270949542.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[8 强调：通过重音强调，让语言听起来]]></title><description><![CDATA[ 
 <br>说话有抑扬顿挫，也就是有重音。<br>
我们通过重音调集听者的注意力，以表示这是更加重要的信息。<br>
to put the listeners attention onto certain words to indicate that something is more important<br>
<br>syllable stress<br>
音节重音施加在词汇的某个音节<br>
Syllable is applied to a single syllable inside a word
<br>这通常是固定的，不能随便更改<br>
<br>word stress<br>
词汇重音就是句子中某个词的重音，与音节重音不同的是，词汇重音可以随意更改
<br>例如，简单的句子How are you today，四个词就可以有4个不同的词汇重音<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403250929387.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>英文的每句话中，总会有重音存在，所以随便一句话，你在读的时候实际上都不自觉加上了重音<br>实际上你可能发现了，根据重音的不同，句子听起来区别会很大。<br>
音节重音是为了正确的读出一个词，而<br>
词汇重音存在的意义，是强调一句话所表达的含义<br>
Word stress exists in order to indicate the meaning of a sentence<br>举个例子<br>
<br>
放在我-I上面，意味着有人买了车，但不是我<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403260931897.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
放在didn't上，今天没有买车，强调这个动作<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403260932124.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
放在buy上面，说明我的确有一辆车，但不是买的，可能中抽奖中的，偷的等等<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403260933305.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
放在car上面，说明确实买了什么东西，但不是车，可能是马、自行车等<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403260935169.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
放在today，说明不是今天买的，可能是其他时候<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403260936571.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>
放在a，也可以，说明买了不止1辆车<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403260937018.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;">

<br>所以你发现了，重音可以强调你所想表达的含义，所以是很重要的，每个词都可以加重音<br>
Stress simply indicates what are you talking about<br>重音朗读是学习重音的一种练习方式，也就是把重音放在每个词来读一读<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403260941113.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>所以不同的重音会呈现不同的意思，在聊天的时候一定要注意重音放置的位置，不然就会很尴尬哟！]]></description><link>小鹿绅士\8-强调：通过重音强调，让语言听起来.html</link><guid isPermaLink="false">小鹿绅士/8 强调：通过重音强调，让语言听起来.md</guid><pubDate>Tue, 26 Mar 2024 01:44:32 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403250929387.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403250929387.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[9 礼貌语言：让自己的语言更加礼貌]]></title><description><![CDATA[ 
 <br>有些人问问题时会说你想喝点茶吗，你可能会直接说要或者不要，这里只考虑了功能，而并不会注重礼貌。<br>
有一些简单的词，可以凸显礼貌。<br>你想喝点茶吗?好的谢谢或不谢谢你<br>
Would you like to have some tea? Yes, please. Or no Thank you.<br>但实际上可以用一些方式来显得更有礼貌<br>
<br>基于你的感受：feeling<br>
例如，如果我很高兴和你一起喝茶，因为我喜欢和你在一起<br>
For example, if l'm happy to have some tea with you because l enjoy your company
<br>那这时候可以回答说<br>我很乐意和你一起喝茶<br>
I would be very happy to have some tea with you<br>另外还有一些词可以替换<br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403260950446.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>例如，用于request或offer<br>
哦，我很乐意和你一起完成这个项目<br>
Oh, l would be charmed to finish this project with you.<br>
It would be fascinating xxx.<br>
<br>如何礼貌地说No<br>
可以用一个positive word+but<br>
l would love to help you but I'm rather busy these days
<br>或者加上一些词<br>
unfortunately<br>
alas<br>
sadly<br>
unluckily<br>
例如 I would love to help you, but unfortunately l'm rather busy these days<br>
<br>如何礼貌地提出要求<br>
一个常见错误是使用太多的can（有能力），这并不礼貌，所以需要被softened，一般使用would和may<br>
would用来请求别人帮助，因为would是表示是否有意愿<br>
Would you help me with my homework, please?<br>
Would it be possible for you to help me with my homework?
<br>may用来请求别人允许自己做某事，因为may是表示请求<br>
May l use your phone?<br>
May l use the bathroom?<br>
May I call you later?<br>
May l answer this question in a different way?<br>现在是练习时间<br>
<img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403270943573.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br><img alt="image.png" src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403270943389.png" referrerpolicy="no-referrer" style="width: 500px; max-width: 100%;"><br>总结一下：<br>
<br>can不礼貌，要用would/may
<br>不要干巴巴地只说yes/no，也不太礼貌，可以加一些feeling在里面
<br>不要忘记说please
]]></description><link>小鹿绅士\9-礼貌语言：让自己的语言更加礼貌.html</link><guid isPermaLink="false">小鹿绅士/9 礼貌语言：让自己的语言更加礼貌.md</guid><pubDate>Wed, 27 Mar 2024 01:45:48 GMT</pubDate><enclosure url="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403260950446.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://picturerealm.oss-cn-chengdu.aliyuncs.com/Gianthuiobsidian/202403260950446.png"&gt;&lt;/figure&gt;</content:encoded></item></channel></rss>